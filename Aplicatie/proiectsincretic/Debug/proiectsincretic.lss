
proiectsincretic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000246  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001d2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000246  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000246  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000278  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000003b6  00000000  00000000  00000338  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000202  00000000  00000000  000006ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000308  00000000  00000000  000008f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000cc  00000000  00000000  00000bf8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000220  00000000  00000000  00000cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000078  00000000  00000000  00000ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00000f5c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__vector_9>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__vector_11>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:


int main(void)
{	
	
	PWM_init();
  90:	0e 94 52 00 	call	0xa4	; 0xa4 <PWM_init>
	timer1_init();
  94:	0e 94 a0 00 	call	0x140	; 0x140 <timer1_init>
	timer2_init();
  98:	0e 94 b2 00 	call	0x164	; 0x164 <timer2_init>
	sei();
  9c:	78 94       	sei
    /* Replace with your application code */
    while (1) 
    {
		PWM_fadein_fadeout();
  9e:	0e 94 5a 00 	call	0xb4	; 0xb4 <PWM_fadein_fadeout>
		
    }
  a2:	fd cf       	rjmp	.-6      	; 0x9e <main+0xe>

000000a4 <PWM_init>:


void PWM_init()
{
	//Fast PWM mode, clear on compare match
	TCCR0A|=(1<<COM0A1)|(1<<WGM01)|(1<<WGM00);
  a4:	84 b5       	in	r24, 0x24	; 36
  a6:	83 68       	ori	r24, 0x83	; 131
  a8:	84 bd       	out	0x24, r24	; 36
	TCCR0B|=(1<<CS00);	//no prescaler
  aa:	85 b5       	in	r24, 0x25	; 37
  ac:	81 60       	ori	r24, 0x01	; 1
  ae:	85 bd       	out	0x25, r24	; 37
	//PWM pin
	DDRD|=(1<<PIND6);
  b0:	56 9a       	sbi	0x0a, 6	; 10
  b2:	08 95       	ret

000000b4 <PWM_fadein_fadeout>:
}

void PWM_fadein_fadeout()
{
	
	for(i=0;i<=255;i++)
  b4:	10 92 03 01 	sts	0x0103, r1
  b8:	10 92 02 01 	sts	0x0102, r1
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
	{
		OCR0A=i;
  c0:	87 bd       	out	0x27, r24	; 39
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c2:	8f e7       	ldi	r24, 0x7F	; 127
  c4:	9e e3       	ldi	r25, 0x3E	; 62
  c6:	01 97       	sbiw	r24, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <PWM_fadein_fadeout+0x12>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <PWM_fadein_fadeout+0x18>
  cc:	00 00       	nop
}

void PWM_fadein_fadeout()
{
	
	for(i=0;i<=255;i++)
  ce:	80 91 02 01 	lds	r24, 0x0102
  d2:	90 91 03 01 	lds	r25, 0x0103
  d6:	01 96       	adiw	r24, 0x01	; 1
  d8:	90 93 03 01 	sts	0x0103, r25
  dc:	80 93 02 01 	sts	0x0102, r24
  e0:	8f 3f       	cpi	r24, 0xFF	; 255
  e2:	91 05       	cpc	r25, r1
  e4:	69 f3       	breq	.-38     	; 0xc0 <PWM_fadein_fadeout+0xc>
  e6:	64 f3       	brlt	.-40     	; 0xc0 <PWM_fadein_fadeout+0xc>
  e8:	9f ef       	ldi	r25, 0xFF	; 255
  ea:	23 ed       	ldi	r18, 0xD3	; 211
  ec:	80 e3       	ldi	r24, 0x30	; 48
  ee:	91 50       	subi	r25, 0x01	; 1
  f0:	20 40       	sbci	r18, 0x00	; 0
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <PWM_fadein_fadeout+0x3a>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <PWM_fadein_fadeout+0x44>
  f8:	00 00       	nop
	{
		OCR0A=i;
		_delay_ms(4);
	}
	_delay_ms(1000);
	for(i=255;i>=0;i--)
  fa:	8f ef       	ldi	r24, 0xFF	; 255
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	90 93 03 01 	sts	0x0103, r25
 102:	80 93 02 01 	sts	0x0102, r24
	{
		OCR0A=i;
 106:	87 bd       	out	0x27, r24	; 39
 108:	8f e7       	ldi	r24, 0x7F	; 127
 10a:	9e e3       	ldi	r25, 0x3E	; 62
 10c:	01 97       	sbiw	r24, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <PWM_fadein_fadeout+0x58>
 110:	00 c0       	rjmp	.+0      	; 0x112 <PWM_fadein_fadeout+0x5e>
 112:	00 00       	nop
	{
		OCR0A=i;
		_delay_ms(4);
	}
	_delay_ms(1000);
	for(i=255;i>=0;i--)
 114:	80 91 02 01 	lds	r24, 0x0102
 118:	90 91 03 01 	lds	r25, 0x0103
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	90 93 03 01 	sts	0x0103, r25
 122:	80 93 02 01 	sts	0x0102, r24
 126:	99 23       	and	r25, r25
 128:	74 f7       	brge	.-36     	; 0x106 <PWM_fadein_fadeout+0x52>
	{
		OCR0A=i;
		_delay_ms(4);
	}
	OCR0A=0;
 12a:	17 bc       	out	0x27, r1	; 39
 12c:	9f ef       	ldi	r25, 0xFF	; 255
 12e:	23 ed       	ldi	r18, 0xD3	; 211
 130:	80 e3       	ldi	r24, 0x30	; 48
 132:	91 50       	subi	r25, 0x01	; 1
 134:	20 40       	sbci	r18, 0x00	; 0
 136:	80 40       	sbci	r24, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <PWM_fadein_fadeout+0x7e>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <PWM_fadein_fadeout+0x88>
 13c:	00 00       	nop
 13e:	08 95       	ret

00000140 <timer1_init>:

void timer1_init()
{
	//TIMER 1 (16 bit)    -    normal mode
	//prescaler 1024
	TCCR1B |=(1<<CS12)|(1<<CS10)|(1<<WGM12);
 140:	e1 e8       	ldi	r30, 0x81	; 129
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	80 81       	ld	r24, Z
 146:	8d 60       	ori	r24, 0x0D	; 13
 148:	80 83       	st	Z, r24
	//enabling output compare match A
	TIMSK1 |= (1<<OCIE1A);
 14a:	ef e6       	ldi	r30, 0x6F	; 111
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	80 81       	ld	r24, Z
 150:	82 60       	ori	r24, 0x02	; 2
 152:	80 83       	st	Z, r24
	//setting the output compare register A
	OCR1A = 15625;
 154:	89 e0       	ldi	r24, 0x09	; 9
 156:	9d e3       	ldi	r25, 0x3D	; 61
 158:	90 93 89 00 	sts	0x0089, r25
 15c:	80 93 88 00 	sts	0x0088, r24
	
	//setting PIND7 as output - LED
	DDRD|=(1<<PIND7);
 160:	57 9a       	sbi	0x0a, 7	; 10
 162:	08 95       	ret

00000164 <timer2_init>:


void timer2_init()
{
	//TCNT2 = 3036;
	TCCR2B|=(1<<CS22)|(1<<CS21)|(1<<CS20); //1024 prescaler
 164:	e1 eb       	ldi	r30, 0xB1	; 177
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	80 81       	ld	r24, Z
 16a:	87 60       	ori	r24, 0x07	; 7
 16c:	80 83       	st	Z, r24
	//enabling overflow interrupt
	TIMSK2|=(1<<TOIE2);
 16e:	e0 e7       	ldi	r30, 0x70	; 112
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	81 60       	ori	r24, 0x01	; 1
 176:	80 83       	st	Z, r24
 178:	08 95       	ret

0000017a <__vector_11>:




ISR(TIMER1_COMPA_vect)
{
 17a:	1f 92       	push	r1
 17c:	0f 92       	push	r0
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	0f 92       	push	r0
 182:	11 24       	eor	r1, r1
	//PORTD ^= ( 1 << PIND7 );
}
 184:	0f 90       	pop	r0
 186:	0f be       	out	0x3f, r0	; 63
 188:	0f 90       	pop	r0
 18a:	1f 90       	pop	r1
 18c:	18 95       	reti

0000018e <__vector_9>:


ISR	(TIMER2_OVF_vect)
{
 18e:	1f 92       	push	r1
 190:	0f 92       	push	r0
 192:	0f b6       	in	r0, 0x3f	; 63
 194:	0f 92       	push	r0
 196:	11 24       	eor	r1, r1
 198:	8f 93       	push	r24
 19a:	9f 93       	push	r25
	t++;
 19c:	80 91 00 01 	lds	r24, 0x0100
 1a0:	90 91 01 01 	lds	r25, 0x0101
 1a4:	01 96       	adiw	r24, 0x01	; 1
 1a6:	90 93 01 01 	sts	0x0101, r25
 1aa:	80 93 00 01 	sts	0x0100, r24
	if(t==61)
 1ae:	cd 97       	sbiw	r24, 0x3d	; 61
 1b0:	39 f4       	brne	.+14     	; 0x1c0 <__vector_9+0x32>
	{
		PORTD ^= ( 1 << PIND7 );
 1b2:	8b b1       	in	r24, 0x0b	; 11
 1b4:	80 58       	subi	r24, 0x80	; 128
 1b6:	8b b9       	out	0x0b, r24	; 11
		t=0;
 1b8:	10 92 01 01 	sts	0x0101, r1
 1bc:	10 92 00 01 	sts	0x0100, r1
	}
}
 1c0:	9f 91       	pop	r25
 1c2:	8f 91       	pop	r24
 1c4:	0f 90       	pop	r0
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	0f 90       	pop	r0
 1ca:	1f 90       	pop	r1
 1cc:	18 95       	reti

000001ce <_exit>:
 1ce:	f8 94       	cli

000001d0 <__stop_program>:
 1d0:	ff cf       	rjmp	.-2      	; 0x1d0 <__stop_program>
