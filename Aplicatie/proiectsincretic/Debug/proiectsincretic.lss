
proiectsincretic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000e24  00000eb8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e24  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800102  00800102  00000eba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000eba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000eec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007d1  00000000  00000000  0000105c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004e5  00000000  00000000  0000182d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000088d  00000000  00000000  00001d12  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f4  00000000  00000000  000025a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002f6  00000000  00000000  00002894  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000794  00000000  00000000  00002b8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  0000331e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__ctors_end>
   4:	0c 94 22 01 	jmp	0x244	; 0x244 <__vector_1>
   8:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
   c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  10:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  14:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  18:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  1c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  20:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  24:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__vector_9>
  28:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  2c:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__vector_11>
  30:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  34:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  38:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  3c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  40:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  44:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  48:	0c 94 34 02 	jmp	0x468	; 0x468 <__vector_18>
  4c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  50:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  54:	0c 94 cc 01 	jmp	0x398	; 0x398 <__vector_21>
  58:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  5c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  60:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  64:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  68:	b7 00       	.word	0x00b7	; ????
  6a:	c0 00       	.word	0x00c0	; ????
  6c:	c9 00       	.word	0x00c9	; ????
  6e:	d4 00       	.word	0x00d4	; ????
  70:	df 00       	.word	0x00df	; ????
  72:	e8 00       	.word	0x00e8	; ????
  74:	f3 00       	.word	0x00f3	; ????
  76:	fc 00       	.word	0x00fc	; ????
  78:	07 01       	movw	r0, r14
  7a:	0f 01       	movw	r0, r30
  7c:	07 63       	ori	r16, 0x37	; 55
  7e:	42 36       	cpi	r20, 0x62	; 98
  80:	b7 9b       	sbis	0x16, 7	; 22
  82:	d8 a7       	std	Y+40, r29	; 0x28
  84:	1a 39       	cpi	r17, 0x9A	; 154
  86:	68 56       	subi	r22, 0x68	; 104
  88:	18 ae       	std	Y+56, r1	; 0x38
  8a:	ba ab       	std	Y+50, r27	; 0x32
  8c:	55 8c       	ldd	r5, Z+29	; 0x1d
  8e:	1d 3c       	cpi	r17, 0xCD	; 205
  90:	b7 cc       	rjmp	.-1682   	; 0xfffffa00 <__eeprom_end+0xff7efa00>
  92:	57 63       	ori	r21, 0x37	; 55
  94:	bd 6d       	ori	r27, 0xDD	; 221
  96:	ed fd       	.word	0xfded	; ????
  98:	75 3e       	cpi	r23, 0xE5	; 229
  9a:	f6 17       	cp	r31, r22
  9c:	72 31       	cpi	r23, 0x12	; 18
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	08 00       	.word	0x0008	; ????
  a6:	00 00       	nop
  a8:	be 92       	st	-X, r11
  aa:	24 49       	sbci	r18, 0x94	; 148
  ac:	12 3e       	cpi	r17, 0xE2	; 226
  ae:	ab aa       	std	Y+51, r10	; 0x33
  b0:	aa 2a       	or	r10, r26
  b2:	be cd       	rjmp	.-1156   	; 0xfffffc30 <__eeprom_end+0xff7efc30>
  b4:	cc cc       	rjmp	.-1640   	; 0xfffffa4e <__eeprom_end+0xff7efa4e>
  b6:	4c 3e       	cpi	r20, 0xEC	; 236
  b8:	00 00       	nop
  ba:	00 80       	ld	r0, Z
  bc:	be ab       	std	Y+54, r27	; 0x36
  be:	aa aa       	std	Y+50, r10	; 0x32
  c0:	aa 3e       	cpi	r26, 0xEA	; 234
  c2:	00 00       	nop
  c4:	00 00       	nop
  c6:	bf 00       	.word	0x00bf	; ????
  c8:	00 00       	nop
  ca:	80 3f       	cpi	r24, 0xF0	; 240
  cc:	00 00       	nop
  ce:	00 00       	nop
  d0:	00 08       	sbc	r0, r0
  d2:	41 78       	andi	r20, 0x81	; 129
  d4:	d3 bb       	out	0x13, r29	; 19
  d6:	43 87       	std	Z+11, r20	; 0x0b
  d8:	d1 13       	cpse	r29, r17
  da:	3d 19       	sub	r19, r13
  dc:	0e 3c       	cpi	r16, 0xCE	; 206
  de:	c3 bd       	out	0x23, r28	; 35
  e0:	42 82       	std	Z+2, r4	; 0x02
  e2:	ad 2b       	or	r26, r29
  e4:	3e 68       	ori	r19, 0x8E	; 142
  e6:	ec 82       	std	Y+4, r14	; 0x04
  e8:	76 be       	out	0x36, r7	; 54
  ea:	d9 8f       	std	Y+25, r29	; 0x19
  ec:	e1 a9       	ldd	r30, Z+49	; 0x31
  ee:	3e 4c       	sbci	r19, 0xCE	; 206
  f0:	80 ef       	ldi	r24, 0xF0	; 240
  f2:	ff be       	out	0x3f, r15	; 63
  f4:	01 c4       	rjmp	.+2050   	; 0x8f8 <__mulsf3_pse+0xe>
  f6:	ff 7f       	andi	r31, 0xFF	; 255
  f8:	3f 00       	.word	0x003f	; ????
  fa:	00 00       	nop
	...

000000fe <__ctors_end>:
  fe:	11 24       	eor	r1, r1
 100:	1f be       	out	0x3f, r1	; 63
 102:	cf ef       	ldi	r28, 0xFF	; 255
 104:	d8 e0       	ldi	r29, 0x08	; 8
 106:	de bf       	out	0x3e, r29	; 62
 108:	cd bf       	out	0x3d, r28	; 61

0000010a <__do_copy_data>:
 10a:	11 e0       	ldi	r17, 0x01	; 1
 10c:	a0 e0       	ldi	r26, 0x00	; 0
 10e:	b1 e0       	ldi	r27, 0x01	; 1
 110:	e4 e2       	ldi	r30, 0x24	; 36
 112:	fe e0       	ldi	r31, 0x0E	; 14
 114:	02 c0       	rjmp	.+4      	; 0x11a <__do_copy_data+0x10>
 116:	05 90       	lpm	r0, Z+
 118:	0d 92       	st	X+, r0
 11a:	a2 30       	cpi	r26, 0x02	; 2
 11c:	b1 07       	cpc	r27, r17
 11e:	d9 f7       	brne	.-10     	; 0x116 <__do_copy_data+0xc>

00000120 <__do_clear_bss>:
 120:	21 e0       	ldi	r18, 0x01	; 1
 122:	a2 e0       	ldi	r26, 0x02	; 2
 124:	b1 e0       	ldi	r27, 0x01	; 1
 126:	01 c0       	rjmp	.+2      	; 0x12a <.do_clear_bss_start>

00000128 <.do_clear_bss_loop>:
 128:	1d 92       	st	X+, r1

0000012a <.do_clear_bss_start>:
 12a:	aa 30       	cpi	r26, 0x0A	; 10
 12c:	b2 07       	cpc	r27, r18
 12e:	e1 f7       	brne	.-8      	; 0x128 <.do_clear_bss_loop>
 130:	0e 94 49 02 	call	0x492	; 0x492 <main>
 134:	0c 94 10 07 	jmp	0xe20	; 0xe20 <_exit>

00000138 <__bad_interrupt>:
 138:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000013c <display_init>:
int push=1;

void display_init()
{
	//setting 7-digit display leds as output
	DDRB |= (1<<PINB0)|(1<<PINB1)|(1<<PINB2)|(1<<PINB3);
 13c:	84 b1       	in	r24, 0x04	; 4
 13e:	8f 60       	ori	r24, 0x0F	; 15
 140:	84 b9       	out	0x04, r24	; 4
	DDRC |= (1<<PINC1)|(1<<PINC2)|(1<<PINC3)|(1<<PINC4);
 142:	87 b1       	in	r24, 0x07	; 7
 144:	8e 61       	ori	r24, 0x1E	; 30
 146:	87 b9       	out	0x07, r24	; 7
 148:	08 95       	ret

0000014a <pushbutton_init>:
}

void pushbutton_init()
{
	//setting pushbutton pin as input
	DDRD&=~(1<<PIND2);
 14a:	52 98       	cbi	0x0a, 2	; 10
	// turn On the Pull-up
	PORTD |= (1 << PIND2);
 14c:	5a 9a       	sbi	0x0b, 2	; 11
	//interrupt on falling edge
	EICRA|=(1<<ISC01);
 14e:	e9 e6       	ldi	r30, 0x69	; 105
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	82 60       	ori	r24, 0x02	; 2
 156:	80 83       	st	Z, r24
	//enabling external INT0 
	EIMSK|=(1<<INT0);
 158:	e8 9a       	sbi	0x1d, 0	; 29
 15a:	08 95       	ret

0000015c <display_digit>:
	//PCMSK2|=(1<<PCINT18);
}

void display_digit(int digit)
{
	switch(digit)
 15c:	8a 30       	cpi	r24, 0x0A	; 10
 15e:	91 05       	cpc	r25, r1
 160:	08 f0       	brcs	.+2      	; 0x164 <display_digit+0x8>
 162:	67 c0       	rjmp	.+206    	; 0x232 <display_digit+0xd6>
 164:	fc 01       	movw	r30, r24
 166:	ec 5c       	subi	r30, 0xCC	; 204
 168:	ff 4f       	sbci	r31, 0xFF	; 255
 16a:	0c 94 f6 06 	jmp	0xdec	; 0xdec <__tablejump2__>
	{
		case 0: PORTB&=~(1<<PINB0);
 16e:	28 98       	cbi	0x05, 0	; 5
				PORTC&=~(1<<PINC1);
 170:	41 98       	cbi	0x08, 1	; 8
				PORTB|=(1<<PINB1)|(1<<PINB2)|(1<<PINB3);
 172:	85 b1       	in	r24, 0x05	; 5
 174:	8e 60       	ori	r24, 0x0E	; 14
 176:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3)|(1<<PINC4);
 178:	88 b1       	in	r24, 0x08	; 8
 17a:	8c 61       	ori	r24, 0x1C	; 28
 17c:	88 b9       	out	0x08, r24	; 8
				break;
 17e:	08 95       	ret
		case 1: PORTB&=~(1<<PINB0)&~(1<<PINB1)&~(1<<PINB2);
 180:	85 b1       	in	r24, 0x05	; 5
 182:	88 7f       	andi	r24, 0xF8	; 248
 184:	85 b9       	out	0x05, r24	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC3)&~(1<<PINC4);
 186:	88 b1       	in	r24, 0x08	; 8
 188:	85 7e       	andi	r24, 0xE5	; 229
 18a:	88 b9       	out	0x08, r24	; 8
				PORTB|=1<<PINB3;
 18c:	2b 9a       	sbi	0x05, 3	; 5
				PORTC|=1<<PINC2;
 18e:	42 9a       	sbi	0x08, 2	; 8
				break;
 190:	08 95       	ret
		case 2: PORTB&=~(1<<PINB1);
 192:	29 98       	cbi	0x05, 1	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC2);
 194:	88 b1       	in	r24, 0x08	; 8
 196:	89 7f       	andi	r24, 0xF9	; 249
 198:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB0)|(1<<PINB2)|(1<<PINB3);
 19a:	85 b1       	in	r24, 0x05	; 5
 19c:	8d 60       	ori	r24, 0x0D	; 13
 19e:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC3)|(1<<PINC4);
 1a0:	88 b1       	in	r24, 0x08	; 8
 1a2:	88 61       	ori	r24, 0x18	; 24
 1a4:	88 b9       	out	0x08, r24	; 8
				break;
 1a6:	08 95       	ret
		case 3: PORTB&=~(1<<PINB1);
 1a8:	29 98       	cbi	0x05, 1	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC4);
 1aa:	88 b1       	in	r24, 0x08	; 8
 1ac:	8d 7e       	andi	r24, 0xED	; 237
 1ae:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB0)|(1<<PINB2)|(1<<PINB3);
 1b0:	85 b1       	in	r24, 0x05	; 5
 1b2:	8d 60       	ori	r24, 0x0D	; 13
 1b4:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3);
 1b6:	88 b1       	in	r24, 0x08	; 8
 1b8:	8c 60       	ori	r24, 0x0C	; 12
 1ba:	88 b9       	out	0x08, r24	; 8
				break;	
 1bc:	08 95       	ret
		case 4: PORTB&=~(1<<PINB2);
 1be:	2a 98       	cbi	0x05, 2	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC3)&~(1<<PINC4);
 1c0:	88 b1       	in	r24, 0x08	; 8
 1c2:	85 7e       	andi	r24, 0xE5	; 229
 1c4:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB3);
 1c6:	85 b1       	in	r24, 0x05	; 5
 1c8:	8b 60       	ori	r24, 0x0B	; 11
 1ca:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2);
 1cc:	42 9a       	sbi	0x08, 2	; 8
				break;	
 1ce:	08 95       	ret
		case 5: PORTB&=~(1<<PINB3);
 1d0:	2b 98       	cbi	0x05, 3	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC4);
 1d2:	88 b1       	in	r24, 0x08	; 8
 1d4:	8d 7e       	andi	r24, 0xED	; 237
 1d6:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB2);
 1d8:	85 b1       	in	r24, 0x05	; 5
 1da:	87 60       	ori	r24, 0x07	; 7
 1dc:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3);
 1de:	88 b1       	in	r24, 0x08	; 8
 1e0:	8c 60       	ori	r24, 0x0C	; 12
 1e2:	88 b9       	out	0x08, r24	; 8
				break;
 1e4:	08 95       	ret
		case 6: PORTB&=~(1<<PINB3);
 1e6:	2b 98       	cbi	0x05, 3	; 5
				PORTC&=~(1<<PINC1);
 1e8:	41 98       	cbi	0x08, 1	; 8
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB2);
 1ea:	85 b1       	in	r24, 0x05	; 5
 1ec:	87 60       	ori	r24, 0x07	; 7
 1ee:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3)|(1<<PINC4);
 1f0:	88 b1       	in	r24, 0x08	; 8
 1f2:	8c 61       	ori	r24, 0x1C	; 28
 1f4:	88 b9       	out	0x08, r24	; 8
				break;
 1f6:	08 95       	ret
		case 7: PORTB&=~(1<<PINB0)&~(1<<PINB1);
 1f8:	85 b1       	in	r24, 0x05	; 5
 1fa:	8c 7f       	andi	r24, 0xFC	; 252
 1fc:	85 b9       	out	0x05, r24	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC3)&~(1<<PINC4);
 1fe:	88 b1       	in	r24, 0x08	; 8
 200:	85 7e       	andi	r24, 0xE5	; 229
 202:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB2)|(1<<PINB3);
 204:	85 b1       	in	r24, 0x05	; 5
 206:	8c 60       	ori	r24, 0x0C	; 12
 208:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2);
 20a:	42 9a       	sbi	0x08, 2	; 8
				break;
 20c:	08 95       	ret
		case 8: PORTC&=~(1<<PINC1);
 20e:	41 98       	cbi	0x08, 1	; 8
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB2)|(1<<PINB3);
 210:	85 b1       	in	r24, 0x05	; 5
 212:	8f 60       	ori	r24, 0x0F	; 15
 214:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3)|(1<<PINC4);
 216:	88 b1       	in	r24, 0x08	; 8
 218:	8c 61       	ori	r24, 0x1C	; 28
 21a:	88 b9       	out	0x08, r24	; 8
				break;
 21c:	08 95       	ret
		case 9: PORTC&=~(1<<PINC1)&~(1<<PINC4);
 21e:	88 b1       	in	r24, 0x08	; 8
 220:	8d 7e       	andi	r24, 0xED	; 237
 222:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB2)|(1<<PINB3);
 224:	85 b1       	in	r24, 0x05	; 5
 226:	8f 60       	ori	r24, 0x0F	; 15
 228:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3);
 22a:	88 b1       	in	r24, 0x08	; 8
 22c:	8c 60       	ori	r24, 0x0C	; 12
 22e:	88 b9       	out	0x08, r24	; 8
				break;
 230:	08 95       	ret
		default:PORTC&=~(1<<PINC2);
 232:	42 98       	cbi	0x08, 2	; 8
				PORTB&=~(1<<PINB3);
 234:	2b 98       	cbi	0x05, 3	; 5
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB2);
 236:	85 b1       	in	r24, 0x05	; 5
 238:	87 60       	ori	r24, 0x07	; 7
 23a:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC1)|(1<<PINC3)|(1<<PINC4);
 23c:	88 b1       	in	r24, 0x08	; 8
 23e:	8a 61       	ori	r24, 0x1A	; 26
 240:	88 b9       	out	0x08, r24	; 8
 242:	08 95       	ret

00000244 <__vector_1>:
	
	
}

ISR (INT0_vect)
{
 244:	1f 92       	push	r1
 246:	0f 92       	push	r0
 248:	0f b6       	in	r0, 0x3f	; 63
 24a:	0f 92       	push	r0
 24c:	11 24       	eor	r1, r1
 24e:	2f 93       	push	r18
 250:	3f 93       	push	r19
 252:	4f 93       	push	r20
 254:	5f 93       	push	r21
 256:	6f 93       	push	r22
 258:	7f 93       	push	r23
 25a:	8f 93       	push	r24
 25c:	9f 93       	push	r25
 25e:	af 93       	push	r26
 260:	bf 93       	push	r27
 262:	ef 93       	push	r30
 264:	ff 93       	push	r31
	
	display_digit(push);
 266:	80 91 00 01 	lds	r24, 0x0100
 26a:	90 91 01 01 	lds	r25, 0x0101
 26e:	0e 94 ae 00 	call	0x15c	; 0x15c <display_digit>
	push++;
 272:	80 91 00 01 	lds	r24, 0x0100
 276:	90 91 01 01 	lds	r25, 0x0101
 27a:	01 96       	adiw	r24, 0x01	; 1
	
	if(push>=10)
 27c:	8a 30       	cpi	r24, 0x0A	; 10
 27e:	91 05       	cpc	r25, r1
 280:	2c f4       	brge	.+10     	; 0x28c <__vector_1+0x48>

ISR (INT0_vect)
{
	
	display_digit(push);
	push++;
 282:	90 93 01 01 	sts	0x0101, r25
 286:	80 93 00 01 	sts	0x0100, r24
 28a:	04 c0       	rjmp	.+8      	; 0x294 <__vector_1+0x50>
	
	if(push>=10)
		push=0;
 28c:	10 92 01 01 	sts	0x0101, r1
 290:	10 92 00 01 	sts	0x0100, r1
 294:	ff 91       	pop	r31
 296:	ef 91       	pop	r30
 298:	bf 91       	pop	r27
 29a:	af 91       	pop	r26
 29c:	9f 91       	pop	r25
 29e:	8f 91       	pop	r24
 2a0:	7f 91       	pop	r23
 2a2:	6f 91       	pop	r22
 2a4:	5f 91       	pop	r21
 2a6:	4f 91       	pop	r20
 2a8:	3f 91       	pop	r19
 2aa:	2f 91       	pop	r18
 2ac:	0f 90       	pop	r0
 2ae:	0f be       	out	0x3f, r0	; 63
 2b0:	0f 90       	pop	r0
 2b2:	1f 90       	pop	r1
 2b4:	18 95       	reti

000002b6 <adc_init>:


void adc_init()
{
	//setting Port A as input
	DDRC = 0x00;
 2b6:	17 b8       	out	0x07, r1	; 7
	//adc enable, interrupt enable, prescaler of 128
	ADCSRA|=(1<<ADEN)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 2b8:	ea e7       	ldi	r30, 0x7A	; 122
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	80 81       	ld	r24, Z
 2be:	8f 68       	ori	r24, 0x8F	; 143
 2c0:	80 83       	st	Z, r24
	// AVcc voltage reference
	ADMUX|=(1<<REFS0);	
 2c2:	ac e7       	ldi	r26, 0x7C	; 124
 2c4:	b0 e0       	ldi	r27, 0x00	; 0
 2c6:	8c 91       	ld	r24, X
 2c8:	80 64       	ori	r24, 0x40	; 64
 2ca:	8c 93       	st	X, r24
	//setting pinb5 as output for the temperature led
	DDRB|=(1<<PINB5);
 2cc:	25 9a       	sbi	0x04, 5	; 4
	//start first conversion
	ADCSRA |= 1<<ADSC;
 2ce:	80 81       	ld	r24, Z
 2d0:	80 64       	ori	r24, 0x40	; 64
 2d2:	80 83       	st	Z, r24
 2d4:	08 95       	ret

000002d6 <sending_temperature>:
}

void sending_temperature(float temperature)
{
 2d6:	ef 92       	push	r14
 2d8:	ff 92       	push	r15
 2da:	0f 93       	push	r16
 2dc:	1f 93       	push	r17
 2de:	cf 93       	push	r28
 2e0:	df 93       	push	r29
	int temp = (int)(temperature*10);
 2e2:	20 e0       	ldi	r18, 0x00	; 0
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	40 e2       	ldi	r20, 0x20	; 32
 2e8:	51 e4       	ldi	r21, 0x41	; 65
 2ea:	0e 94 5f 04 	call	0x8be	; 0x8be <__mulsf3>
 2ee:	0e 94 96 03 	call	0x72c	; 0x72c <__fixsfsi>
 2f2:	ab 01       	movw	r20, r22
 2f4:	bc 01       	movw	r22, r24
 2f6:	8a 01       	movw	r16, r20
	int c,cifra=1;
	
	while(temp/10)
 2f8:	ca 01       	movw	r24, r20
 2fa:	09 96       	adiw	r24, 0x09	; 9
 2fc:	43 97       	sbiw	r24, 0x13	; 19
 2fe:	a0 f0       	brcs	.+40     	; 0x328 <sending_temperature+0x52>
 300:	84 2f       	mov	r24, r20
 302:	95 2f       	mov	r25, r21
 304:	c1 e0       	ldi	r28, 0x01	; 1
 306:	d0 e0       	ldi	r29, 0x00	; 0
		{
			cifra++;
			temp=temp/10;
 308:	2a e0       	ldi	r18, 0x0A	; 10
 30a:	30 e0       	ldi	r19, 0x00	; 0
	int temp = (int)(temperature*10);
	int c,cifra=1;
	
	while(temp/10)
		{
			cifra++;
 30c:	21 96       	adiw	r28, 0x01	; 1
			temp=temp/10;
 30e:	b9 01       	movw	r22, r18
 310:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <__divmodhi4>
 314:	86 2f       	mov	r24, r22
 316:	97 2f       	mov	r25, r23
void sending_temperature(float temperature)
{
	int temp = (int)(temperature*10);
	int c,cifra=1;
	
	while(temp/10)
 318:	67 5f       	subi	r22, 0xF7	; 247
 31a:	7f 4f       	sbci	r23, 0xFF	; 255
 31c:	63 31       	cpi	r22, 0x13	; 19
 31e:	71 05       	cpc	r23, r1
 320:	a8 f7       	brcc	.-22     	; 0x30c <sending_temperature+0x36>
		{
			cifra++;
			temp=temp/10;
		}

	while(cifra)
 322:	20 97       	sbiw	r28, 0x00	; 0
 324:	19 f4       	brne	.+6      	; 0x32c <sending_temperature+0x56>
 326:	2e c0       	rjmp	.+92     	; 0x384 <sending_temperature+0xae>
}

void sending_temperature(float temperature)
{
	int temp = (int)(temperature*10);
	int c,cifra=1;
 328:	c1 e0       	ldi	r28, 0x01	; 1
 32a:	d0 e0       	ldi	r29, 0x00	; 0
			temp=temp/10;
		}

	while(cifra)
	{
		c=((int)(temperature*10)/(int)pow(10,cifra-1))%10;
 32c:	0f 2e       	mov	r0, r31
 32e:	fa e0       	ldi	r31, 0x0A	; 10
 330:	ef 2e       	mov	r14, r31
 332:	f1 2c       	mov	r15, r1
 334:	f0 2d       	mov	r31, r0
 336:	21 97       	sbiw	r28, 0x01	; 1
 338:	be 01       	movw	r22, r28
 33a:	0d 2e       	mov	r0, r29
 33c:	00 0c       	add	r0, r0
 33e:	88 0b       	sbc	r24, r24
 340:	99 0b       	sbc	r25, r25
 342:	0e 94 ce 03 	call	0x79c	; 0x79c <__floatsisf>
 346:	9b 01       	movw	r18, r22
 348:	ac 01       	movw	r20, r24
 34a:	60 e0       	ldi	r22, 0x00	; 0
 34c:	70 e0       	ldi	r23, 0x00	; 0
 34e:	80 e2       	ldi	r24, 0x20	; 32
 350:	91 e4       	ldi	r25, 0x41	; 65
 352:	0e 94 cc 04 	call	0x998	; 0x998 <pow>
 356:	0e 94 96 03 	call	0x72c	; 0x72c <__fixsfsi>
 35a:	ab 01       	movw	r20, r22
 35c:	bc 01       	movw	r22, r24
 35e:	c8 01       	movw	r24, r16
 360:	ba 01       	movw	r22, r20
 362:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <__divmodhi4>
 366:	cb 01       	movw	r24, r22
 368:	b7 01       	movw	r22, r14
 36a:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <__divmodhi4>
		USART_Transmit(48+c);
 36e:	80 5d       	subi	r24, 0xD0	; 208
 370:	0e 94 2c 02 	call	0x458	; 0x458 <USART_Transmit>
		if(cifra==2)
 374:	c1 30       	cpi	r28, 0x01	; 1
 376:	d1 05       	cpc	r29, r1
 378:	19 f4       	brne	.+6      	; 0x380 <sending_temperature+0xaa>
			USART_Transmit('.');
 37a:	8e e2       	ldi	r24, 0x2E	; 46
 37c:	0e 94 2c 02 	call	0x458	; 0x458 <USART_Transmit>
		{
			cifra++;
			temp=temp/10;
		}

	while(cifra)
 380:	20 97       	sbiw	r28, 0x00	; 0
 382:	c9 f6       	brne	.-78     	; 0x336 <sending_temperature+0x60>
		USART_Transmit(48+c);
		if(cifra==2)
			USART_Transmit('.');
		cifra--;
	}
	USART_Transmit('\n');
 384:	8a e0       	ldi	r24, 0x0A	; 10
 386:	0e 94 2c 02 	call	0x458	; 0x458 <USART_Transmit>
}
 38a:	df 91       	pop	r29
 38c:	cf 91       	pop	r28
 38e:	1f 91       	pop	r17
 390:	0f 91       	pop	r16
 392:	ff 90       	pop	r15
 394:	ef 90       	pop	r14
 396:	08 95       	ret

00000398 <__vector_21>:

/*ADC Conversion Complete Interrupt Service Routine (ISR)*/
ISR(ADC_vect)
{
 398:	1f 92       	push	r1
 39a:	0f 92       	push	r0
 39c:	0f b6       	in	r0, 0x3f	; 63
 39e:	0f 92       	push	r0
 3a0:	11 24       	eor	r1, r1
 3a2:	2f 93       	push	r18
 3a4:	3f 93       	push	r19
 3a6:	4f 93       	push	r20
 3a8:	5f 93       	push	r21
 3aa:	6f 93       	push	r22
 3ac:	7f 93       	push	r23
 3ae:	8f 93       	push	r24
 3b0:	9f 93       	push	r25
 3b2:	af 93       	push	r26
 3b4:	bf 93       	push	r27
 3b6:	ef 93       	push	r30
 3b8:	ff 93       	push	r31
	uint16_t val = ADC;
 3ba:	60 91 78 00 	lds	r22, 0x0078
 3be:	70 91 79 00 	lds	r23, 0x0079
	float mv = (val/1024.0)*5000;
 3c2:	80 e0       	ldi	r24, 0x00	; 0
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	0e 94 cc 03 	call	0x798	; 0x798 <__floatunsisf>
 3ca:	20 e0       	ldi	r18, 0x00	; 0
 3cc:	30 e0       	ldi	r19, 0x00	; 0
 3ce:	40 e8       	ldi	r20, 0x80	; 128
 3d0:	5a e3       	ldi	r21, 0x3A	; 58
 3d2:	0e 94 5f 04 	call	0x8be	; 0x8be <__mulsf3>
 3d6:	20 e0       	ldi	r18, 0x00	; 0
 3d8:	30 e4       	ldi	r19, 0x40	; 64
 3da:	4c e9       	ldi	r20, 0x9C	; 156
 3dc:	55 e4       	ldi	r21, 0x45	; 69
 3de:	0e 94 5f 04 	call	0x8be	; 0x8be <__mulsf3>
	float cel = mv/10;
 3e2:	20 e0       	ldi	r18, 0x00	; 0
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	40 e2       	ldi	r20, 0x20	; 32
 3e8:	51 e4       	ldi	r21, 0x41	; 65
 3ea:	0e 94 24 03 	call	0x648	; 0x648 <__divsf3>
	
	temperatura = cel;
 3ee:	60 93 06 01 	sts	0x0106, r22
 3f2:	70 93 07 01 	sts	0x0107, r23
 3f6:	80 93 08 01 	sts	0x0108, r24
 3fa:	90 93 09 01 	sts	0x0109, r25
	//sending_temperature(cel);
		
	if(temperatura>=34.5)
 3fe:	20 e0       	ldi	r18, 0x00	; 0
 400:	30 e0       	ldi	r19, 0x00	; 0
 402:	4a e0       	ldi	r20, 0x0A	; 10
 404:	52 e4       	ldi	r21, 0x42	; 66
 406:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__gesf2>
 40a:	88 23       	and	r24, r24
 40c:	14 f0       	brlt	.+4      	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
		PORTB|=(1<<PINB5);
 40e:	2d 9a       	sbi	0x05, 5	; 5
 410:	01 c0       	rjmp	.+2      	; 0x414 <__FUSE_REGION_LENGTH__+0x14>
	else
		PORTB&=~(1<<PINB5);
 412:	2d 98       	cbi	0x05, 5	; 5
	
	ADCSRA |= 1<<ADSC;		// Start Conversion
 414:	ea e7       	ldi	r30, 0x7A	; 122
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	80 81       	ld	r24, Z
 41a:	80 64       	ori	r24, 0x40	; 64
 41c:	80 83       	st	Z, r24
 41e:	ff 91       	pop	r31
 420:	ef 91       	pop	r30
 422:	bf 91       	pop	r27
 424:	af 91       	pop	r26
 426:	9f 91       	pop	r25
 428:	8f 91       	pop	r24
 42a:	7f 91       	pop	r23
 42c:	6f 91       	pop	r22
 42e:	5f 91       	pop	r21
 430:	4f 91       	pop	r20
 432:	3f 91       	pop	r19
 434:	2f 91       	pop	r18
 436:	0f 90       	pop	r0
 438:	0f be       	out	0x3f, r0	; 63
 43a:	0f 90       	pop	r0
 43c:	1f 90       	pop	r1
 43e:	18 95       	reti

00000440 <USART_Init>:
		else
		{
			USART_Transmit(str[i]);
		}
	}
}
 440:	90 93 c5 00 	sts	0x00C5, r25
 444:	80 93 c4 00 	sts	0x00C4, r24
 448:	88 e9       	ldi	r24, 0x98	; 152
 44a:	80 93 c1 00 	sts	0x00C1, r24
 44e:	8e e0       	ldi	r24, 0x0E	; 14
 450:	80 93 c2 00 	sts	0x00C2, r24
 454:	24 9a       	sbi	0x04, 4	; 4
 456:	08 95       	ret

00000458 <USART_Transmit>:
 458:	e0 ec       	ldi	r30, 0xC0	; 192
 45a:	f0 e0       	ldi	r31, 0x00	; 0
 45c:	90 81       	ld	r25, Z
 45e:	95 ff       	sbrs	r25, 5
 460:	fd cf       	rjmp	.-6      	; 0x45c <USART_Transmit+0x4>
 462:	80 93 c6 00 	sts	0x00C6, r24
 466:	08 95       	ret

00000468 <__vector_18>:

ISR (USART_RX_vect)
{
 468:	1f 92       	push	r1
 46a:	0f 92       	push	r0
 46c:	0f b6       	in	r0, 0x3f	; 63
 46e:	0f 92       	push	r0
 470:	11 24       	eor	r1, r1
 472:	8f 93       	push	r24
	//unsigned char receivedByte;
	//receivedByte = UDR0; // Fetch the received byte value into the variable "ByteReceived"
	//UDR0 = receivedByte; // Echo back the received byte back to the computer
unsigned char ch = UDR0;
 474:	80 91 c6 00 	lds	r24, 0x00C6
	if(ch=='a')
 478:	81 36       	cpi	r24, 0x61	; 97
 47a:	11 f4       	brne	.+4      	; 0x480 <__vector_18+0x18>
		{
			PORTB|= 1<<PINB4;
 47c:	2c 9a       	sbi	0x05, 4	; 5
 47e:	03 c0       	rjmp	.+6      	; 0x486 <__vector_18+0x1e>
		}
	else if(ch=='s')
 480:	83 37       	cpi	r24, 0x73	; 115
 482:	09 f4       	brne	.+2      	; 0x486 <__vector_18+0x1e>
		{
			PORTB &= ~(1<<PINB4);
 484:	2c 98       	cbi	0x05, 4	; 5
		}
 486:	8f 91       	pop	r24
 488:	0f 90       	pop	r0
 48a:	0f be       	out	0x3f, r0	; 63
 48c:	0f 90       	pop	r0
 48e:	1f 90       	pop	r1
 490:	18 95       	reti

00000492 <main>:


int main(void)
{	
	
	PWM_init();
 492:	0e 94 5f 02 	call	0x4be	; 0x4be <PWM_init>
	timer1_init();
 496:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <timer1_init>
	timer2_init();
 49a:	0e 94 67 02 	call	0x4ce	; 0x4ce <timer2_init>
	USART_Init(MYUBRR);
 49e:	87 e6       	ldi	r24, 0x67	; 103
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	0e 94 20 02 	call	0x440	; 0x440 <USART_Init>
	adc_init();
 4a6:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <adc_init>
	display_init();
 4aa:	0e 94 9e 00 	call	0x13c	; 0x13c <display_init>
	pushbutton_init();
 4ae:	0e 94 a5 00 	call	0x14a	; 0x14a <pushbutton_init>
	
	sei();
 4b2:	78 94       	sei
	
	display_digit(0);
 4b4:	80 e0       	ldi	r24, 0x00	; 0
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	0e 94 ae 00 	call	0x15c	; 0x15c <display_digit>
    
	while (1) 
    {
		
    }
 4bc:	ff cf       	rjmp	.-2      	; 0x4bc <main+0x2a>

000004be <PWM_init>:
void PWM_init()
{
	//Fast PWM mode, clear on compare match
	//TCCR0A|=(1<<COM0A1)|(1<<WGM01)|(1<<WGM00);
	//Phase correct, clear on compare match
	TCCR0A|=(1<<COM0A1)|(1<<WGM00);
 4be:	84 b5       	in	r24, 0x24	; 36
 4c0:	81 68       	ori	r24, 0x81	; 129
 4c2:	84 bd       	out	0x24, r24	; 36
	TCCR0B|=(1<<CS00);	//no prescaler
 4c4:	85 b5       	in	r24, 0x25	; 37
 4c6:	81 60       	ori	r24, 0x01	; 1
 4c8:	85 bd       	out	0x25, r24	; 37
	//PWM pin
	DDRD|=(1<<PIND6);
 4ca:	56 9a       	sbi	0x0a, 6	; 10
 4cc:	08 95       	ret

000004ce <timer2_init>:
}

void timer2_init()
{
	//TCNT2 = 3036;
	TCCR2B|=(1<<CS22)|(1<<CS21)|(1<<CS20); //1024 prescaler
 4ce:	e1 eb       	ldi	r30, 0xB1	; 177
 4d0:	f0 e0       	ldi	r31, 0x00	; 0
 4d2:	80 81       	ld	r24, Z
 4d4:	87 60       	ori	r24, 0x07	; 7
 4d6:	80 83       	st	Z, r24
	//enabling overflow interrupt
	TIMSK2|=(1<<TOIE2);
 4d8:	e0 e7       	ldi	r30, 0x70	; 112
 4da:	f0 e0       	ldi	r31, 0x00	; 0
 4dc:	80 81       	ld	r24, Z
 4de:	81 60       	ori	r24, 0x01	; 1
 4e0:	80 83       	st	Z, r24
 4e2:	08 95       	ret

000004e4 <__vector_9>:

}


ISR	(TIMER2_OVF_vect)
{
 4e4:	1f 92       	push	r1
 4e6:	0f 92       	push	r0
 4e8:	0f b6       	in	r0, 0x3f	; 63
 4ea:	0f 92       	push	r0
 4ec:	11 24       	eor	r1, r1
 4ee:	2f 93       	push	r18
 4f0:	3f 93       	push	r19
 4f2:	8f 93       	push	r24
 4f4:	9f 93       	push	r25
	t++;
 4f6:	80 91 04 01 	lds	r24, 0x0104
 4fa:	90 91 05 01 	lds	r25, 0x0105
 4fe:	01 96       	adiw	r24, 0x01	; 1
 500:	90 93 05 01 	sts	0x0105, r25
 504:	80 93 04 01 	sts	0x0104, r24
	switch(state)
 508:	20 91 02 01 	lds	r18, 0x0102
 50c:	30 91 03 01 	lds	r19, 0x0103
 510:	21 30       	cpi	r18, 0x01	; 1
 512:	31 05       	cpc	r19, r1
 514:	f9 f0       	breq	.+62     	; 0x554 <__vector_9+0x70>
 516:	1c f4       	brge	.+6      	; 0x51e <__vector_9+0x3a>
 518:	23 2b       	or	r18, r19
 51a:	41 f0       	breq	.+16     	; 0x52c <__vector_9+0x48>
 51c:	4b c0       	rjmp	.+150    	; 0x5b4 <__vector_9+0xd0>
 51e:	22 30       	cpi	r18, 0x02	; 2
 520:	31 05       	cpc	r19, r1
 522:	29 f1       	breq	.+74     	; 0x56e <__vector_9+0x8a>
 524:	23 30       	cpi	r18, 0x03	; 3
 526:	31 05       	cpc	r19, r1
 528:	b1 f1       	breq	.+108    	; 0x596 <__vector_9+0xb2>
 52a:	44 c0       	rjmp	.+136    	; 0x5b4 <__vector_9+0xd0>
	{
		case 0: OCR0A = OCR0A +	4;
 52c:	87 b5       	in	r24, 0x27	; 39
 52e:	8c 5f       	subi	r24, 0xFC	; 252
 530:	87 bd       	out	0x27, r24	; 39
		if(t==61)
 532:	80 91 04 01 	lds	r24, 0x0104
 536:	90 91 05 01 	lds	r25, 0x0105
 53a:	cd 97       	sbiw	r24, 0x3d	; 61
 53c:	d9 f5       	brne	.+118    	; 0x5b4 <__vector_9+0xd0>
		{
			state=1;
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	90 93 03 01 	sts	0x0103, r25
 546:	80 93 02 01 	sts	0x0102, r24
			t=0;
 54a:	10 92 05 01 	sts	0x0105, r1
 54e:	10 92 04 01 	sts	0x0104, r1
 552:	30 c0       	rjmp	.+96     	; 0x5b4 <__vector_9+0xd0>
		}
		break;
		case 1:	
		if(t==61)
 554:	cd 97       	sbiw	r24, 0x3d	; 61
 556:	71 f5       	brne	.+92     	; 0x5b4 <__vector_9+0xd0>
		{
			
			state=2;
 558:	82 e0       	ldi	r24, 0x02	; 2
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	90 93 03 01 	sts	0x0103, r25
 560:	80 93 02 01 	sts	0x0102, r24
			t=0;
 564:	10 92 05 01 	sts	0x0105, r1
 568:	10 92 04 01 	sts	0x0104, r1
 56c:	23 c0       	rjmp	.+70     	; 0x5b4 <__vector_9+0xd0>
		}
		break;
		case 2:	OCR0A = OCR0A - 4;
 56e:	87 b5       	in	r24, 0x27	; 39
 570:	84 50       	subi	r24, 0x04	; 4
 572:	87 bd       	out	0x27, r24	; 39
		if(t==61)
 574:	80 91 04 01 	lds	r24, 0x0104
 578:	90 91 05 01 	lds	r25, 0x0105
 57c:	cd 97       	sbiw	r24, 0x3d	; 61
 57e:	d1 f4       	brne	.+52     	; 0x5b4 <__vector_9+0xd0>
		{
			state=3;
 580:	83 e0       	ldi	r24, 0x03	; 3
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	90 93 03 01 	sts	0x0103, r25
 588:	80 93 02 01 	sts	0x0102, r24
			t=0;
 58c:	10 92 05 01 	sts	0x0105, r1
 590:	10 92 04 01 	sts	0x0104, r1
 594:	0f c0       	rjmp	.+30     	; 0x5b4 <__vector_9+0xd0>
		}
		break;
		case 3: OCR0A=0;
 596:	17 bc       	out	0x27, r1	; 39
		if(t==61)
 598:	80 91 04 01 	lds	r24, 0x0104
 59c:	90 91 05 01 	lds	r25, 0x0105
 5a0:	cd 97       	sbiw	r24, 0x3d	; 61
 5a2:	41 f4       	brne	.+16     	; 0x5b4 <__vector_9+0xd0>
		{
			state=0;
 5a4:	10 92 03 01 	sts	0x0103, r1
 5a8:	10 92 02 01 	sts	0x0102, r1
			t=0;
 5ac:	10 92 05 01 	sts	0x0105, r1
 5b0:	10 92 04 01 	sts	0x0104, r1
		}
		break;
	}

}
 5b4:	9f 91       	pop	r25
 5b6:	8f 91       	pop	r24
 5b8:	3f 91       	pop	r19
 5ba:	2f 91       	pop	r18
 5bc:	0f 90       	pop	r0
 5be:	0f be       	out	0x3f, r0	; 63
 5c0:	0f 90       	pop	r0
 5c2:	1f 90       	pop	r1
 5c4:	18 95       	reti

000005c6 <timer1_init>:

void timer1_init()
{
	//TIMER 1 (16 bit)    -    normal mode
	//prescaler 1024
	TCCR1B |=(1<<CS12)|(1<<CS10)|(1<<WGM12);
 5c6:	e1 e8       	ldi	r30, 0x81	; 129
 5c8:	f0 e0       	ldi	r31, 0x00	; 0
 5ca:	80 81       	ld	r24, Z
 5cc:	8d 60       	ori	r24, 0x0D	; 13
 5ce:	80 83       	st	Z, r24
	//enabling output compare match A
	TIMSK1 |= (1<<OCIE1A);
 5d0:	ef e6       	ldi	r30, 0x6F	; 111
 5d2:	f0 e0       	ldi	r31, 0x00	; 0
 5d4:	80 81       	ld	r24, Z
 5d6:	82 60       	ori	r24, 0x02	; 2
 5d8:	80 83       	st	Z, r24
	//setting the output compare register A
	OCR1A = 15625;
 5da:	89 e0       	ldi	r24, 0x09	; 9
 5dc:	9d e3       	ldi	r25, 0x3D	; 61
 5de:	90 93 89 00 	sts	0x0089, r25
 5e2:	80 93 88 00 	sts	0x0088, r24
	
	//setting PIND7 as output - LED
	DDRD|=(1<<PIND7);
 5e6:	57 9a       	sbi	0x0a, 7	; 10
 5e8:	08 95       	ret

000005ea <__vector_11>:
}



ISR(TIMER1_COMPA_vect)
{
 5ea:	1f 92       	push	r1
 5ec:	0f 92       	push	r0
 5ee:	0f b6       	in	r0, 0x3f	; 63
 5f0:	0f 92       	push	r0
 5f2:	11 24       	eor	r1, r1
 5f4:	2f 93       	push	r18
 5f6:	3f 93       	push	r19
 5f8:	4f 93       	push	r20
 5fa:	5f 93       	push	r21
 5fc:	6f 93       	push	r22
 5fe:	7f 93       	push	r23
 600:	8f 93       	push	r24
 602:	9f 93       	push	r25
 604:	af 93       	push	r26
 606:	bf 93       	push	r27
 608:	ef 93       	push	r30
 60a:	ff 93       	push	r31
	sending_temperature(temperatura);
 60c:	60 91 06 01 	lds	r22, 0x0106
 610:	70 91 07 01 	lds	r23, 0x0107
 614:	80 91 08 01 	lds	r24, 0x0108
 618:	90 91 09 01 	lds	r25, 0x0109
 61c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <sending_temperature>
	PORTD ^= ( 1 << PIND7 );
 620:	8b b1       	in	r24, 0x0b	; 11
 622:	80 58       	subi	r24, 0x80	; 128
 624:	8b b9       	out	0x0b, r24	; 11
}
 626:	ff 91       	pop	r31
 628:	ef 91       	pop	r30
 62a:	bf 91       	pop	r27
 62c:	af 91       	pop	r26
 62e:	9f 91       	pop	r25
 630:	8f 91       	pop	r24
 632:	7f 91       	pop	r23
 634:	6f 91       	pop	r22
 636:	5f 91       	pop	r21
 638:	4f 91       	pop	r20
 63a:	3f 91       	pop	r19
 63c:	2f 91       	pop	r18
 63e:	0f 90       	pop	r0
 640:	0f be       	out	0x3f, r0	; 63
 642:	0f 90       	pop	r0
 644:	1f 90       	pop	r1
 646:	18 95       	reti

00000648 <__divsf3>:
 648:	0e 94 38 03 	call	0x670	; 0x670 <__divsf3x>
 64c:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_round>
 650:	0e 94 19 04 	call	0x832	; 0x832 <__fp_pscB>
 654:	58 f0       	brcs	.+22     	; 0x66c <__divsf3+0x24>
 656:	0e 94 12 04 	call	0x824	; 0x824 <__fp_pscA>
 65a:	40 f0       	brcs	.+16     	; 0x66c <__divsf3+0x24>
 65c:	29 f4       	brne	.+10     	; 0x668 <__divsf3+0x20>
 65e:	5f 3f       	cpi	r21, 0xFF	; 255
 660:	29 f0       	breq	.+10     	; 0x66c <__divsf3+0x24>
 662:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_inf>
 666:	51 11       	cpse	r21, r1
 668:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__fp_szero>
 66c:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_nan>

00000670 <__divsf3x>:
 670:	0e 94 31 04 	call	0x862	; 0x862 <__fp_split3>
 674:	68 f3       	brcs	.-38     	; 0x650 <__divsf3+0x8>

00000676 <__divsf3_pse>:
 676:	99 23       	and	r25, r25
 678:	b1 f3       	breq	.-20     	; 0x666 <__divsf3+0x1e>
 67a:	55 23       	and	r21, r21
 67c:	91 f3       	breq	.-28     	; 0x662 <__divsf3+0x1a>
 67e:	95 1b       	sub	r25, r21
 680:	55 0b       	sbc	r21, r21
 682:	bb 27       	eor	r27, r27
 684:	aa 27       	eor	r26, r26
 686:	62 17       	cp	r22, r18
 688:	73 07       	cpc	r23, r19
 68a:	84 07       	cpc	r24, r20
 68c:	38 f0       	brcs	.+14     	; 0x69c <__divsf3_pse+0x26>
 68e:	9f 5f       	subi	r25, 0xFF	; 255
 690:	5f 4f       	sbci	r21, 0xFF	; 255
 692:	22 0f       	add	r18, r18
 694:	33 1f       	adc	r19, r19
 696:	44 1f       	adc	r20, r20
 698:	aa 1f       	adc	r26, r26
 69a:	a9 f3       	breq	.-22     	; 0x686 <__divsf3_pse+0x10>
 69c:	35 d0       	rcall	.+106    	; 0x708 <__divsf3_pse+0x92>
 69e:	0e 2e       	mov	r0, r30
 6a0:	3a f0       	brmi	.+14     	; 0x6b0 <__divsf3_pse+0x3a>
 6a2:	e0 e8       	ldi	r30, 0x80	; 128
 6a4:	32 d0       	rcall	.+100    	; 0x70a <__divsf3_pse+0x94>
 6a6:	91 50       	subi	r25, 0x01	; 1
 6a8:	50 40       	sbci	r21, 0x00	; 0
 6aa:	e6 95       	lsr	r30
 6ac:	00 1c       	adc	r0, r0
 6ae:	ca f7       	brpl	.-14     	; 0x6a2 <__divsf3_pse+0x2c>
 6b0:	2b d0       	rcall	.+86     	; 0x708 <__divsf3_pse+0x92>
 6b2:	fe 2f       	mov	r31, r30
 6b4:	29 d0       	rcall	.+82     	; 0x708 <__divsf3_pse+0x92>
 6b6:	66 0f       	add	r22, r22
 6b8:	77 1f       	adc	r23, r23
 6ba:	88 1f       	adc	r24, r24
 6bc:	bb 1f       	adc	r27, r27
 6be:	26 17       	cp	r18, r22
 6c0:	37 07       	cpc	r19, r23
 6c2:	48 07       	cpc	r20, r24
 6c4:	ab 07       	cpc	r26, r27
 6c6:	b0 e8       	ldi	r27, 0x80	; 128
 6c8:	09 f0       	breq	.+2      	; 0x6cc <__divsf3_pse+0x56>
 6ca:	bb 0b       	sbc	r27, r27
 6cc:	80 2d       	mov	r24, r0
 6ce:	bf 01       	movw	r22, r30
 6d0:	ff 27       	eor	r31, r31
 6d2:	93 58       	subi	r25, 0x83	; 131
 6d4:	5f 4f       	sbci	r21, 0xFF	; 255
 6d6:	3a f0       	brmi	.+14     	; 0x6e6 <__divsf3_pse+0x70>
 6d8:	9e 3f       	cpi	r25, 0xFE	; 254
 6da:	51 05       	cpc	r21, r1
 6dc:	78 f0       	brcs	.+30     	; 0x6fc <__divsf3_pse+0x86>
 6de:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_inf>
 6e2:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__fp_szero>
 6e6:	5f 3f       	cpi	r21, 0xFF	; 255
 6e8:	e4 f3       	brlt	.-8      	; 0x6e2 <__divsf3_pse+0x6c>
 6ea:	98 3e       	cpi	r25, 0xE8	; 232
 6ec:	d4 f3       	brlt	.-12     	; 0x6e2 <__divsf3_pse+0x6c>
 6ee:	86 95       	lsr	r24
 6f0:	77 95       	ror	r23
 6f2:	67 95       	ror	r22
 6f4:	b7 95       	ror	r27
 6f6:	f7 95       	ror	r31
 6f8:	9f 5f       	subi	r25, 0xFF	; 255
 6fa:	c9 f7       	brne	.-14     	; 0x6ee <__divsf3_pse+0x78>
 6fc:	88 0f       	add	r24, r24
 6fe:	91 1d       	adc	r25, r1
 700:	96 95       	lsr	r25
 702:	87 95       	ror	r24
 704:	97 f9       	bld	r25, 7
 706:	08 95       	ret
 708:	e1 e0       	ldi	r30, 0x01	; 1
 70a:	66 0f       	add	r22, r22
 70c:	77 1f       	adc	r23, r23
 70e:	88 1f       	adc	r24, r24
 710:	bb 1f       	adc	r27, r27
 712:	62 17       	cp	r22, r18
 714:	73 07       	cpc	r23, r19
 716:	84 07       	cpc	r24, r20
 718:	ba 07       	cpc	r27, r26
 71a:	20 f0       	brcs	.+8      	; 0x724 <__divsf3_pse+0xae>
 71c:	62 1b       	sub	r22, r18
 71e:	73 0b       	sbc	r23, r19
 720:	84 0b       	sbc	r24, r20
 722:	ba 0b       	sbc	r27, r26
 724:	ee 1f       	adc	r30, r30
 726:	88 f7       	brcc	.-30     	; 0x70a <__divsf3_pse+0x94>
 728:	e0 95       	com	r30
 72a:	08 95       	ret

0000072c <__fixsfsi>:
 72c:	0e 94 9d 03 	call	0x73a	; 0x73a <__fixunssfsi>
 730:	68 94       	set
 732:	b1 11       	cpse	r27, r1
 734:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__fp_szero>
 738:	08 95       	ret

0000073a <__fixunssfsi>:
 73a:	0e 94 39 04 	call	0x872	; 0x872 <__fp_splitA>
 73e:	88 f0       	brcs	.+34     	; 0x762 <__fixunssfsi+0x28>
 740:	9f 57       	subi	r25, 0x7F	; 127
 742:	98 f0       	brcs	.+38     	; 0x76a <__fixunssfsi+0x30>
 744:	b9 2f       	mov	r27, r25
 746:	99 27       	eor	r25, r25
 748:	b7 51       	subi	r27, 0x17	; 23
 74a:	b0 f0       	brcs	.+44     	; 0x778 <__fixunssfsi+0x3e>
 74c:	e1 f0       	breq	.+56     	; 0x786 <__fixunssfsi+0x4c>
 74e:	66 0f       	add	r22, r22
 750:	77 1f       	adc	r23, r23
 752:	88 1f       	adc	r24, r24
 754:	99 1f       	adc	r25, r25
 756:	1a f0       	brmi	.+6      	; 0x75e <__fixunssfsi+0x24>
 758:	ba 95       	dec	r27
 75a:	c9 f7       	brne	.-14     	; 0x74e <__fixunssfsi+0x14>
 75c:	14 c0       	rjmp	.+40     	; 0x786 <__fixunssfsi+0x4c>
 75e:	b1 30       	cpi	r27, 0x01	; 1
 760:	91 f0       	breq	.+36     	; 0x786 <__fixunssfsi+0x4c>
 762:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__fp_zero>
 766:	b1 e0       	ldi	r27, 0x01	; 1
 768:	08 95       	ret
 76a:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__fp_zero>
 76e:	67 2f       	mov	r22, r23
 770:	78 2f       	mov	r23, r24
 772:	88 27       	eor	r24, r24
 774:	b8 5f       	subi	r27, 0xF8	; 248
 776:	39 f0       	breq	.+14     	; 0x786 <__fixunssfsi+0x4c>
 778:	b9 3f       	cpi	r27, 0xF9	; 249
 77a:	cc f3       	brlt	.-14     	; 0x76e <__fixunssfsi+0x34>
 77c:	86 95       	lsr	r24
 77e:	77 95       	ror	r23
 780:	67 95       	ror	r22
 782:	b3 95       	inc	r27
 784:	d9 f7       	brne	.-10     	; 0x77c <__fixunssfsi+0x42>
 786:	3e f4       	brtc	.+14     	; 0x796 <__fixunssfsi+0x5c>
 788:	90 95       	com	r25
 78a:	80 95       	com	r24
 78c:	70 95       	com	r23
 78e:	61 95       	neg	r22
 790:	7f 4f       	sbci	r23, 0xFF	; 255
 792:	8f 4f       	sbci	r24, 0xFF	; 255
 794:	9f 4f       	sbci	r25, 0xFF	; 255
 796:	08 95       	ret

00000798 <__floatunsisf>:
 798:	e8 94       	clt
 79a:	09 c0       	rjmp	.+18     	; 0x7ae <__floatsisf+0x12>

0000079c <__floatsisf>:
 79c:	97 fb       	bst	r25, 7
 79e:	3e f4       	brtc	.+14     	; 0x7ae <__floatsisf+0x12>
 7a0:	90 95       	com	r25
 7a2:	80 95       	com	r24
 7a4:	70 95       	com	r23
 7a6:	61 95       	neg	r22
 7a8:	7f 4f       	sbci	r23, 0xFF	; 255
 7aa:	8f 4f       	sbci	r24, 0xFF	; 255
 7ac:	9f 4f       	sbci	r25, 0xFF	; 255
 7ae:	99 23       	and	r25, r25
 7b0:	a9 f0       	breq	.+42     	; 0x7dc <__floatsisf+0x40>
 7b2:	f9 2f       	mov	r31, r25
 7b4:	96 e9       	ldi	r25, 0x96	; 150
 7b6:	bb 27       	eor	r27, r27
 7b8:	93 95       	inc	r25
 7ba:	f6 95       	lsr	r31
 7bc:	87 95       	ror	r24
 7be:	77 95       	ror	r23
 7c0:	67 95       	ror	r22
 7c2:	b7 95       	ror	r27
 7c4:	f1 11       	cpse	r31, r1
 7c6:	f8 cf       	rjmp	.-16     	; 0x7b8 <__floatsisf+0x1c>
 7c8:	fa f4       	brpl	.+62     	; 0x808 <__floatsisf+0x6c>
 7ca:	bb 0f       	add	r27, r27
 7cc:	11 f4       	brne	.+4      	; 0x7d2 <__floatsisf+0x36>
 7ce:	60 ff       	sbrs	r22, 0
 7d0:	1b c0       	rjmp	.+54     	; 0x808 <__floatsisf+0x6c>
 7d2:	6f 5f       	subi	r22, 0xFF	; 255
 7d4:	7f 4f       	sbci	r23, 0xFF	; 255
 7d6:	8f 4f       	sbci	r24, 0xFF	; 255
 7d8:	9f 4f       	sbci	r25, 0xFF	; 255
 7da:	16 c0       	rjmp	.+44     	; 0x808 <__floatsisf+0x6c>
 7dc:	88 23       	and	r24, r24
 7de:	11 f0       	breq	.+4      	; 0x7e4 <__floatsisf+0x48>
 7e0:	96 e9       	ldi	r25, 0x96	; 150
 7e2:	11 c0       	rjmp	.+34     	; 0x806 <__floatsisf+0x6a>
 7e4:	77 23       	and	r23, r23
 7e6:	21 f0       	breq	.+8      	; 0x7f0 <__floatsisf+0x54>
 7e8:	9e e8       	ldi	r25, 0x8E	; 142
 7ea:	87 2f       	mov	r24, r23
 7ec:	76 2f       	mov	r23, r22
 7ee:	05 c0       	rjmp	.+10     	; 0x7fa <__floatsisf+0x5e>
 7f0:	66 23       	and	r22, r22
 7f2:	71 f0       	breq	.+28     	; 0x810 <__floatsisf+0x74>
 7f4:	96 e8       	ldi	r25, 0x86	; 134
 7f6:	86 2f       	mov	r24, r22
 7f8:	70 e0       	ldi	r23, 0x00	; 0
 7fa:	60 e0       	ldi	r22, 0x00	; 0
 7fc:	2a f0       	brmi	.+10     	; 0x808 <__floatsisf+0x6c>
 7fe:	9a 95       	dec	r25
 800:	66 0f       	add	r22, r22
 802:	77 1f       	adc	r23, r23
 804:	88 1f       	adc	r24, r24
 806:	da f7       	brpl	.-10     	; 0x7fe <__floatsisf+0x62>
 808:	88 0f       	add	r24, r24
 80a:	96 95       	lsr	r25
 80c:	87 95       	ror	r24
 80e:	97 f9       	bld	r25, 7
 810:	08 95       	ret

00000812 <__fp_inf>:
 812:	97 f9       	bld	r25, 7
 814:	9f 67       	ori	r25, 0x7F	; 127
 816:	80 e8       	ldi	r24, 0x80	; 128
 818:	70 e0       	ldi	r23, 0x00	; 0
 81a:	60 e0       	ldi	r22, 0x00	; 0
 81c:	08 95       	ret

0000081e <__fp_nan>:
 81e:	9f ef       	ldi	r25, 0xFF	; 255
 820:	80 ec       	ldi	r24, 0xC0	; 192
 822:	08 95       	ret

00000824 <__fp_pscA>:
 824:	00 24       	eor	r0, r0
 826:	0a 94       	dec	r0
 828:	16 16       	cp	r1, r22
 82a:	17 06       	cpc	r1, r23
 82c:	18 06       	cpc	r1, r24
 82e:	09 06       	cpc	r0, r25
 830:	08 95       	ret

00000832 <__fp_pscB>:
 832:	00 24       	eor	r0, r0
 834:	0a 94       	dec	r0
 836:	12 16       	cp	r1, r18
 838:	13 06       	cpc	r1, r19
 83a:	14 06       	cpc	r1, r20
 83c:	05 06       	cpc	r0, r21
 83e:	08 95       	ret

00000840 <__fp_round>:
 840:	09 2e       	mov	r0, r25
 842:	03 94       	inc	r0
 844:	00 0c       	add	r0, r0
 846:	11 f4       	brne	.+4      	; 0x84c <__fp_round+0xc>
 848:	88 23       	and	r24, r24
 84a:	52 f0       	brmi	.+20     	; 0x860 <__fp_round+0x20>
 84c:	bb 0f       	add	r27, r27
 84e:	40 f4       	brcc	.+16     	; 0x860 <__fp_round+0x20>
 850:	bf 2b       	or	r27, r31
 852:	11 f4       	brne	.+4      	; 0x858 <__fp_round+0x18>
 854:	60 ff       	sbrs	r22, 0
 856:	04 c0       	rjmp	.+8      	; 0x860 <__fp_round+0x20>
 858:	6f 5f       	subi	r22, 0xFF	; 255
 85a:	7f 4f       	sbci	r23, 0xFF	; 255
 85c:	8f 4f       	sbci	r24, 0xFF	; 255
 85e:	9f 4f       	sbci	r25, 0xFF	; 255
 860:	08 95       	ret

00000862 <__fp_split3>:
 862:	57 fd       	sbrc	r21, 7
 864:	90 58       	subi	r25, 0x80	; 128
 866:	44 0f       	add	r20, r20
 868:	55 1f       	adc	r21, r21
 86a:	59 f0       	breq	.+22     	; 0x882 <__fp_splitA+0x10>
 86c:	5f 3f       	cpi	r21, 0xFF	; 255
 86e:	71 f0       	breq	.+28     	; 0x88c <__fp_splitA+0x1a>
 870:	47 95       	ror	r20

00000872 <__fp_splitA>:
 872:	88 0f       	add	r24, r24
 874:	97 fb       	bst	r25, 7
 876:	99 1f       	adc	r25, r25
 878:	61 f0       	breq	.+24     	; 0x892 <__fp_splitA+0x20>
 87a:	9f 3f       	cpi	r25, 0xFF	; 255
 87c:	79 f0       	breq	.+30     	; 0x89c <__fp_splitA+0x2a>
 87e:	87 95       	ror	r24
 880:	08 95       	ret
 882:	12 16       	cp	r1, r18
 884:	13 06       	cpc	r1, r19
 886:	14 06       	cpc	r1, r20
 888:	55 1f       	adc	r21, r21
 88a:	f2 cf       	rjmp	.-28     	; 0x870 <__fp_split3+0xe>
 88c:	46 95       	lsr	r20
 88e:	f1 df       	rcall	.-30     	; 0x872 <__fp_splitA>
 890:	08 c0       	rjmp	.+16     	; 0x8a2 <__fp_splitA+0x30>
 892:	16 16       	cp	r1, r22
 894:	17 06       	cpc	r1, r23
 896:	18 06       	cpc	r1, r24
 898:	99 1f       	adc	r25, r25
 89a:	f1 cf       	rjmp	.-30     	; 0x87e <__fp_splitA+0xc>
 89c:	86 95       	lsr	r24
 89e:	71 05       	cpc	r23, r1
 8a0:	61 05       	cpc	r22, r1
 8a2:	08 94       	sec
 8a4:	08 95       	ret

000008a6 <__fp_zero>:
 8a6:	e8 94       	clt

000008a8 <__fp_szero>:
 8a8:	bb 27       	eor	r27, r27
 8aa:	66 27       	eor	r22, r22
 8ac:	77 27       	eor	r23, r23
 8ae:	cb 01       	movw	r24, r22
 8b0:	97 f9       	bld	r25, 7
 8b2:	08 95       	ret

000008b4 <__gesf2>:
 8b4:	0e 94 56 05 	call	0xaac	; 0xaac <__fp_cmp>
 8b8:	08 f4       	brcc	.+2      	; 0x8bc <__gesf2+0x8>
 8ba:	8f ef       	ldi	r24, 0xFF	; 255
 8bc:	08 95       	ret

000008be <__mulsf3>:
 8be:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__mulsf3x>
 8c2:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_round>
 8c6:	0e 94 12 04 	call	0x824	; 0x824 <__fp_pscA>
 8ca:	38 f0       	brcs	.+14     	; 0x8da <__mulsf3+0x1c>
 8cc:	0e 94 19 04 	call	0x832	; 0x832 <__fp_pscB>
 8d0:	20 f0       	brcs	.+8      	; 0x8da <__mulsf3+0x1c>
 8d2:	95 23       	and	r25, r21
 8d4:	11 f0       	breq	.+4      	; 0x8da <__mulsf3+0x1c>
 8d6:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_inf>
 8da:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_nan>
 8de:	11 24       	eor	r1, r1
 8e0:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__fp_szero>

000008e4 <__mulsf3x>:
 8e4:	0e 94 31 04 	call	0x862	; 0x862 <__fp_split3>
 8e8:	70 f3       	brcs	.-36     	; 0x8c6 <__mulsf3+0x8>

000008ea <__mulsf3_pse>:
 8ea:	95 9f       	mul	r25, r21
 8ec:	c1 f3       	breq	.-16     	; 0x8de <__mulsf3+0x20>
 8ee:	95 0f       	add	r25, r21
 8f0:	50 e0       	ldi	r21, 0x00	; 0
 8f2:	55 1f       	adc	r21, r21
 8f4:	62 9f       	mul	r22, r18
 8f6:	f0 01       	movw	r30, r0
 8f8:	72 9f       	mul	r23, r18
 8fa:	bb 27       	eor	r27, r27
 8fc:	f0 0d       	add	r31, r0
 8fe:	b1 1d       	adc	r27, r1
 900:	63 9f       	mul	r22, r19
 902:	aa 27       	eor	r26, r26
 904:	f0 0d       	add	r31, r0
 906:	b1 1d       	adc	r27, r1
 908:	aa 1f       	adc	r26, r26
 90a:	64 9f       	mul	r22, r20
 90c:	66 27       	eor	r22, r22
 90e:	b0 0d       	add	r27, r0
 910:	a1 1d       	adc	r26, r1
 912:	66 1f       	adc	r22, r22
 914:	82 9f       	mul	r24, r18
 916:	22 27       	eor	r18, r18
 918:	b0 0d       	add	r27, r0
 91a:	a1 1d       	adc	r26, r1
 91c:	62 1f       	adc	r22, r18
 91e:	73 9f       	mul	r23, r19
 920:	b0 0d       	add	r27, r0
 922:	a1 1d       	adc	r26, r1
 924:	62 1f       	adc	r22, r18
 926:	83 9f       	mul	r24, r19
 928:	a0 0d       	add	r26, r0
 92a:	61 1d       	adc	r22, r1
 92c:	22 1f       	adc	r18, r18
 92e:	74 9f       	mul	r23, r20
 930:	33 27       	eor	r19, r19
 932:	a0 0d       	add	r26, r0
 934:	61 1d       	adc	r22, r1
 936:	23 1f       	adc	r18, r19
 938:	84 9f       	mul	r24, r20
 93a:	60 0d       	add	r22, r0
 93c:	21 1d       	adc	r18, r1
 93e:	82 2f       	mov	r24, r18
 940:	76 2f       	mov	r23, r22
 942:	6a 2f       	mov	r22, r26
 944:	11 24       	eor	r1, r1
 946:	9f 57       	subi	r25, 0x7F	; 127
 948:	50 40       	sbci	r21, 0x00	; 0
 94a:	9a f0       	brmi	.+38     	; 0x972 <__stack+0x73>
 94c:	f1 f0       	breq	.+60     	; 0x98a <__stack+0x8b>
 94e:	88 23       	and	r24, r24
 950:	4a f0       	brmi	.+18     	; 0x964 <__stack+0x65>
 952:	ee 0f       	add	r30, r30
 954:	ff 1f       	adc	r31, r31
 956:	bb 1f       	adc	r27, r27
 958:	66 1f       	adc	r22, r22
 95a:	77 1f       	adc	r23, r23
 95c:	88 1f       	adc	r24, r24
 95e:	91 50       	subi	r25, 0x01	; 1
 960:	50 40       	sbci	r21, 0x00	; 0
 962:	a9 f7       	brne	.-22     	; 0x94e <__stack+0x4f>
 964:	9e 3f       	cpi	r25, 0xFE	; 254
 966:	51 05       	cpc	r21, r1
 968:	80 f0       	brcs	.+32     	; 0x98a <__stack+0x8b>
 96a:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_inf>
 96e:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__fp_szero>
 972:	5f 3f       	cpi	r21, 0xFF	; 255
 974:	e4 f3       	brlt	.-8      	; 0x96e <__stack+0x6f>
 976:	98 3e       	cpi	r25, 0xE8	; 232
 978:	d4 f3       	brlt	.-12     	; 0x96e <__stack+0x6f>
 97a:	86 95       	lsr	r24
 97c:	77 95       	ror	r23
 97e:	67 95       	ror	r22
 980:	b7 95       	ror	r27
 982:	f7 95       	ror	r31
 984:	e7 95       	ror	r30
 986:	9f 5f       	subi	r25, 0xFF	; 255
 988:	c1 f7       	brne	.-16     	; 0x97a <__stack+0x7b>
 98a:	fe 2b       	or	r31, r30
 98c:	88 0f       	add	r24, r24
 98e:	91 1d       	adc	r25, r1
 990:	96 95       	lsr	r25
 992:	87 95       	ror	r24
 994:	97 f9       	bld	r25, 7
 996:	08 95       	ret

00000998 <pow>:
 998:	fa 01       	movw	r30, r20
 99a:	ee 0f       	add	r30, r30
 99c:	ff 1f       	adc	r31, r31
 99e:	30 96       	adiw	r30, 0x00	; 0
 9a0:	21 05       	cpc	r18, r1
 9a2:	31 05       	cpc	r19, r1
 9a4:	a1 f1       	breq	.+104    	; 0xa0e <pow+0x76>
 9a6:	61 15       	cp	r22, r1
 9a8:	71 05       	cpc	r23, r1
 9aa:	61 f4       	brne	.+24     	; 0x9c4 <pow+0x2c>
 9ac:	80 38       	cpi	r24, 0x80	; 128
 9ae:	bf e3       	ldi	r27, 0x3F	; 63
 9b0:	9b 07       	cpc	r25, r27
 9b2:	49 f1       	breq	.+82     	; 0xa06 <pow+0x6e>
 9b4:	68 94       	set
 9b6:	90 38       	cpi	r25, 0x80	; 128
 9b8:	81 05       	cpc	r24, r1
 9ba:	61 f0       	breq	.+24     	; 0x9d4 <pow+0x3c>
 9bc:	80 38       	cpi	r24, 0x80	; 128
 9be:	bf ef       	ldi	r27, 0xFF	; 255
 9c0:	9b 07       	cpc	r25, r27
 9c2:	41 f0       	breq	.+16     	; 0x9d4 <pow+0x3c>
 9c4:	99 23       	and	r25, r25
 9c6:	4a f5       	brpl	.+82     	; 0xa1a <pow+0x82>
 9c8:	ff 3f       	cpi	r31, 0xFF	; 255
 9ca:	e1 05       	cpc	r30, r1
 9cc:	31 05       	cpc	r19, r1
 9ce:	21 05       	cpc	r18, r1
 9d0:	19 f1       	breq	.+70     	; 0xa18 <pow+0x80>
 9d2:	e8 94       	clt
 9d4:	08 94       	sec
 9d6:	e7 95       	ror	r30
 9d8:	d9 01       	movw	r26, r18
 9da:	aa 23       	and	r26, r26
 9dc:	29 f4       	brne	.+10     	; 0x9e8 <pow+0x50>
 9de:	ab 2f       	mov	r26, r27
 9e0:	be 2f       	mov	r27, r30
 9e2:	f8 5f       	subi	r31, 0xF8	; 248
 9e4:	d0 f3       	brcs	.-12     	; 0x9da <pow+0x42>
 9e6:	10 c0       	rjmp	.+32     	; 0xa08 <pow+0x70>
 9e8:	ff 5f       	subi	r31, 0xFF	; 255
 9ea:	70 f4       	brcc	.+28     	; 0xa08 <pow+0x70>
 9ec:	a6 95       	lsr	r26
 9ee:	e0 f7       	brcc	.-8      	; 0x9e8 <pow+0x50>
 9f0:	f7 39       	cpi	r31, 0x97	; 151
 9f2:	50 f0       	brcs	.+20     	; 0xa08 <pow+0x70>
 9f4:	19 f0       	breq	.+6      	; 0x9fc <pow+0x64>
 9f6:	ff 3a       	cpi	r31, 0xAF	; 175
 9f8:	38 f4       	brcc	.+14     	; 0xa08 <pow+0x70>
 9fa:	9f 77       	andi	r25, 0x7F	; 127
 9fc:	9f 93       	push	r25
 9fe:	0d d0       	rcall	.+26     	; 0xa1a <pow+0x82>
 a00:	0f 90       	pop	r0
 a02:	07 fc       	sbrc	r0, 7
 a04:	90 58       	subi	r25, 0x80	; 128
 a06:	08 95       	ret
 a08:	46 f0       	brts	.+16     	; 0xa1a <pow+0x82>
 a0a:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_nan>
 a0e:	60 e0       	ldi	r22, 0x00	; 0
 a10:	70 e0       	ldi	r23, 0x00	; 0
 a12:	80 e8       	ldi	r24, 0x80	; 128
 a14:	9f e3       	ldi	r25, 0x3F	; 63
 a16:	08 95       	ret
 a18:	4f e7       	ldi	r20, 0x7F	; 127
 a1a:	9f 77       	andi	r25, 0x7F	; 127
 a1c:	5f 93       	push	r21
 a1e:	4f 93       	push	r20
 a20:	3f 93       	push	r19
 a22:	2f 93       	push	r18
 a24:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <log>
 a28:	2f 91       	pop	r18
 a2a:	3f 91       	pop	r19
 a2c:	4f 91       	pop	r20
 a2e:	5f 91       	pop	r21
 a30:	0e 94 5f 04 	call	0x8be	; 0x8be <__mulsf3>
 a34:	0c 94 24 05 	jmp	0xa48	; 0xa48 <exp>
 a38:	29 f4       	brne	.+10     	; 0xa44 <pow+0xac>
 a3a:	16 f0       	brts	.+4      	; 0xa40 <pow+0xa8>
 a3c:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_inf>
 a40:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__fp_zero>
 a44:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_nan>

00000a48 <exp>:
 a48:	0e 94 39 04 	call	0x872	; 0x872 <__fp_splitA>
 a4c:	a8 f3       	brcs	.-22     	; 0xa38 <pow+0xa0>
 a4e:	96 38       	cpi	r25, 0x86	; 134
 a50:	a0 f7       	brcc	.-24     	; 0xa3a <pow+0xa2>
 a52:	07 f8       	bld	r0, 7
 a54:	0f 92       	push	r0
 a56:	e8 94       	clt
 a58:	2b e3       	ldi	r18, 0x3B	; 59
 a5a:	3a ea       	ldi	r19, 0xAA	; 170
 a5c:	48 eb       	ldi	r20, 0xB8	; 184
 a5e:	5f e7       	ldi	r21, 0x7F	; 127
 a60:	0e 94 75 04 	call	0x8ea	; 0x8ea <__mulsf3_pse>
 a64:	0f 92       	push	r0
 a66:	0f 92       	push	r0
 a68:	0f 92       	push	r0
 a6a:	4d b7       	in	r20, 0x3d	; 61
 a6c:	5e b7       	in	r21, 0x3e	; 62
 a6e:	0f 92       	push	r0
 a70:	0e 94 33 06 	call	0xc66	; 0xc66 <modf>
 a74:	ec e7       	ldi	r30, 0x7C	; 124
 a76:	f0 e0       	ldi	r31, 0x00	; 0
 a78:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_powser>
 a7c:	4f 91       	pop	r20
 a7e:	5f 91       	pop	r21
 a80:	ef 91       	pop	r30
 a82:	ff 91       	pop	r31
 a84:	e5 95       	asr	r30
 a86:	ee 1f       	adc	r30, r30
 a88:	ff 1f       	adc	r31, r31
 a8a:	49 f0       	breq	.+18     	; 0xa9e <exp+0x56>
 a8c:	fe 57       	subi	r31, 0x7E	; 126
 a8e:	e0 68       	ori	r30, 0x80	; 128
 a90:	44 27       	eor	r20, r20
 a92:	ee 0f       	add	r30, r30
 a94:	44 1f       	adc	r20, r20
 a96:	fa 95       	dec	r31
 a98:	e1 f7       	brne	.-8      	; 0xa92 <exp+0x4a>
 a9a:	41 95       	neg	r20
 a9c:	55 0b       	sbc	r21, r21
 a9e:	0e 94 ad 05 	call	0xb5a	; 0xb5a <ldexp>
 aa2:	0f 90       	pop	r0
 aa4:	07 fe       	sbrs	r0, 7
 aa6:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <inverse>
 aaa:	08 95       	ret

00000aac <__fp_cmp>:
 aac:	99 0f       	add	r25, r25
 aae:	00 08       	sbc	r0, r0
 ab0:	55 0f       	add	r21, r21
 ab2:	aa 0b       	sbc	r26, r26
 ab4:	e0 e8       	ldi	r30, 0x80	; 128
 ab6:	fe ef       	ldi	r31, 0xFE	; 254
 ab8:	16 16       	cp	r1, r22
 aba:	17 06       	cpc	r1, r23
 abc:	e8 07       	cpc	r30, r24
 abe:	f9 07       	cpc	r31, r25
 ac0:	c0 f0       	brcs	.+48     	; 0xaf2 <__fp_cmp+0x46>
 ac2:	12 16       	cp	r1, r18
 ac4:	13 06       	cpc	r1, r19
 ac6:	e4 07       	cpc	r30, r20
 ac8:	f5 07       	cpc	r31, r21
 aca:	98 f0       	brcs	.+38     	; 0xaf2 <__fp_cmp+0x46>
 acc:	62 1b       	sub	r22, r18
 ace:	73 0b       	sbc	r23, r19
 ad0:	84 0b       	sbc	r24, r20
 ad2:	95 0b       	sbc	r25, r21
 ad4:	39 f4       	brne	.+14     	; 0xae4 <__fp_cmp+0x38>
 ad6:	0a 26       	eor	r0, r26
 ad8:	61 f0       	breq	.+24     	; 0xaf2 <__fp_cmp+0x46>
 ada:	23 2b       	or	r18, r19
 adc:	24 2b       	or	r18, r20
 ade:	25 2b       	or	r18, r21
 ae0:	21 f4       	brne	.+8      	; 0xaea <__fp_cmp+0x3e>
 ae2:	08 95       	ret
 ae4:	0a 26       	eor	r0, r26
 ae6:	09 f4       	brne	.+2      	; 0xaea <__fp_cmp+0x3e>
 ae8:	a1 40       	sbci	r26, 0x01	; 1
 aea:	a6 95       	lsr	r26
 aec:	8f ef       	ldi	r24, 0xFF	; 255
 aee:	81 1d       	adc	r24, r1
 af0:	81 1d       	adc	r24, r1
 af2:	08 95       	ret

00000af4 <__fp_powser>:
 af4:	df 93       	push	r29
 af6:	cf 93       	push	r28
 af8:	1f 93       	push	r17
 afa:	0f 93       	push	r16
 afc:	ff 92       	push	r15
 afe:	ef 92       	push	r14
 b00:	df 92       	push	r13
 b02:	7b 01       	movw	r14, r22
 b04:	8c 01       	movw	r16, r24
 b06:	68 94       	set
 b08:	06 c0       	rjmp	.+12     	; 0xb16 <__fp_powser+0x22>
 b0a:	da 2e       	mov	r13, r26
 b0c:	ef 01       	movw	r28, r30
 b0e:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__mulsf3x>
 b12:	fe 01       	movw	r30, r28
 b14:	e8 94       	clt
 b16:	a5 91       	lpm	r26, Z+
 b18:	25 91       	lpm	r18, Z+
 b1a:	35 91       	lpm	r19, Z+
 b1c:	45 91       	lpm	r20, Z+
 b1e:	55 91       	lpm	r21, Z+
 b20:	a6 f3       	brts	.-24     	; 0xb0a <__fp_powser+0x16>
 b22:	ef 01       	movw	r28, r30
 b24:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__addsf3x>
 b28:	fe 01       	movw	r30, r28
 b2a:	97 01       	movw	r18, r14
 b2c:	a8 01       	movw	r20, r16
 b2e:	da 94       	dec	r13
 b30:	69 f7       	brne	.-38     	; 0xb0c <__fp_powser+0x18>
 b32:	df 90       	pop	r13
 b34:	ef 90       	pop	r14
 b36:	ff 90       	pop	r15
 b38:	0f 91       	pop	r16
 b3a:	1f 91       	pop	r17
 b3c:	cf 91       	pop	r28
 b3e:	df 91       	pop	r29
 b40:	08 95       	ret

00000b42 <inverse>:
 b42:	9b 01       	movw	r18, r22
 b44:	ac 01       	movw	r20, r24
 b46:	60 e0       	ldi	r22, 0x00	; 0
 b48:	70 e0       	ldi	r23, 0x00	; 0
 b4a:	80 e8       	ldi	r24, 0x80	; 128
 b4c:	9f e3       	ldi	r25, 0x3F	; 63
 b4e:	0c 94 24 03 	jmp	0x648	; 0x648 <__divsf3>
 b52:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_inf>
 b56:	0c 94 d4 06 	jmp	0xda8	; 0xda8 <__fp_mpack>

00000b5a <ldexp>:
 b5a:	0e 94 39 04 	call	0x872	; 0x872 <__fp_splitA>
 b5e:	d8 f3       	brcs	.-10     	; 0xb56 <inverse+0x14>
 b60:	99 23       	and	r25, r25
 b62:	c9 f3       	breq	.-14     	; 0xb56 <inverse+0x14>
 b64:	94 0f       	add	r25, r20
 b66:	51 1d       	adc	r21, r1
 b68:	a3 f3       	brvs	.-24     	; 0xb52 <inverse+0x10>
 b6a:	91 50       	subi	r25, 0x01	; 1
 b6c:	50 40       	sbci	r21, 0x00	; 0
 b6e:	94 f0       	brlt	.+36     	; 0xb94 <ldexp+0x3a>
 b70:	59 f0       	breq	.+22     	; 0xb88 <ldexp+0x2e>
 b72:	88 23       	and	r24, r24
 b74:	32 f0       	brmi	.+12     	; 0xb82 <ldexp+0x28>
 b76:	66 0f       	add	r22, r22
 b78:	77 1f       	adc	r23, r23
 b7a:	88 1f       	adc	r24, r24
 b7c:	91 50       	subi	r25, 0x01	; 1
 b7e:	50 40       	sbci	r21, 0x00	; 0
 b80:	c1 f7       	brne	.-16     	; 0xb72 <ldexp+0x18>
 b82:	9e 3f       	cpi	r25, 0xFE	; 254
 b84:	51 05       	cpc	r21, r1
 b86:	2c f7       	brge	.-54     	; 0xb52 <inverse+0x10>
 b88:	88 0f       	add	r24, r24
 b8a:	91 1d       	adc	r25, r1
 b8c:	96 95       	lsr	r25
 b8e:	87 95       	ror	r24
 b90:	97 f9       	bld	r25, 7
 b92:	08 95       	ret
 b94:	5f 3f       	cpi	r21, 0xFF	; 255
 b96:	ac f0       	brlt	.+42     	; 0xbc2 <ldexp+0x68>
 b98:	98 3e       	cpi	r25, 0xE8	; 232
 b9a:	9c f0       	brlt	.+38     	; 0xbc2 <ldexp+0x68>
 b9c:	bb 27       	eor	r27, r27
 b9e:	86 95       	lsr	r24
 ba0:	77 95       	ror	r23
 ba2:	67 95       	ror	r22
 ba4:	b7 95       	ror	r27
 ba6:	08 f4       	brcc	.+2      	; 0xbaa <ldexp+0x50>
 ba8:	b1 60       	ori	r27, 0x01	; 1
 baa:	93 95       	inc	r25
 bac:	c1 f7       	brne	.-16     	; 0xb9e <ldexp+0x44>
 bae:	bb 0f       	add	r27, r27
 bb0:	58 f7       	brcc	.-42     	; 0xb88 <ldexp+0x2e>
 bb2:	11 f4       	brne	.+4      	; 0xbb8 <ldexp+0x5e>
 bb4:	60 ff       	sbrs	r22, 0
 bb6:	e8 cf       	rjmp	.-48     	; 0xb88 <ldexp+0x2e>
 bb8:	6f 5f       	subi	r22, 0xFF	; 255
 bba:	7f 4f       	sbci	r23, 0xFF	; 255
 bbc:	8f 4f       	sbci	r24, 0xFF	; 255
 bbe:	9f 4f       	sbci	r25, 0xFF	; 255
 bc0:	e3 cf       	rjmp	.-58     	; 0xb88 <ldexp+0x2e>
 bc2:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__fp_szero>
 bc6:	16 f0       	brts	.+4      	; 0xbcc <ldexp+0x72>
 bc8:	0c 94 d4 06 	jmp	0xda8	; 0xda8 <__fp_mpack>
 bcc:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_nan>
 bd0:	68 94       	set
 bd2:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_inf>

00000bd6 <log>:
 bd6:	0e 94 39 04 	call	0x872	; 0x872 <__fp_splitA>
 bda:	a8 f3       	brcs	.-22     	; 0xbc6 <ldexp+0x6c>
 bdc:	99 23       	and	r25, r25
 bde:	c1 f3       	breq	.-16     	; 0xbd0 <ldexp+0x76>
 be0:	ae f3       	brts	.-22     	; 0xbcc <ldexp+0x72>
 be2:	df 93       	push	r29
 be4:	cf 93       	push	r28
 be6:	1f 93       	push	r17
 be8:	0f 93       	push	r16
 bea:	ff 92       	push	r15
 bec:	c9 2f       	mov	r28, r25
 bee:	dd 27       	eor	r29, r29
 bf0:	88 23       	and	r24, r24
 bf2:	2a f0       	brmi	.+10     	; 0xbfe <log+0x28>
 bf4:	21 97       	sbiw	r28, 0x01	; 1
 bf6:	66 0f       	add	r22, r22
 bf8:	77 1f       	adc	r23, r23
 bfa:	88 1f       	adc	r24, r24
 bfc:	da f7       	brpl	.-10     	; 0xbf4 <log+0x1e>
 bfe:	20 e0       	ldi	r18, 0x00	; 0
 c00:	30 e0       	ldi	r19, 0x00	; 0
 c02:	40 e8       	ldi	r20, 0x80	; 128
 c04:	5f eb       	ldi	r21, 0xBF	; 191
 c06:	9f e3       	ldi	r25, 0x3F	; 63
 c08:	88 39       	cpi	r24, 0x98	; 152
 c0a:	20 f0       	brcs	.+8      	; 0xc14 <log+0x3e>
 c0c:	80 3e       	cpi	r24, 0xE0	; 224
 c0e:	38 f0       	brcs	.+14     	; 0xc1e <log+0x48>
 c10:	21 96       	adiw	r28, 0x01	; 1
 c12:	8f 77       	andi	r24, 0x7F	; 127
 c14:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__addsf3>
 c18:	e4 ea       	ldi	r30, 0xA4	; 164
 c1a:	f0 e0       	ldi	r31, 0x00	; 0
 c1c:	04 c0       	rjmp	.+8      	; 0xc26 <log+0x50>
 c1e:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__addsf3>
 c22:	e1 ed       	ldi	r30, 0xD1	; 209
 c24:	f0 e0       	ldi	r31, 0x00	; 0
 c26:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_powser>
 c2a:	8b 01       	movw	r16, r22
 c2c:	be 01       	movw	r22, r28
 c2e:	ec 01       	movw	r28, r24
 c30:	fb 2e       	mov	r15, r27
 c32:	6f 57       	subi	r22, 0x7F	; 127
 c34:	71 09       	sbc	r23, r1
 c36:	75 95       	asr	r23
 c38:	77 1f       	adc	r23, r23
 c3a:	88 0b       	sbc	r24, r24
 c3c:	99 0b       	sbc	r25, r25
 c3e:	0e 94 ce 03 	call	0x79c	; 0x79c <__floatsisf>
 c42:	28 e1       	ldi	r18, 0x18	; 24
 c44:	32 e7       	ldi	r19, 0x72	; 114
 c46:	41 e3       	ldi	r20, 0x31	; 49
 c48:	5f e3       	ldi	r21, 0x3F	; 63
 c4a:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__mulsf3x>
 c4e:	af 2d       	mov	r26, r15
 c50:	98 01       	movw	r18, r16
 c52:	ae 01       	movw	r20, r28
 c54:	ff 90       	pop	r15
 c56:	0f 91       	pop	r16
 c58:	1f 91       	pop	r17
 c5a:	cf 91       	pop	r28
 c5c:	df 91       	pop	r29
 c5e:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__addsf3x>
 c62:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_round>

00000c66 <modf>:
 c66:	fa 01       	movw	r30, r20
 c68:	dc 01       	movw	r26, r24
 c6a:	aa 0f       	add	r26, r26
 c6c:	bb 1f       	adc	r27, r27
 c6e:	9b 01       	movw	r18, r22
 c70:	ac 01       	movw	r20, r24
 c72:	bf 57       	subi	r27, 0x7F	; 127
 c74:	28 f4       	brcc	.+10     	; 0xc80 <modf+0x1a>
 c76:	22 27       	eor	r18, r18
 c78:	33 27       	eor	r19, r19
 c7a:	44 27       	eor	r20, r20
 c7c:	50 78       	andi	r21, 0x80	; 128
 c7e:	20 c0       	rjmp	.+64     	; 0xcc0 <modf+0x5a>
 c80:	b7 51       	subi	r27, 0x17	; 23
 c82:	90 f4       	brcc	.+36     	; 0xca8 <modf+0x42>
 c84:	ab 2f       	mov	r26, r27
 c86:	00 24       	eor	r0, r0
 c88:	46 95       	lsr	r20
 c8a:	37 95       	ror	r19
 c8c:	27 95       	ror	r18
 c8e:	01 1c       	adc	r0, r1
 c90:	a3 95       	inc	r26
 c92:	d2 f3       	brmi	.-12     	; 0xc88 <modf+0x22>
 c94:	00 20       	and	r0, r0
 c96:	71 f0       	breq	.+28     	; 0xcb4 <modf+0x4e>
 c98:	22 0f       	add	r18, r18
 c9a:	33 1f       	adc	r19, r19
 c9c:	44 1f       	adc	r20, r20
 c9e:	b3 95       	inc	r27
 ca0:	da f3       	brmi	.-10     	; 0xc98 <modf+0x32>
 ca2:	0e d0       	rcall	.+28     	; 0xcc0 <modf+0x5a>
 ca4:	0c 94 67 06 	jmp	0xcce	; 0xcce <__subsf3>
 ca8:	61 30       	cpi	r22, 0x01	; 1
 caa:	71 05       	cpc	r23, r1
 cac:	a0 e8       	ldi	r26, 0x80	; 128
 cae:	8a 07       	cpc	r24, r26
 cb0:	b9 46       	sbci	r27, 0x69	; 105
 cb2:	30 f4       	brcc	.+12     	; 0xcc0 <modf+0x5a>
 cb4:	9b 01       	movw	r18, r22
 cb6:	ac 01       	movw	r20, r24
 cb8:	66 27       	eor	r22, r22
 cba:	77 27       	eor	r23, r23
 cbc:	88 27       	eor	r24, r24
 cbe:	90 78       	andi	r25, 0x80	; 128
 cc0:	30 96       	adiw	r30, 0x00	; 0
 cc2:	21 f0       	breq	.+8      	; 0xccc <modf+0x66>
 cc4:	20 83       	st	Z, r18
 cc6:	31 83       	std	Z+1, r19	; 0x01
 cc8:	42 83       	std	Z+2, r20	; 0x02
 cca:	53 83       	std	Z+3, r21	; 0x03
 ccc:	08 95       	ret

00000cce <__subsf3>:
 cce:	50 58       	subi	r21, 0x80	; 128

00000cd0 <__addsf3>:
 cd0:	bb 27       	eor	r27, r27
 cd2:	aa 27       	eor	r26, r26
 cd4:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__addsf3x>
 cd8:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_round>
 cdc:	0e 94 12 04 	call	0x824	; 0x824 <__fp_pscA>
 ce0:	38 f0       	brcs	.+14     	; 0xcf0 <__addsf3+0x20>
 ce2:	0e 94 19 04 	call	0x832	; 0x832 <__fp_pscB>
 ce6:	20 f0       	brcs	.+8      	; 0xcf0 <__addsf3+0x20>
 ce8:	39 f4       	brne	.+14     	; 0xcf8 <__addsf3+0x28>
 cea:	9f 3f       	cpi	r25, 0xFF	; 255
 cec:	19 f4       	brne	.+6      	; 0xcf4 <__addsf3+0x24>
 cee:	26 f4       	brtc	.+8      	; 0xcf8 <__addsf3+0x28>
 cf0:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_nan>
 cf4:	0e f4       	brtc	.+2      	; 0xcf8 <__addsf3+0x28>
 cf6:	e0 95       	com	r30
 cf8:	e7 fb       	bst	r30, 7
 cfa:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_inf>

00000cfe <__addsf3x>:
 cfe:	e9 2f       	mov	r30, r25
 d00:	0e 94 31 04 	call	0x862	; 0x862 <__fp_split3>
 d04:	58 f3       	brcs	.-42     	; 0xcdc <__addsf3+0xc>
 d06:	ba 17       	cp	r27, r26
 d08:	62 07       	cpc	r22, r18
 d0a:	73 07       	cpc	r23, r19
 d0c:	84 07       	cpc	r24, r20
 d0e:	95 07       	cpc	r25, r21
 d10:	20 f0       	brcs	.+8      	; 0xd1a <__addsf3x+0x1c>
 d12:	79 f4       	brne	.+30     	; 0xd32 <__addsf3x+0x34>
 d14:	a6 f5       	brtc	.+104    	; 0xd7e <__addsf3x+0x80>
 d16:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__fp_zero>
 d1a:	0e f4       	brtc	.+2      	; 0xd1e <__addsf3x+0x20>
 d1c:	e0 95       	com	r30
 d1e:	0b 2e       	mov	r0, r27
 d20:	ba 2f       	mov	r27, r26
 d22:	a0 2d       	mov	r26, r0
 d24:	0b 01       	movw	r0, r22
 d26:	b9 01       	movw	r22, r18
 d28:	90 01       	movw	r18, r0
 d2a:	0c 01       	movw	r0, r24
 d2c:	ca 01       	movw	r24, r20
 d2e:	a0 01       	movw	r20, r0
 d30:	11 24       	eor	r1, r1
 d32:	ff 27       	eor	r31, r31
 d34:	59 1b       	sub	r21, r25
 d36:	99 f0       	breq	.+38     	; 0xd5e <__addsf3x+0x60>
 d38:	59 3f       	cpi	r21, 0xF9	; 249
 d3a:	50 f4       	brcc	.+20     	; 0xd50 <__addsf3x+0x52>
 d3c:	50 3e       	cpi	r21, 0xE0	; 224
 d3e:	68 f1       	brcs	.+90     	; 0xd9a <__addsf3x+0x9c>
 d40:	1a 16       	cp	r1, r26
 d42:	f0 40       	sbci	r31, 0x00	; 0
 d44:	a2 2f       	mov	r26, r18
 d46:	23 2f       	mov	r18, r19
 d48:	34 2f       	mov	r19, r20
 d4a:	44 27       	eor	r20, r20
 d4c:	58 5f       	subi	r21, 0xF8	; 248
 d4e:	f3 cf       	rjmp	.-26     	; 0xd36 <__addsf3x+0x38>
 d50:	46 95       	lsr	r20
 d52:	37 95       	ror	r19
 d54:	27 95       	ror	r18
 d56:	a7 95       	ror	r26
 d58:	f0 40       	sbci	r31, 0x00	; 0
 d5a:	53 95       	inc	r21
 d5c:	c9 f7       	brne	.-14     	; 0xd50 <__addsf3x+0x52>
 d5e:	7e f4       	brtc	.+30     	; 0xd7e <__addsf3x+0x80>
 d60:	1f 16       	cp	r1, r31
 d62:	ba 0b       	sbc	r27, r26
 d64:	62 0b       	sbc	r22, r18
 d66:	73 0b       	sbc	r23, r19
 d68:	84 0b       	sbc	r24, r20
 d6a:	ba f0       	brmi	.+46     	; 0xd9a <__addsf3x+0x9c>
 d6c:	91 50       	subi	r25, 0x01	; 1
 d6e:	a1 f0       	breq	.+40     	; 0xd98 <__addsf3x+0x9a>
 d70:	ff 0f       	add	r31, r31
 d72:	bb 1f       	adc	r27, r27
 d74:	66 1f       	adc	r22, r22
 d76:	77 1f       	adc	r23, r23
 d78:	88 1f       	adc	r24, r24
 d7a:	c2 f7       	brpl	.-16     	; 0xd6c <__addsf3x+0x6e>
 d7c:	0e c0       	rjmp	.+28     	; 0xd9a <__addsf3x+0x9c>
 d7e:	ba 0f       	add	r27, r26
 d80:	62 1f       	adc	r22, r18
 d82:	73 1f       	adc	r23, r19
 d84:	84 1f       	adc	r24, r20
 d86:	48 f4       	brcc	.+18     	; 0xd9a <__addsf3x+0x9c>
 d88:	87 95       	ror	r24
 d8a:	77 95       	ror	r23
 d8c:	67 95       	ror	r22
 d8e:	b7 95       	ror	r27
 d90:	f7 95       	ror	r31
 d92:	9e 3f       	cpi	r25, 0xFE	; 254
 d94:	08 f0       	brcs	.+2      	; 0xd98 <__addsf3x+0x9a>
 d96:	b0 cf       	rjmp	.-160    	; 0xcf8 <__addsf3+0x28>
 d98:	93 95       	inc	r25
 d9a:	88 0f       	add	r24, r24
 d9c:	08 f0       	brcs	.+2      	; 0xda0 <__addsf3x+0xa2>
 d9e:	99 27       	eor	r25, r25
 da0:	ee 0f       	add	r30, r30
 da2:	97 95       	ror	r25
 da4:	87 95       	ror	r24
 da6:	08 95       	ret

00000da8 <__fp_mpack>:
 da8:	9f 3f       	cpi	r25, 0xFF	; 255
 daa:	31 f0       	breq	.+12     	; 0xdb8 <__fp_mpack_finite+0xc>

00000dac <__fp_mpack_finite>:
 dac:	91 50       	subi	r25, 0x01	; 1
 dae:	20 f4       	brcc	.+8      	; 0xdb8 <__fp_mpack_finite+0xc>
 db0:	87 95       	ror	r24
 db2:	77 95       	ror	r23
 db4:	67 95       	ror	r22
 db6:	b7 95       	ror	r27
 db8:	88 0f       	add	r24, r24
 dba:	91 1d       	adc	r25, r1
 dbc:	96 95       	lsr	r25
 dbe:	87 95       	ror	r24
 dc0:	97 f9       	bld	r25, 7
 dc2:	08 95       	ret

00000dc4 <__divmodhi4>:
 dc4:	97 fb       	bst	r25, 7
 dc6:	07 2e       	mov	r0, r23
 dc8:	16 f4       	brtc	.+4      	; 0xdce <__divmodhi4+0xa>
 dca:	00 94       	com	r0
 dcc:	07 d0       	rcall	.+14     	; 0xddc <__divmodhi4_neg1>
 dce:	77 fd       	sbrc	r23, 7
 dd0:	09 d0       	rcall	.+18     	; 0xde4 <__divmodhi4_neg2>
 dd2:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <__udivmodhi4>
 dd6:	07 fc       	sbrc	r0, 7
 dd8:	05 d0       	rcall	.+10     	; 0xde4 <__divmodhi4_neg2>
 dda:	3e f4       	brtc	.+14     	; 0xdea <__divmodhi4_exit>

00000ddc <__divmodhi4_neg1>:
 ddc:	90 95       	com	r25
 dde:	81 95       	neg	r24
 de0:	9f 4f       	sbci	r25, 0xFF	; 255
 de2:	08 95       	ret

00000de4 <__divmodhi4_neg2>:
 de4:	70 95       	com	r23
 de6:	61 95       	neg	r22
 de8:	7f 4f       	sbci	r23, 0xFF	; 255

00000dea <__divmodhi4_exit>:
 dea:	08 95       	ret

00000dec <__tablejump2__>:
 dec:	ee 0f       	add	r30, r30
 dee:	ff 1f       	adc	r31, r31
 df0:	05 90       	lpm	r0, Z+
 df2:	f4 91       	lpm	r31, Z
 df4:	e0 2d       	mov	r30, r0
 df6:	09 94       	ijmp

00000df8 <__udivmodhi4>:
 df8:	aa 1b       	sub	r26, r26
 dfa:	bb 1b       	sub	r27, r27
 dfc:	51 e1       	ldi	r21, 0x11	; 17
 dfe:	07 c0       	rjmp	.+14     	; 0xe0e <__udivmodhi4_ep>

00000e00 <__udivmodhi4_loop>:
 e00:	aa 1f       	adc	r26, r26
 e02:	bb 1f       	adc	r27, r27
 e04:	a6 17       	cp	r26, r22
 e06:	b7 07       	cpc	r27, r23
 e08:	10 f0       	brcs	.+4      	; 0xe0e <__udivmodhi4_ep>
 e0a:	a6 1b       	sub	r26, r22
 e0c:	b7 0b       	sbc	r27, r23

00000e0e <__udivmodhi4_ep>:
 e0e:	88 1f       	adc	r24, r24
 e10:	99 1f       	adc	r25, r25
 e12:	5a 95       	dec	r21
 e14:	a9 f7       	brne	.-22     	; 0xe00 <__udivmodhi4_loop>
 e16:	80 95       	com	r24
 e18:	90 95       	com	r25
 e1a:	bc 01       	movw	r22, r24
 e1c:	cd 01       	movw	r24, r26
 e1e:	08 95       	ret

00000e20 <_exit>:
 e20:	f8 94       	cli

00000e22 <__stop_program>:
 e22:	ff cf       	rjmp	.-2      	; 0xe22 <__stop_program>
