
proiectsincretic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000ee6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e72  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800100  00800100  00000ee6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ee6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00000f58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008d4  00000000  00000000  000010a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000586  00000000  00000000  00001974  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008fe  00000000  00000000  00001efa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000308  00000000  00000000  000027f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000310  00000000  00000000  00002b00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000794  00000000  00000000  00002e10  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  000035a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__ctors_end>
   4:	0c 94 22 01 	jmp	0x244	; 0x244 <__vector_1>
   8:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
   c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  10:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  14:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  18:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  1c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  20:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  24:	0c 94 99 02 	jmp	0x532	; 0x532 <__vector_9>
  28:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  2c:	0c 94 1c 03 	jmp	0x638	; 0x638 <__vector_11>
  30:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  34:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  38:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  3c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  40:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  44:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  48:	0c 94 4b 02 	jmp	0x496	; 0x496 <__vector_18>
  4c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  50:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  54:	0c 94 d4 01 	jmp	0x3a8	; 0x3a8 <__vector_21>
  58:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  5c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  60:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  64:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
  68:	b7 00       	.word	0x00b7	; ????
  6a:	c0 00       	.word	0x00c0	; ????
  6c:	c9 00       	.word	0x00c9	; ????
  6e:	d4 00       	.word	0x00d4	; ????
  70:	df 00       	.word	0x00df	; ????
  72:	e8 00       	.word	0x00e8	; ????
  74:	f3 00       	.word	0x00f3	; ????
  76:	fc 00       	.word	0x00fc	; ????
  78:	07 01       	movw	r0, r14
  7a:	0f 01       	movw	r0, r30
  7c:	07 63       	ori	r16, 0x37	; 55
  7e:	42 36       	cpi	r20, 0x62	; 98
  80:	b7 9b       	sbis	0x16, 7	; 22
  82:	d8 a7       	std	Y+40, r29	; 0x28
  84:	1a 39       	cpi	r17, 0x9A	; 154
  86:	68 56       	subi	r22, 0x68	; 104
  88:	18 ae       	std	Y+56, r1	; 0x38
  8a:	ba ab       	std	Y+50, r27	; 0x32
  8c:	55 8c       	ldd	r5, Z+29	; 0x1d
  8e:	1d 3c       	cpi	r17, 0xCD	; 205
  90:	b7 cc       	rjmp	.-1682   	; 0xfffffa00 <__eeprom_end+0xff7efa00>
  92:	57 63       	ori	r21, 0x37	; 55
  94:	bd 6d       	ori	r27, 0xDD	; 221
  96:	ed fd       	.word	0xfded	; ????
  98:	75 3e       	cpi	r23, 0xE5	; 229
  9a:	f6 17       	cp	r31, r22
  9c:	72 31       	cpi	r23, 0x12	; 18
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	08 00       	.word	0x0008	; ????
  a6:	00 00       	nop
  a8:	be 92       	st	-X, r11
  aa:	24 49       	sbci	r18, 0x94	; 148
  ac:	12 3e       	cpi	r17, 0xE2	; 226
  ae:	ab aa       	std	Y+51, r10	; 0x33
  b0:	aa 2a       	or	r10, r26
  b2:	be cd       	rjmp	.-1156   	; 0xfffffc30 <__eeprom_end+0xff7efc30>
  b4:	cc cc       	rjmp	.-1640   	; 0xfffffa4e <__eeprom_end+0xff7efa4e>
  b6:	4c 3e       	cpi	r20, 0xEC	; 236
  b8:	00 00       	nop
  ba:	00 80       	ld	r0, Z
  bc:	be ab       	std	Y+54, r27	; 0x36
  be:	aa aa       	std	Y+50, r10	; 0x32
  c0:	aa 3e       	cpi	r26, 0xEA	; 234
  c2:	00 00       	nop
  c4:	00 00       	nop
  c6:	bf 00       	.word	0x00bf	; ????
  c8:	00 00       	nop
  ca:	80 3f       	cpi	r24, 0xF0	; 240
  cc:	00 00       	nop
  ce:	00 00       	nop
  d0:	00 08       	sbc	r0, r0
  d2:	41 78       	andi	r20, 0x81	; 129
  d4:	d3 bb       	out	0x13, r29	; 19
  d6:	43 87       	std	Z+11, r20	; 0x0b
  d8:	d1 13       	cpse	r29, r17
  da:	3d 19       	sub	r19, r13
  dc:	0e 3c       	cpi	r16, 0xCE	; 206
  de:	c3 bd       	out	0x23, r28	; 35
  e0:	42 82       	std	Z+2, r4	; 0x02
  e2:	ad 2b       	or	r26, r29
  e4:	3e 68       	ori	r19, 0x8E	; 142
  e6:	ec 82       	std	Y+4, r14	; 0x04
  e8:	76 be       	out	0x36, r7	; 54
  ea:	d9 8f       	std	Y+25, r29	; 0x19
  ec:	e1 a9       	ldd	r30, Z+49	; 0x31
  ee:	3e 4c       	sbci	r19, 0xCE	; 206
  f0:	80 ef       	ldi	r24, 0xF0	; 240
  f2:	ff be       	out	0x3f, r15	; 63
  f4:	01 c4       	rjmp	.+2050   	; 0x8f8 <__fp_szero+0x2>
  f6:	ff 7f       	andi	r31, 0xFF	; 255
  f8:	3f 00       	.word	0x003f	; ????
  fa:	00 00       	nop
	...

000000fe <__ctors_end>:
  fe:	11 24       	eor	r1, r1
 100:	1f be       	out	0x3f, r1	; 63
 102:	cf ef       	ldi	r28, 0xFF	; 255
 104:	d8 e0       	ldi	r29, 0x08	; 8
 106:	de bf       	out	0x3e, r29	; 62
 108:	cd bf       	out	0x3d, r28	; 61

0000010a <__do_copy_data>:
 10a:	11 e0       	ldi	r17, 0x01	; 1
 10c:	a0 e0       	ldi	r26, 0x00	; 0
 10e:	b1 e0       	ldi	r27, 0x01	; 1
 110:	e2 e7       	ldi	r30, 0x72	; 114
 112:	fe e0       	ldi	r31, 0x0E	; 14
 114:	02 c0       	rjmp	.+4      	; 0x11a <__do_copy_data+0x10>
 116:	05 90       	lpm	r0, Z+
 118:	0d 92       	st	X+, r0
 11a:	a0 30       	cpi	r26, 0x00	; 0
 11c:	b1 07       	cpc	r27, r17
 11e:	d9 f7       	brne	.-10     	; 0x116 <__do_copy_data+0xc>

00000120 <__do_clear_bss>:
 120:	21 e0       	ldi	r18, 0x01	; 1
 122:	a0 e0       	ldi	r26, 0x00	; 0
 124:	b1 e0       	ldi	r27, 0x01	; 1
 126:	01 c0       	rjmp	.+2      	; 0x12a <.do_clear_bss_start>

00000128 <.do_clear_bss_loop>:
 128:	1d 92       	st	X+, r1

0000012a <.do_clear_bss_start>:
 12a:	aa 30       	cpi	r26, 0x0A	; 10
 12c:	b2 07       	cpc	r27, r18
 12e:	e1 f7       	brne	.-8      	; 0x128 <.do_clear_bss_loop>
 130:	0e 94 60 02 	call	0x4c0	; 0x4c0 <main>
 134:	0c 94 37 07 	jmp	0xe6e	; 0xe6e <_exit>

00000138 <__bad_interrupt>:
 138:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000013c <display_init>:
int push=1;

void display_init()
{
	//setting 7-digit display leds as output
	DDRB |= (1<<PINB0)|(1<<PINB1)|(1<<PINB2)|(1<<PINB3);
 13c:	84 b1       	in	r24, 0x04	; 4
 13e:	8f 60       	ori	r24, 0x0F	; 15
 140:	84 b9       	out	0x04, r24	; 4
	DDRC |= (1<<PINC1)|(1<<PINC2)|(1<<PINC3)|(1<<PINC4);
 142:	87 b1       	in	r24, 0x07	; 7
 144:	8e 61       	ori	r24, 0x1E	; 30
 146:	87 b9       	out	0x07, r24	; 7
 148:	08 95       	ret

0000014a <pushbutton_init>:
}

void pushbutton_init()
{
	//setting pushbutton pin as input
	DDRD&=~(1<<PIND2);
 14a:	52 98       	cbi	0x0a, 2	; 10
	// turn On the Pull-up
	PORTD |= (1 << PIND2);
 14c:	5a 9a       	sbi	0x0b, 2	; 11
	//interrupt on falling edge
	EICRA|=(1<<ISC01);
 14e:	e9 e6       	ldi	r30, 0x69	; 105
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	82 60       	ori	r24, 0x02	; 2
 156:	80 83       	st	Z, r24
	//enabling external INT0 
	EIMSK|=(1<<INT0);
 158:	e8 9a       	sbi	0x1d, 0	; 29
 15a:	08 95       	ret

0000015c <display_digit>:
	//PCMSK2|=(1<<PCINT18);
}

void display_digit(int digit)
{
	switch(digit)
 15c:	8a 30       	cpi	r24, 0x0A	; 10
 15e:	91 05       	cpc	r25, r1
 160:	08 f0       	brcs	.+2      	; 0x164 <display_digit+0x8>
 162:	67 c0       	rjmp	.+206    	; 0x232 <display_digit+0xd6>
 164:	fc 01       	movw	r30, r24
 166:	ec 5c       	subi	r30, 0xCC	; 204
 168:	ff 4f       	sbci	r31, 0xFF	; 255
 16a:	0c 94 1d 07 	jmp	0xe3a	; 0xe3a <__tablejump2__>
	{
		case 0: PORTB&=~(1<<PINB0);
 16e:	28 98       	cbi	0x05, 0	; 5
				PORTC&=~(1<<PINC1);
 170:	41 98       	cbi	0x08, 1	; 8
				PORTB|=(1<<PINB1)|(1<<PINB2)|(1<<PINB3);
 172:	85 b1       	in	r24, 0x05	; 5
 174:	8e 60       	ori	r24, 0x0E	; 14
 176:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3)|(1<<PINC4);
 178:	88 b1       	in	r24, 0x08	; 8
 17a:	8c 61       	ori	r24, 0x1C	; 28
 17c:	88 b9       	out	0x08, r24	; 8
				break;
 17e:	08 95       	ret
		case 1: PORTB&=~(1<<PINB0)&~(1<<PINB1)&~(1<<PINB2);
 180:	85 b1       	in	r24, 0x05	; 5
 182:	88 7f       	andi	r24, 0xF8	; 248
 184:	85 b9       	out	0x05, r24	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC3)&~(1<<PINC4);
 186:	88 b1       	in	r24, 0x08	; 8
 188:	85 7e       	andi	r24, 0xE5	; 229
 18a:	88 b9       	out	0x08, r24	; 8
				PORTB|=1<<PINB3;
 18c:	2b 9a       	sbi	0x05, 3	; 5
				PORTC|=1<<PINC2;
 18e:	42 9a       	sbi	0x08, 2	; 8
				break;
 190:	08 95       	ret
		case 2: PORTB&=~(1<<PINB1);
 192:	29 98       	cbi	0x05, 1	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC2);
 194:	88 b1       	in	r24, 0x08	; 8
 196:	89 7f       	andi	r24, 0xF9	; 249
 198:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB0)|(1<<PINB2)|(1<<PINB3);
 19a:	85 b1       	in	r24, 0x05	; 5
 19c:	8d 60       	ori	r24, 0x0D	; 13
 19e:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC3)|(1<<PINC4);
 1a0:	88 b1       	in	r24, 0x08	; 8
 1a2:	88 61       	ori	r24, 0x18	; 24
 1a4:	88 b9       	out	0x08, r24	; 8
				break;
 1a6:	08 95       	ret
		case 3: PORTB&=~(1<<PINB1);
 1a8:	29 98       	cbi	0x05, 1	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC4);
 1aa:	88 b1       	in	r24, 0x08	; 8
 1ac:	8d 7e       	andi	r24, 0xED	; 237
 1ae:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB0)|(1<<PINB2)|(1<<PINB3);
 1b0:	85 b1       	in	r24, 0x05	; 5
 1b2:	8d 60       	ori	r24, 0x0D	; 13
 1b4:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3);
 1b6:	88 b1       	in	r24, 0x08	; 8
 1b8:	8c 60       	ori	r24, 0x0C	; 12
 1ba:	88 b9       	out	0x08, r24	; 8
				break;	
 1bc:	08 95       	ret
		case 4: PORTB&=~(1<<PINB2);
 1be:	2a 98       	cbi	0x05, 2	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC3)&~(1<<PINC4);
 1c0:	88 b1       	in	r24, 0x08	; 8
 1c2:	85 7e       	andi	r24, 0xE5	; 229
 1c4:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB3);
 1c6:	85 b1       	in	r24, 0x05	; 5
 1c8:	8b 60       	ori	r24, 0x0B	; 11
 1ca:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2);
 1cc:	42 9a       	sbi	0x08, 2	; 8
				break;	
 1ce:	08 95       	ret
		case 5: PORTB&=~(1<<PINB3);
 1d0:	2b 98       	cbi	0x05, 3	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC4);
 1d2:	88 b1       	in	r24, 0x08	; 8
 1d4:	8d 7e       	andi	r24, 0xED	; 237
 1d6:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB2);
 1d8:	85 b1       	in	r24, 0x05	; 5
 1da:	87 60       	ori	r24, 0x07	; 7
 1dc:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3);
 1de:	88 b1       	in	r24, 0x08	; 8
 1e0:	8c 60       	ori	r24, 0x0C	; 12
 1e2:	88 b9       	out	0x08, r24	; 8
				break;
 1e4:	08 95       	ret
		case 6: PORTB&=~(1<<PINB3);
 1e6:	2b 98       	cbi	0x05, 3	; 5
				PORTC&=~(1<<PINC1);
 1e8:	41 98       	cbi	0x08, 1	; 8
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB2);
 1ea:	85 b1       	in	r24, 0x05	; 5
 1ec:	87 60       	ori	r24, 0x07	; 7
 1ee:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3)|(1<<PINC4);
 1f0:	88 b1       	in	r24, 0x08	; 8
 1f2:	8c 61       	ori	r24, 0x1C	; 28
 1f4:	88 b9       	out	0x08, r24	; 8
				break;
 1f6:	08 95       	ret
		case 7: PORTB&=~(1<<PINB0)&~(1<<PINB1);
 1f8:	85 b1       	in	r24, 0x05	; 5
 1fa:	8c 7f       	andi	r24, 0xFC	; 252
 1fc:	85 b9       	out	0x05, r24	; 5
				PORTC&=~(1<<PINC1)&~(1<<PINC3)&~(1<<PINC4);
 1fe:	88 b1       	in	r24, 0x08	; 8
 200:	85 7e       	andi	r24, 0xE5	; 229
 202:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB2)|(1<<PINB3);
 204:	85 b1       	in	r24, 0x05	; 5
 206:	8c 60       	ori	r24, 0x0C	; 12
 208:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2);
 20a:	42 9a       	sbi	0x08, 2	; 8
				break;
 20c:	08 95       	ret
		case 8: PORTC&=~(1<<PINC1);
 20e:	41 98       	cbi	0x08, 1	; 8
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB2)|(1<<PINB3);
 210:	85 b1       	in	r24, 0x05	; 5
 212:	8f 60       	ori	r24, 0x0F	; 15
 214:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3)|(1<<PINC4);
 216:	88 b1       	in	r24, 0x08	; 8
 218:	8c 61       	ori	r24, 0x1C	; 28
 21a:	88 b9       	out	0x08, r24	; 8
				break;
 21c:	08 95       	ret
		case 9: PORTC&=~(1<<PINC1)&~(1<<PINC4);
 21e:	88 b1       	in	r24, 0x08	; 8
 220:	8d 7e       	andi	r24, 0xED	; 237
 222:	88 b9       	out	0x08, r24	; 8
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB2)|(1<<PINB3);
 224:	85 b1       	in	r24, 0x05	; 5
 226:	8f 60       	ori	r24, 0x0F	; 15
 228:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC2)|(1<<PINC3);
 22a:	88 b1       	in	r24, 0x08	; 8
 22c:	8c 60       	ori	r24, 0x0C	; 12
 22e:	88 b9       	out	0x08, r24	; 8
				break;
 230:	08 95       	ret
		default:PORTC&=~(1<<PINC2);
 232:	42 98       	cbi	0x08, 2	; 8
				PORTB&=~(1<<PINB3);
 234:	2b 98       	cbi	0x05, 3	; 5
				PORTB|=(1<<PINB0)|(1<<PINB1)|(1<<PINB2);
 236:	85 b1       	in	r24, 0x05	; 5
 238:	87 60       	ori	r24, 0x07	; 7
 23a:	85 b9       	out	0x05, r24	; 5
				PORTC|=(1<<PINC1)|(1<<PINC3)|(1<<PINC4);
 23c:	88 b1       	in	r24, 0x08	; 8
 23e:	8a 61       	ori	r24, 0x1A	; 26
 240:	88 b9       	out	0x08, r24	; 8
 242:	08 95       	ret

00000244 <__vector_1>:
	
	
}

ISR (INT0_vect)
{
 244:	1f 92       	push	r1
 246:	0f 92       	push	r0
 248:	0f b6       	in	r0, 0x3f	; 63
 24a:	0f 92       	push	r0
 24c:	11 24       	eor	r1, r1
 24e:	2f 93       	push	r18
 250:	3f 93       	push	r19
 252:	4f 93       	push	r20
 254:	5f 93       	push	r21
 256:	6f 93       	push	r22
 258:	7f 93       	push	r23
 25a:	8f 93       	push	r24
 25c:	9f 93       	push	r25
 25e:	af 93       	push	r26
 260:	bf 93       	push	r27
 262:	ef 93       	push	r30
 264:	ff 93       	push	r31
	
	
	//int nr = memory_read(200);
	
	
	display_digit(digit_value);
 266:	80 91 04 01 	lds	r24, 0x0104
 26a:	90 91 05 01 	lds	r25, 0x0105
 26e:	0e 94 ae 00 	call	0x15c	; 0x15c <display_digit>
	EEPROM_write(200,digit_value);
 272:	60 91 04 01 	lds	r22, 0x0104
 276:	70 91 05 01 	lds	r23, 0x0105
 27a:	88 ec       	ldi	r24, 0xC8	; 200
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 28 02 	call	0x450	; 0x450 <EEPROM_write>
	digit_value++;
 282:	80 91 04 01 	lds	r24, 0x0104
 286:	90 91 05 01 	lds	r25, 0x0105
 28a:	01 96       	adiw	r24, 0x01	; 1
	
	
	
	if(digit_value>=10)
 28c:	8a 30       	cpi	r24, 0x0A	; 10
 28e:	91 05       	cpc	r25, r1
 290:	2c f4       	brge	.+10     	; 0x29c <__vector_1+0x58>
	//int nr = memory_read(200);
	
	
	display_digit(digit_value);
	EEPROM_write(200,digit_value);
	digit_value++;
 292:	90 93 05 01 	sts	0x0105, r25
 296:	80 93 04 01 	sts	0x0104, r24
 29a:	04 c0       	rjmp	.+8      	; 0x2a4 <__vector_1+0x60>
	
	
	
	if(digit_value>=10)
		digit_value=0;
 29c:	10 92 05 01 	sts	0x0105, r1
 2a0:	10 92 04 01 	sts	0x0104, r1
 2a4:	ff 91       	pop	r31
 2a6:	ef 91       	pop	r30
 2a8:	bf 91       	pop	r27
 2aa:	af 91       	pop	r26
 2ac:	9f 91       	pop	r25
 2ae:	8f 91       	pop	r24
 2b0:	7f 91       	pop	r23
 2b2:	6f 91       	pop	r22
 2b4:	5f 91       	pop	r21
 2b6:	4f 91       	pop	r20
 2b8:	3f 91       	pop	r19
 2ba:	2f 91       	pop	r18
 2bc:	0f 90       	pop	r0
 2be:	0f be       	out	0x3f, r0	; 63
 2c0:	0f 90       	pop	r0
 2c2:	1f 90       	pop	r1
 2c4:	18 95       	reti

000002c6 <adc_init>:


void adc_init()
{
	//setting Port A as input
	DDRC = 0x00;
 2c6:	17 b8       	out	0x07, r1	; 7
	//adc enable, interrupt enable, prescaler of 128
	ADCSRA|=(1<<ADEN)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 2c8:	ea e7       	ldi	r30, 0x7A	; 122
 2ca:	f0 e0       	ldi	r31, 0x00	; 0
 2cc:	80 81       	ld	r24, Z
 2ce:	8f 68       	ori	r24, 0x8F	; 143
 2d0:	80 83       	st	Z, r24
	// AVcc voltage reference
	ADMUX|=(1<<REFS0);	
 2d2:	ac e7       	ldi	r26, 0x7C	; 124
 2d4:	b0 e0       	ldi	r27, 0x00	; 0
 2d6:	8c 91       	ld	r24, X
 2d8:	80 64       	ori	r24, 0x40	; 64
 2da:	8c 93       	st	X, r24
	//setting pinb5 as output for the temperature led
	DDRB|=(1<<PINB5);
 2dc:	25 9a       	sbi	0x04, 5	; 4
	//start first conversion
	ADCSRA |= 1<<ADSC;
 2de:	80 81       	ld	r24, Z
 2e0:	80 64       	ori	r24, 0x40	; 64
 2e2:	80 83       	st	Z, r24
 2e4:	08 95       	ret

000002e6 <sending_temperature>:
}

void sending_temperature(float temperature)
{
 2e6:	ef 92       	push	r14
 2e8:	ff 92       	push	r15
 2ea:	0f 93       	push	r16
 2ec:	1f 93       	push	r17
 2ee:	cf 93       	push	r28
 2f0:	df 93       	push	r29
	int temp = (int)(temperature*10);
 2f2:	20 e0       	ldi	r18, 0x00	; 0
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	40 e2       	ldi	r20, 0x20	; 32
 2f8:	51 e4       	ldi	r21, 0x41	; 65
 2fa:	0e 94 86 04 	call	0x90c	; 0x90c <__mulsf3>
 2fe:	0e 94 bd 03 	call	0x77a	; 0x77a <__fixsfsi>
 302:	ab 01       	movw	r20, r22
 304:	bc 01       	movw	r22, r24
 306:	8a 01       	movw	r16, r20
	int c,cifra=1;
	
	while(temp/10)
 308:	ca 01       	movw	r24, r20
 30a:	09 96       	adiw	r24, 0x09	; 9
 30c:	43 97       	sbiw	r24, 0x13	; 19
 30e:	a0 f0       	brcs	.+40     	; 0x338 <sending_temperature+0x52>
 310:	84 2f       	mov	r24, r20
 312:	95 2f       	mov	r25, r21
 314:	c1 e0       	ldi	r28, 0x01	; 1
 316:	d0 e0       	ldi	r29, 0x00	; 0
		{
			cifra++;
			temp=temp/10;
 318:	2a e0       	ldi	r18, 0x0A	; 10
 31a:	30 e0       	ldi	r19, 0x00	; 0
	int temp = (int)(temperature*10);
	int c,cifra=1;
	
	while(temp/10)
		{
			cifra++;
 31c:	21 96       	adiw	r28, 0x01	; 1
			temp=temp/10;
 31e:	b9 01       	movw	r22, r18
 320:	0e 94 09 07 	call	0xe12	; 0xe12 <__divmodhi4>
 324:	86 2f       	mov	r24, r22
 326:	97 2f       	mov	r25, r23
void sending_temperature(float temperature)
{
	int temp = (int)(temperature*10);
	int c,cifra=1;
	
	while(temp/10)
 328:	67 5f       	subi	r22, 0xF7	; 247
 32a:	7f 4f       	sbci	r23, 0xFF	; 255
 32c:	63 31       	cpi	r22, 0x13	; 19
 32e:	71 05       	cpc	r23, r1
 330:	a8 f7       	brcc	.-22     	; 0x31c <sending_temperature+0x36>
		{
			cifra++;
			temp=temp/10;
		}

	while(cifra)
 332:	20 97       	sbiw	r28, 0x00	; 0
 334:	19 f4       	brne	.+6      	; 0x33c <sending_temperature+0x56>
 336:	2e c0       	rjmp	.+92     	; 0x394 <sending_temperature+0xae>
}

void sending_temperature(float temperature)
{
	int temp = (int)(temperature*10);
	int c,cifra=1;
 338:	c1 e0       	ldi	r28, 0x01	; 1
 33a:	d0 e0       	ldi	r29, 0x00	; 0
			temp=temp/10;
		}

	while(cifra)
	{
		c=((int)(temperature*10)/(int)pow(10,cifra-1))%10;
 33c:	0f 2e       	mov	r0, r31
 33e:	fa e0       	ldi	r31, 0x0A	; 10
 340:	ef 2e       	mov	r14, r31
 342:	f1 2c       	mov	r15, r1
 344:	f0 2d       	mov	r31, r0
 346:	21 97       	sbiw	r28, 0x01	; 1
 348:	be 01       	movw	r22, r28
 34a:	0d 2e       	mov	r0, r29
 34c:	00 0c       	add	r0, r0
 34e:	88 0b       	sbc	r24, r24
 350:	99 0b       	sbc	r25, r25
 352:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatsisf>
 356:	9b 01       	movw	r18, r22
 358:	ac 01       	movw	r20, r24
 35a:	60 e0       	ldi	r22, 0x00	; 0
 35c:	70 e0       	ldi	r23, 0x00	; 0
 35e:	80 e2       	ldi	r24, 0x20	; 32
 360:	91 e4       	ldi	r25, 0x41	; 65
 362:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <pow>
 366:	0e 94 bd 03 	call	0x77a	; 0x77a <__fixsfsi>
 36a:	ab 01       	movw	r20, r22
 36c:	bc 01       	movw	r22, r24
 36e:	c8 01       	movw	r24, r16
 370:	ba 01       	movw	r22, r20
 372:	0e 94 09 07 	call	0xe12	; 0xe12 <__divmodhi4>
 376:	cb 01       	movw	r24, r22
 378:	b7 01       	movw	r22, r14
 37a:	0e 94 09 07 	call	0xe12	; 0xe12 <__divmodhi4>
		USART_Transmit(48+c);
 37e:	80 5d       	subi	r24, 0xD0	; 208
 380:	0e 94 43 02 	call	0x486	; 0x486 <USART_Transmit>
		if(cifra==2)
 384:	c1 30       	cpi	r28, 0x01	; 1
 386:	d1 05       	cpc	r29, r1
 388:	19 f4       	brne	.+6      	; 0x390 <sending_temperature+0xaa>
			USART_Transmit('.');
 38a:	8e e2       	ldi	r24, 0x2E	; 46
 38c:	0e 94 43 02 	call	0x486	; 0x486 <USART_Transmit>
		{
			cifra++;
			temp=temp/10;
		}

	while(cifra)
 390:	20 97       	sbiw	r28, 0x00	; 0
 392:	c9 f6       	brne	.-78     	; 0x346 <sending_temperature+0x60>
		USART_Transmit(48+c);
		if(cifra==2)
			USART_Transmit('.');
		cifra--;
	}
	USART_Transmit('\n');
 394:	8a e0       	ldi	r24, 0x0A	; 10
 396:	0e 94 43 02 	call	0x486	; 0x486 <USART_Transmit>
}
 39a:	df 91       	pop	r29
 39c:	cf 91       	pop	r28
 39e:	1f 91       	pop	r17
 3a0:	0f 91       	pop	r16
 3a2:	ff 90       	pop	r15
 3a4:	ef 90       	pop	r14
 3a6:	08 95       	ret

000003a8 <__vector_21>:

/*ADC Conversion Complete Interrupt Service Routine (ISR)*/
ISR(ADC_vect)
{
 3a8:	1f 92       	push	r1
 3aa:	0f 92       	push	r0
 3ac:	0f b6       	in	r0, 0x3f	; 63
 3ae:	0f 92       	push	r0
 3b0:	11 24       	eor	r1, r1
 3b2:	2f 93       	push	r18
 3b4:	3f 93       	push	r19
 3b6:	4f 93       	push	r20
 3b8:	5f 93       	push	r21
 3ba:	6f 93       	push	r22
 3bc:	7f 93       	push	r23
 3be:	8f 93       	push	r24
 3c0:	9f 93       	push	r25
 3c2:	af 93       	push	r26
 3c4:	bf 93       	push	r27
 3c6:	ef 93       	push	r30
 3c8:	ff 93       	push	r31
	uint16_t val = ADC;
 3ca:	60 91 78 00 	lds	r22, 0x0078
 3ce:	70 91 79 00 	lds	r23, 0x0079
	float mv = (val/1024.0)*5000;
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <__floatunsisf>
 3da:	20 e0       	ldi	r18, 0x00	; 0
 3dc:	30 e0       	ldi	r19, 0x00	; 0
 3de:	40 e8       	ldi	r20, 0x80	; 128
 3e0:	5a e3       	ldi	r21, 0x3A	; 58
 3e2:	0e 94 86 04 	call	0x90c	; 0x90c <__mulsf3>
 3e6:	20 e0       	ldi	r18, 0x00	; 0
 3e8:	30 e4       	ldi	r19, 0x40	; 64
 3ea:	4c e9       	ldi	r20, 0x9C	; 156
 3ec:	55 e4       	ldi	r21, 0x45	; 69
 3ee:	0e 94 86 04 	call	0x90c	; 0x90c <__mulsf3>
	float cel = mv/10;
 3f2:	20 e0       	ldi	r18, 0x00	; 0
 3f4:	30 e0       	ldi	r19, 0x00	; 0
 3f6:	40 e2       	ldi	r20, 0x20	; 32
 3f8:	51 e4       	ldi	r21, 0x41	; 65
 3fa:	0e 94 4b 03 	call	0x696	; 0x696 <__divsf3>
	
	temperatura = cel;
 3fe:	60 93 06 01 	sts	0x0106, r22
 402:	70 93 07 01 	sts	0x0107, r23
 406:	80 93 08 01 	sts	0x0108, r24
 40a:	90 93 09 01 	sts	0x0109, r25
	//sending_temperature(cel);
		
	if(temperatura>=34.5)
 40e:	20 e0       	ldi	r18, 0x00	; 0
 410:	30 e0       	ldi	r19, 0x00	; 0
 412:	4a e0       	ldi	r20, 0x0A	; 10
 414:	52 e4       	ldi	r21, 0x42	; 66
 416:	0e 94 81 04 	call	0x902	; 0x902 <__gesf2>
 41a:	88 23       	and	r24, r24
 41c:	14 f0       	brlt	.+4      	; 0x422 <__FUSE_REGION_LENGTH__+0x22>
		PORTB|=(1<<PINB5);
 41e:	2d 9a       	sbi	0x05, 5	; 5
 420:	01 c0       	rjmp	.+2      	; 0x424 <__FUSE_REGION_LENGTH__+0x24>
	else
		PORTB&=~(1<<PINB5);
 422:	2d 98       	cbi	0x05, 5	; 5
	
	ADCSRA |= 1<<ADSC;		// Start Conversion
 424:	ea e7       	ldi	r30, 0x7A	; 122
 426:	f0 e0       	ldi	r31, 0x00	; 0
 428:	80 81       	ld	r24, Z
 42a:	80 64       	ori	r24, 0x40	; 64
 42c:	80 83       	st	Z, r24
 42e:	ff 91       	pop	r31
 430:	ef 91       	pop	r30
 432:	bf 91       	pop	r27
 434:	af 91       	pop	r26
 436:	9f 91       	pop	r25
 438:	8f 91       	pop	r24
 43a:	7f 91       	pop	r23
 43c:	6f 91       	pop	r22
 43e:	5f 91       	pop	r21
 440:	4f 91       	pop	r20
 442:	3f 91       	pop	r19
 444:	2f 91       	pop	r18
 446:	0f 90       	pop	r0
 448:	0f be       	out	0x3f, r0	; 63
 44a:	0f 90       	pop	r0
 44c:	1f 90       	pop	r1
 44e:	18 95       	reti

00000450 <EEPROM_write>:
 #include "EEPROM.h"

 void EEPROM_write(unsigned int uiAddress, unsigned char ucData)
 {
	 /* Wait for completion of previous write */
	 while(EECR & (1<<EEPE))
 450:	f9 99       	sbic	0x1f, 1	; 31
 452:	fe cf       	rjmp	.-4      	; 0x450 <EEPROM_write>
	 {

	 };
	 /* Set up address and Data Registers */
	 EEAR = uiAddress;
 454:	92 bd       	out	0x22, r25	; 34
 456:	81 bd       	out	0x21, r24	; 33
	 EEDR = ucData;
 458:	60 bd       	out	0x20, r22	; 32
	 /* Write logical one to EEMPE */
	 EECR |= (1<<EEMPE);
 45a:	fa 9a       	sbi	0x1f, 2	; 31
	 /* Start eeprom write by setting EEPE */
	 EECR |= (1<<EEPE);
 45c:	f9 9a       	sbi	0x1f, 1	; 31
 45e:	08 95       	ret

00000460 <EEPROM_read>:


 unsigned char EEPROM_read(unsigned int uiAddress)
 {
	 /* Wait for completion of previous write */
	 while(EECR & (1<<EEPE))
 460:	f9 99       	sbic	0x1f, 1	; 31
 462:	fe cf       	rjmp	.-4      	; 0x460 <EEPROM_read>
	 {

	 };
	 /* Set up address register */
	 EEAR = uiAddress;
 464:	92 bd       	out	0x22, r25	; 34
 466:	81 bd       	out	0x21, r24	; 33
	 /* Start eeprom read by writing EERE */
	 EECR |= (1<<EERE);
 468:	f8 9a       	sbi	0x1f, 0	; 31
	 /* Return data from Data Register */
	 return EEDR;
 46a:	80 b5       	in	r24, 0x20	; 32
 46c:	08 95       	ret

0000046e <USART_Init>:
		else
		{
			USART_Transmit(str[i]);
		}
	}
}
 46e:	90 93 c5 00 	sts	0x00C5, r25
 472:	80 93 c4 00 	sts	0x00C4, r24
 476:	88 e9       	ldi	r24, 0x98	; 152
 478:	80 93 c1 00 	sts	0x00C1, r24
 47c:	8e e0       	ldi	r24, 0x0E	; 14
 47e:	80 93 c2 00 	sts	0x00C2, r24
 482:	24 9a       	sbi	0x04, 4	; 4
 484:	08 95       	ret

00000486 <USART_Transmit>:
 486:	e0 ec       	ldi	r30, 0xC0	; 192
 488:	f0 e0       	ldi	r31, 0x00	; 0
 48a:	90 81       	ld	r25, Z
 48c:	95 ff       	sbrs	r25, 5
 48e:	fd cf       	rjmp	.-6      	; 0x48a <USART_Transmit+0x4>
 490:	80 93 c6 00 	sts	0x00C6, r24
 494:	08 95       	ret

00000496 <__vector_18>:

ISR (USART_RX_vect)
{
 496:	1f 92       	push	r1
 498:	0f 92       	push	r0
 49a:	0f b6       	in	r0, 0x3f	; 63
 49c:	0f 92       	push	r0
 49e:	11 24       	eor	r1, r1
 4a0:	8f 93       	push	r24
	//unsigned char receivedByte;
	//receivedByte = UDR0; // Fetch the received byte value into the variable "ByteReceived"
	//UDR0 = receivedByte; // Echo back the received byte back to the computer
unsigned char ch = UDR0;
 4a2:	80 91 c6 00 	lds	r24, 0x00C6
	if(ch=='a')
 4a6:	81 36       	cpi	r24, 0x61	; 97
 4a8:	11 f4       	brne	.+4      	; 0x4ae <__vector_18+0x18>
		{
			PORTB|= 1<<PINB4;
 4aa:	2c 9a       	sbi	0x05, 4	; 5
 4ac:	03 c0       	rjmp	.+6      	; 0x4b4 <__vector_18+0x1e>
		}
	else if(ch=='s')
 4ae:	83 37       	cpi	r24, 0x73	; 115
 4b0:	09 f4       	brne	.+2      	; 0x4b4 <__vector_18+0x1e>
		{
			PORTB &= ~(1<<PINB4);
 4b2:	2c 98       	cbi	0x05, 4	; 5
		}
 4b4:	8f 91       	pop	r24
 4b6:	0f 90       	pop	r0
 4b8:	0f be       	out	0x3f, r0	; 63
 4ba:	0f 90       	pop	r0
 4bc:	1f 90       	pop	r1
 4be:	18 95       	reti

000004c0 <main>:


int main(void)
{	
	
	PWM_init();
 4c0:	0e 94 86 02 	call	0x50c	; 0x50c <PWM_init>
	timer1_init();
 4c4:	0e 94 0a 03 	call	0x614	; 0x614 <timer1_init>
	timer2_init();
 4c8:	0e 94 8e 02 	call	0x51c	; 0x51c <timer2_init>
	USART_Init(MYUBRR);
 4cc:	87 e6       	ldi	r24, 0x67	; 103
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	0e 94 37 02 	call	0x46e	; 0x46e <USART_Init>
	adc_init();
 4d4:	0e 94 63 01 	call	0x2c6	; 0x2c6 <adc_init>
	display_init();
 4d8:	0e 94 9e 00 	call	0x13c	; 0x13c <display_init>
	pushbutton_init();
 4dc:	0e 94 a5 00 	call	0x14a	; 0x14a <pushbutton_init>
	
	
	digit_value = EEPROM_read(200);
 4e0:	88 ec       	ldi	r24, 0xC8	; 200
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	0e 94 30 02 	call	0x460	; 0x460 <EEPROM_read>
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	90 93 05 01 	sts	0x0105, r25
 4ee:	80 93 04 01 	sts	0x0104, r24
	display_digit(digit_value);
 4f2:	0e 94 ae 00 	call	0x15c	; 0x15c <display_digit>
	digit_value++;
 4f6:	80 91 04 01 	lds	r24, 0x0104
 4fa:	90 91 05 01 	lds	r25, 0x0105
 4fe:	01 96       	adiw	r24, 0x01	; 1
 500:	90 93 05 01 	sts	0x0105, r25
 504:	80 93 04 01 	sts	0x0104, r24
	
	sei();
 508:	78 94       	sei
	
    
	while (1) 
    {
		
    }
 50a:	ff cf       	rjmp	.-2      	; 0x50a <main+0x4a>

0000050c <PWM_init>:
void PWM_init()
{
	//Fast PWM mode, clear on compare match
	//TCCR0A|=(1<<COM0A1)|(1<<WGM01)|(1<<WGM00);
	//Phase correct, clear on compare match
	TCCR0A|=(1<<COM0A1)|(1<<WGM00);
 50c:	84 b5       	in	r24, 0x24	; 36
 50e:	81 68       	ori	r24, 0x81	; 129
 510:	84 bd       	out	0x24, r24	; 36
	TCCR0B|=(1<<CS00);	//no prescaler
 512:	85 b5       	in	r24, 0x25	; 37
 514:	81 60       	ori	r24, 0x01	; 1
 516:	85 bd       	out	0x25, r24	; 37
	//PWM pin
	DDRD|=(1<<PIND6);
 518:	56 9a       	sbi	0x0a, 6	; 10
 51a:	08 95       	ret

0000051c <timer2_init>:
}

void timer2_init()
{
	//TCNT2 = 3036;
	TCCR2B|=(1<<CS22)|(1<<CS21)|(1<<CS20); //1024 prescaler
 51c:	e1 eb       	ldi	r30, 0xB1	; 177
 51e:	f0 e0       	ldi	r31, 0x00	; 0
 520:	80 81       	ld	r24, Z
 522:	87 60       	ori	r24, 0x07	; 7
 524:	80 83       	st	Z, r24
	//enabling overflow interrupt
	TIMSK2|=(1<<TOIE2);
 526:	e0 e7       	ldi	r30, 0x70	; 112
 528:	f0 e0       	ldi	r31, 0x00	; 0
 52a:	80 81       	ld	r24, Z
 52c:	81 60       	ori	r24, 0x01	; 1
 52e:	80 83       	st	Z, r24
 530:	08 95       	ret

00000532 <__vector_9>:

}


ISR	(TIMER2_OVF_vect)
{
 532:	1f 92       	push	r1
 534:	0f 92       	push	r0
 536:	0f b6       	in	r0, 0x3f	; 63
 538:	0f 92       	push	r0
 53a:	11 24       	eor	r1, r1
 53c:	2f 93       	push	r18
 53e:	3f 93       	push	r19
 540:	8f 93       	push	r24
 542:	9f 93       	push	r25
	t++;
 544:	80 91 02 01 	lds	r24, 0x0102
 548:	90 91 03 01 	lds	r25, 0x0103
 54c:	01 96       	adiw	r24, 0x01	; 1
 54e:	90 93 03 01 	sts	0x0103, r25
 552:	80 93 02 01 	sts	0x0102, r24
	switch(state)
 556:	20 91 00 01 	lds	r18, 0x0100
 55a:	30 91 01 01 	lds	r19, 0x0101
 55e:	21 30       	cpi	r18, 0x01	; 1
 560:	31 05       	cpc	r19, r1
 562:	f9 f0       	breq	.+62     	; 0x5a2 <__vector_9+0x70>
 564:	1c f4       	brge	.+6      	; 0x56c <__vector_9+0x3a>
 566:	23 2b       	or	r18, r19
 568:	41 f0       	breq	.+16     	; 0x57a <__vector_9+0x48>
 56a:	4b c0       	rjmp	.+150    	; 0x602 <__vector_9+0xd0>
 56c:	22 30       	cpi	r18, 0x02	; 2
 56e:	31 05       	cpc	r19, r1
 570:	29 f1       	breq	.+74     	; 0x5bc <__vector_9+0x8a>
 572:	23 30       	cpi	r18, 0x03	; 3
 574:	31 05       	cpc	r19, r1
 576:	b1 f1       	breq	.+108    	; 0x5e4 <__vector_9+0xb2>
 578:	44 c0       	rjmp	.+136    	; 0x602 <__vector_9+0xd0>
	{
		case 0: OCR0A = OCR0A +	4;
 57a:	87 b5       	in	r24, 0x27	; 39
 57c:	8c 5f       	subi	r24, 0xFC	; 252
 57e:	87 bd       	out	0x27, r24	; 39
		if(t==61)
 580:	80 91 02 01 	lds	r24, 0x0102
 584:	90 91 03 01 	lds	r25, 0x0103
 588:	cd 97       	sbiw	r24, 0x3d	; 61
 58a:	d9 f5       	brne	.+118    	; 0x602 <__vector_9+0xd0>
		{
			state=1;
 58c:	81 e0       	ldi	r24, 0x01	; 1
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	90 93 01 01 	sts	0x0101, r25
 594:	80 93 00 01 	sts	0x0100, r24
			t=0;
 598:	10 92 03 01 	sts	0x0103, r1
 59c:	10 92 02 01 	sts	0x0102, r1
 5a0:	30 c0       	rjmp	.+96     	; 0x602 <__vector_9+0xd0>
		}
		break;
		case 1:	
		if(t==61)
 5a2:	cd 97       	sbiw	r24, 0x3d	; 61
 5a4:	71 f5       	brne	.+92     	; 0x602 <__vector_9+0xd0>
		{
			
			state=2;
 5a6:	82 e0       	ldi	r24, 0x02	; 2
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	90 93 01 01 	sts	0x0101, r25
 5ae:	80 93 00 01 	sts	0x0100, r24
			t=0;
 5b2:	10 92 03 01 	sts	0x0103, r1
 5b6:	10 92 02 01 	sts	0x0102, r1
 5ba:	23 c0       	rjmp	.+70     	; 0x602 <__vector_9+0xd0>
		}
		break;
		case 2:	OCR0A = OCR0A - 4;
 5bc:	87 b5       	in	r24, 0x27	; 39
 5be:	84 50       	subi	r24, 0x04	; 4
 5c0:	87 bd       	out	0x27, r24	; 39
		if(t==61)
 5c2:	80 91 02 01 	lds	r24, 0x0102
 5c6:	90 91 03 01 	lds	r25, 0x0103
 5ca:	cd 97       	sbiw	r24, 0x3d	; 61
 5cc:	d1 f4       	brne	.+52     	; 0x602 <__vector_9+0xd0>
		{
			state=3;
 5ce:	83 e0       	ldi	r24, 0x03	; 3
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	90 93 01 01 	sts	0x0101, r25
 5d6:	80 93 00 01 	sts	0x0100, r24
			t=0;
 5da:	10 92 03 01 	sts	0x0103, r1
 5de:	10 92 02 01 	sts	0x0102, r1
 5e2:	0f c0       	rjmp	.+30     	; 0x602 <__vector_9+0xd0>
		}
		break;
		case 3: OCR0A=0;
 5e4:	17 bc       	out	0x27, r1	; 39
		if(t==61)
 5e6:	80 91 02 01 	lds	r24, 0x0102
 5ea:	90 91 03 01 	lds	r25, 0x0103
 5ee:	cd 97       	sbiw	r24, 0x3d	; 61
 5f0:	41 f4       	brne	.+16     	; 0x602 <__vector_9+0xd0>
		{
			state=0;
 5f2:	10 92 01 01 	sts	0x0101, r1
 5f6:	10 92 00 01 	sts	0x0100, r1
			t=0;
 5fa:	10 92 03 01 	sts	0x0103, r1
 5fe:	10 92 02 01 	sts	0x0102, r1
		}
		break;
	}

}
 602:	9f 91       	pop	r25
 604:	8f 91       	pop	r24
 606:	3f 91       	pop	r19
 608:	2f 91       	pop	r18
 60a:	0f 90       	pop	r0
 60c:	0f be       	out	0x3f, r0	; 63
 60e:	0f 90       	pop	r0
 610:	1f 90       	pop	r1
 612:	18 95       	reti

00000614 <timer1_init>:

void timer1_init()
{
	//TIMER 1 (16 bit)    -    normal mode
	//prescaler 1024
	TCCR1B |=(1<<CS12)|(1<<CS10)|(1<<WGM12);
 614:	e1 e8       	ldi	r30, 0x81	; 129
 616:	f0 e0       	ldi	r31, 0x00	; 0
 618:	80 81       	ld	r24, Z
 61a:	8d 60       	ori	r24, 0x0D	; 13
 61c:	80 83       	st	Z, r24
	//enabling output compare match A
	TIMSK1 |= (1<<OCIE1A);
 61e:	ef e6       	ldi	r30, 0x6F	; 111
 620:	f0 e0       	ldi	r31, 0x00	; 0
 622:	80 81       	ld	r24, Z
 624:	82 60       	ori	r24, 0x02	; 2
 626:	80 83       	st	Z, r24
	//setting the output compare register A
	OCR1A = 15625;
 628:	89 e0       	ldi	r24, 0x09	; 9
 62a:	9d e3       	ldi	r25, 0x3D	; 61
 62c:	90 93 89 00 	sts	0x0089, r25
 630:	80 93 88 00 	sts	0x0088, r24
	
	//setting PIND7 as output - LED
	DDRD|=(1<<PIND7);
 634:	57 9a       	sbi	0x0a, 7	; 10
 636:	08 95       	ret

00000638 <__vector_11>:
}



ISR(TIMER1_COMPA_vect)
{
 638:	1f 92       	push	r1
 63a:	0f 92       	push	r0
 63c:	0f b6       	in	r0, 0x3f	; 63
 63e:	0f 92       	push	r0
 640:	11 24       	eor	r1, r1
 642:	2f 93       	push	r18
 644:	3f 93       	push	r19
 646:	4f 93       	push	r20
 648:	5f 93       	push	r21
 64a:	6f 93       	push	r22
 64c:	7f 93       	push	r23
 64e:	8f 93       	push	r24
 650:	9f 93       	push	r25
 652:	af 93       	push	r26
 654:	bf 93       	push	r27
 656:	ef 93       	push	r30
 658:	ff 93       	push	r31
	sending_temperature(temperatura);
 65a:	60 91 06 01 	lds	r22, 0x0106
 65e:	70 91 07 01 	lds	r23, 0x0107
 662:	80 91 08 01 	lds	r24, 0x0108
 666:	90 91 09 01 	lds	r25, 0x0109
 66a:	0e 94 73 01 	call	0x2e6	; 0x2e6 <sending_temperature>
	PORTD ^= ( 1 << PIND7 );
 66e:	8b b1       	in	r24, 0x0b	; 11
 670:	80 58       	subi	r24, 0x80	; 128
 672:	8b b9       	out	0x0b, r24	; 11
			display_digit(0);
			sec=0;
		}
	*/
	
}
 674:	ff 91       	pop	r31
 676:	ef 91       	pop	r30
 678:	bf 91       	pop	r27
 67a:	af 91       	pop	r26
 67c:	9f 91       	pop	r25
 67e:	8f 91       	pop	r24
 680:	7f 91       	pop	r23
 682:	6f 91       	pop	r22
 684:	5f 91       	pop	r21
 686:	4f 91       	pop	r20
 688:	3f 91       	pop	r19
 68a:	2f 91       	pop	r18
 68c:	0f 90       	pop	r0
 68e:	0f be       	out	0x3f, r0	; 63
 690:	0f 90       	pop	r0
 692:	1f 90       	pop	r1
 694:	18 95       	reti

00000696 <__divsf3>:
 696:	0e 94 5f 03 	call	0x6be	; 0x6be <__divsf3x>
 69a:	0c 94 47 04 	jmp	0x88e	; 0x88e <__fp_round>
 69e:	0e 94 40 04 	call	0x880	; 0x880 <__fp_pscB>
 6a2:	58 f0       	brcs	.+22     	; 0x6ba <__divsf3+0x24>
 6a4:	0e 94 39 04 	call	0x872	; 0x872 <__fp_pscA>
 6a8:	40 f0       	brcs	.+16     	; 0x6ba <__divsf3+0x24>
 6aa:	29 f4       	brne	.+10     	; 0x6b6 <__divsf3+0x20>
 6ac:	5f 3f       	cpi	r21, 0xFF	; 255
 6ae:	29 f0       	breq	.+10     	; 0x6ba <__divsf3+0x24>
 6b0:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_inf>
 6b4:	51 11       	cpse	r21, r1
 6b6:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__fp_szero>
 6ba:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_nan>

000006be <__divsf3x>:
 6be:	0e 94 58 04 	call	0x8b0	; 0x8b0 <__fp_split3>
 6c2:	68 f3       	brcs	.-38     	; 0x69e <__divsf3+0x8>

000006c4 <__divsf3_pse>:
 6c4:	99 23       	and	r25, r25
 6c6:	b1 f3       	breq	.-20     	; 0x6b4 <__divsf3+0x1e>
 6c8:	55 23       	and	r21, r21
 6ca:	91 f3       	breq	.-28     	; 0x6b0 <__divsf3+0x1a>
 6cc:	95 1b       	sub	r25, r21
 6ce:	55 0b       	sbc	r21, r21
 6d0:	bb 27       	eor	r27, r27
 6d2:	aa 27       	eor	r26, r26
 6d4:	62 17       	cp	r22, r18
 6d6:	73 07       	cpc	r23, r19
 6d8:	84 07       	cpc	r24, r20
 6da:	38 f0       	brcs	.+14     	; 0x6ea <__divsf3_pse+0x26>
 6dc:	9f 5f       	subi	r25, 0xFF	; 255
 6de:	5f 4f       	sbci	r21, 0xFF	; 255
 6e0:	22 0f       	add	r18, r18
 6e2:	33 1f       	adc	r19, r19
 6e4:	44 1f       	adc	r20, r20
 6e6:	aa 1f       	adc	r26, r26
 6e8:	a9 f3       	breq	.-22     	; 0x6d4 <__divsf3_pse+0x10>
 6ea:	35 d0       	rcall	.+106    	; 0x756 <__divsf3_pse+0x92>
 6ec:	0e 2e       	mov	r0, r30
 6ee:	3a f0       	brmi	.+14     	; 0x6fe <__divsf3_pse+0x3a>
 6f0:	e0 e8       	ldi	r30, 0x80	; 128
 6f2:	32 d0       	rcall	.+100    	; 0x758 <__divsf3_pse+0x94>
 6f4:	91 50       	subi	r25, 0x01	; 1
 6f6:	50 40       	sbci	r21, 0x00	; 0
 6f8:	e6 95       	lsr	r30
 6fa:	00 1c       	adc	r0, r0
 6fc:	ca f7       	brpl	.-14     	; 0x6f0 <__divsf3_pse+0x2c>
 6fe:	2b d0       	rcall	.+86     	; 0x756 <__divsf3_pse+0x92>
 700:	fe 2f       	mov	r31, r30
 702:	29 d0       	rcall	.+82     	; 0x756 <__divsf3_pse+0x92>
 704:	66 0f       	add	r22, r22
 706:	77 1f       	adc	r23, r23
 708:	88 1f       	adc	r24, r24
 70a:	bb 1f       	adc	r27, r27
 70c:	26 17       	cp	r18, r22
 70e:	37 07       	cpc	r19, r23
 710:	48 07       	cpc	r20, r24
 712:	ab 07       	cpc	r26, r27
 714:	b0 e8       	ldi	r27, 0x80	; 128
 716:	09 f0       	breq	.+2      	; 0x71a <__divsf3_pse+0x56>
 718:	bb 0b       	sbc	r27, r27
 71a:	80 2d       	mov	r24, r0
 71c:	bf 01       	movw	r22, r30
 71e:	ff 27       	eor	r31, r31
 720:	93 58       	subi	r25, 0x83	; 131
 722:	5f 4f       	sbci	r21, 0xFF	; 255
 724:	3a f0       	brmi	.+14     	; 0x734 <__divsf3_pse+0x70>
 726:	9e 3f       	cpi	r25, 0xFE	; 254
 728:	51 05       	cpc	r21, r1
 72a:	78 f0       	brcs	.+30     	; 0x74a <__divsf3_pse+0x86>
 72c:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_inf>
 730:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__fp_szero>
 734:	5f 3f       	cpi	r21, 0xFF	; 255
 736:	e4 f3       	brlt	.-8      	; 0x730 <__divsf3_pse+0x6c>
 738:	98 3e       	cpi	r25, 0xE8	; 232
 73a:	d4 f3       	brlt	.-12     	; 0x730 <__divsf3_pse+0x6c>
 73c:	86 95       	lsr	r24
 73e:	77 95       	ror	r23
 740:	67 95       	ror	r22
 742:	b7 95       	ror	r27
 744:	f7 95       	ror	r31
 746:	9f 5f       	subi	r25, 0xFF	; 255
 748:	c9 f7       	brne	.-14     	; 0x73c <__divsf3_pse+0x78>
 74a:	88 0f       	add	r24, r24
 74c:	91 1d       	adc	r25, r1
 74e:	96 95       	lsr	r25
 750:	87 95       	ror	r24
 752:	97 f9       	bld	r25, 7
 754:	08 95       	ret
 756:	e1 e0       	ldi	r30, 0x01	; 1
 758:	66 0f       	add	r22, r22
 75a:	77 1f       	adc	r23, r23
 75c:	88 1f       	adc	r24, r24
 75e:	bb 1f       	adc	r27, r27
 760:	62 17       	cp	r22, r18
 762:	73 07       	cpc	r23, r19
 764:	84 07       	cpc	r24, r20
 766:	ba 07       	cpc	r27, r26
 768:	20 f0       	brcs	.+8      	; 0x772 <__divsf3_pse+0xae>
 76a:	62 1b       	sub	r22, r18
 76c:	73 0b       	sbc	r23, r19
 76e:	84 0b       	sbc	r24, r20
 770:	ba 0b       	sbc	r27, r26
 772:	ee 1f       	adc	r30, r30
 774:	88 f7       	brcc	.-30     	; 0x758 <__divsf3_pse+0x94>
 776:	e0 95       	com	r30
 778:	08 95       	ret

0000077a <__fixsfsi>:
 77a:	0e 94 c4 03 	call	0x788	; 0x788 <__fixunssfsi>
 77e:	68 94       	set
 780:	b1 11       	cpse	r27, r1
 782:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__fp_szero>
 786:	08 95       	ret

00000788 <__fixunssfsi>:
 788:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__fp_splitA>
 78c:	88 f0       	brcs	.+34     	; 0x7b0 <__fixunssfsi+0x28>
 78e:	9f 57       	subi	r25, 0x7F	; 127
 790:	98 f0       	brcs	.+38     	; 0x7b8 <__fixunssfsi+0x30>
 792:	b9 2f       	mov	r27, r25
 794:	99 27       	eor	r25, r25
 796:	b7 51       	subi	r27, 0x17	; 23
 798:	b0 f0       	brcs	.+44     	; 0x7c6 <__fixunssfsi+0x3e>
 79a:	e1 f0       	breq	.+56     	; 0x7d4 <__fixunssfsi+0x4c>
 79c:	66 0f       	add	r22, r22
 79e:	77 1f       	adc	r23, r23
 7a0:	88 1f       	adc	r24, r24
 7a2:	99 1f       	adc	r25, r25
 7a4:	1a f0       	brmi	.+6      	; 0x7ac <__fixunssfsi+0x24>
 7a6:	ba 95       	dec	r27
 7a8:	c9 f7       	brne	.-14     	; 0x79c <__fixunssfsi+0x14>
 7aa:	14 c0       	rjmp	.+40     	; 0x7d4 <__fixunssfsi+0x4c>
 7ac:	b1 30       	cpi	r27, 0x01	; 1
 7ae:	91 f0       	breq	.+36     	; 0x7d4 <__fixunssfsi+0x4c>
 7b0:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fp_zero>
 7b4:	b1 e0       	ldi	r27, 0x01	; 1
 7b6:	08 95       	ret
 7b8:	0c 94 7a 04 	jmp	0x8f4	; 0x8f4 <__fp_zero>
 7bc:	67 2f       	mov	r22, r23
 7be:	78 2f       	mov	r23, r24
 7c0:	88 27       	eor	r24, r24
 7c2:	b8 5f       	subi	r27, 0xF8	; 248
 7c4:	39 f0       	breq	.+14     	; 0x7d4 <__fixunssfsi+0x4c>
 7c6:	b9 3f       	cpi	r27, 0xF9	; 249
 7c8:	cc f3       	brlt	.-14     	; 0x7bc <__fixunssfsi+0x34>
 7ca:	86 95       	lsr	r24
 7cc:	77 95       	ror	r23
 7ce:	67 95       	ror	r22
 7d0:	b3 95       	inc	r27
 7d2:	d9 f7       	brne	.-10     	; 0x7ca <__fixunssfsi+0x42>
 7d4:	3e f4       	brtc	.+14     	; 0x7e4 <__fixunssfsi+0x5c>
 7d6:	90 95       	com	r25
 7d8:	80 95       	com	r24
 7da:	70 95       	com	r23
 7dc:	61 95       	neg	r22
 7de:	7f 4f       	sbci	r23, 0xFF	; 255
 7e0:	8f 4f       	sbci	r24, 0xFF	; 255
 7e2:	9f 4f       	sbci	r25, 0xFF	; 255
 7e4:	08 95       	ret

000007e6 <__floatunsisf>:
 7e6:	e8 94       	clt
 7e8:	09 c0       	rjmp	.+18     	; 0x7fc <__floatsisf+0x12>

000007ea <__floatsisf>:
 7ea:	97 fb       	bst	r25, 7
 7ec:	3e f4       	brtc	.+14     	; 0x7fc <__floatsisf+0x12>
 7ee:	90 95       	com	r25
 7f0:	80 95       	com	r24
 7f2:	70 95       	com	r23
 7f4:	61 95       	neg	r22
 7f6:	7f 4f       	sbci	r23, 0xFF	; 255
 7f8:	8f 4f       	sbci	r24, 0xFF	; 255
 7fa:	9f 4f       	sbci	r25, 0xFF	; 255
 7fc:	99 23       	and	r25, r25
 7fe:	a9 f0       	breq	.+42     	; 0x82a <__floatsisf+0x40>
 800:	f9 2f       	mov	r31, r25
 802:	96 e9       	ldi	r25, 0x96	; 150
 804:	bb 27       	eor	r27, r27
 806:	93 95       	inc	r25
 808:	f6 95       	lsr	r31
 80a:	87 95       	ror	r24
 80c:	77 95       	ror	r23
 80e:	67 95       	ror	r22
 810:	b7 95       	ror	r27
 812:	f1 11       	cpse	r31, r1
 814:	f8 cf       	rjmp	.-16     	; 0x806 <__floatsisf+0x1c>
 816:	fa f4       	brpl	.+62     	; 0x856 <__floatsisf+0x6c>
 818:	bb 0f       	add	r27, r27
 81a:	11 f4       	brne	.+4      	; 0x820 <__floatsisf+0x36>
 81c:	60 ff       	sbrs	r22, 0
 81e:	1b c0       	rjmp	.+54     	; 0x856 <__floatsisf+0x6c>
 820:	6f 5f       	subi	r22, 0xFF	; 255
 822:	7f 4f       	sbci	r23, 0xFF	; 255
 824:	8f 4f       	sbci	r24, 0xFF	; 255
 826:	9f 4f       	sbci	r25, 0xFF	; 255
 828:	16 c0       	rjmp	.+44     	; 0x856 <__floatsisf+0x6c>
 82a:	88 23       	and	r24, r24
 82c:	11 f0       	breq	.+4      	; 0x832 <__floatsisf+0x48>
 82e:	96 e9       	ldi	r25, 0x96	; 150
 830:	11 c0       	rjmp	.+34     	; 0x854 <__floatsisf+0x6a>
 832:	77 23       	and	r23, r23
 834:	21 f0       	breq	.+8      	; 0x83e <__floatsisf+0x54>
 836:	9e e8       	ldi	r25, 0x8E	; 142
 838:	87 2f       	mov	r24, r23
 83a:	76 2f       	mov	r23, r22
 83c:	05 c0       	rjmp	.+10     	; 0x848 <__floatsisf+0x5e>
 83e:	66 23       	and	r22, r22
 840:	71 f0       	breq	.+28     	; 0x85e <__floatsisf+0x74>
 842:	96 e8       	ldi	r25, 0x86	; 134
 844:	86 2f       	mov	r24, r22
 846:	70 e0       	ldi	r23, 0x00	; 0
 848:	60 e0       	ldi	r22, 0x00	; 0
 84a:	2a f0       	brmi	.+10     	; 0x856 <__floatsisf+0x6c>
 84c:	9a 95       	dec	r25
 84e:	66 0f       	add	r22, r22
 850:	77 1f       	adc	r23, r23
 852:	88 1f       	adc	r24, r24
 854:	da f7       	brpl	.-10     	; 0x84c <__floatsisf+0x62>
 856:	88 0f       	add	r24, r24
 858:	96 95       	lsr	r25
 85a:	87 95       	ror	r24
 85c:	97 f9       	bld	r25, 7
 85e:	08 95       	ret

00000860 <__fp_inf>:
 860:	97 f9       	bld	r25, 7
 862:	9f 67       	ori	r25, 0x7F	; 127
 864:	80 e8       	ldi	r24, 0x80	; 128
 866:	70 e0       	ldi	r23, 0x00	; 0
 868:	60 e0       	ldi	r22, 0x00	; 0
 86a:	08 95       	ret

0000086c <__fp_nan>:
 86c:	9f ef       	ldi	r25, 0xFF	; 255
 86e:	80 ec       	ldi	r24, 0xC0	; 192
 870:	08 95       	ret

00000872 <__fp_pscA>:
 872:	00 24       	eor	r0, r0
 874:	0a 94       	dec	r0
 876:	16 16       	cp	r1, r22
 878:	17 06       	cpc	r1, r23
 87a:	18 06       	cpc	r1, r24
 87c:	09 06       	cpc	r0, r25
 87e:	08 95       	ret

00000880 <__fp_pscB>:
 880:	00 24       	eor	r0, r0
 882:	0a 94       	dec	r0
 884:	12 16       	cp	r1, r18
 886:	13 06       	cpc	r1, r19
 888:	14 06       	cpc	r1, r20
 88a:	05 06       	cpc	r0, r21
 88c:	08 95       	ret

0000088e <__fp_round>:
 88e:	09 2e       	mov	r0, r25
 890:	03 94       	inc	r0
 892:	00 0c       	add	r0, r0
 894:	11 f4       	brne	.+4      	; 0x89a <__fp_round+0xc>
 896:	88 23       	and	r24, r24
 898:	52 f0       	brmi	.+20     	; 0x8ae <__fp_round+0x20>
 89a:	bb 0f       	add	r27, r27
 89c:	40 f4       	brcc	.+16     	; 0x8ae <__fp_round+0x20>
 89e:	bf 2b       	or	r27, r31
 8a0:	11 f4       	brne	.+4      	; 0x8a6 <__fp_round+0x18>
 8a2:	60 ff       	sbrs	r22, 0
 8a4:	04 c0       	rjmp	.+8      	; 0x8ae <__fp_round+0x20>
 8a6:	6f 5f       	subi	r22, 0xFF	; 255
 8a8:	7f 4f       	sbci	r23, 0xFF	; 255
 8aa:	8f 4f       	sbci	r24, 0xFF	; 255
 8ac:	9f 4f       	sbci	r25, 0xFF	; 255
 8ae:	08 95       	ret

000008b0 <__fp_split3>:
 8b0:	57 fd       	sbrc	r21, 7
 8b2:	90 58       	subi	r25, 0x80	; 128
 8b4:	44 0f       	add	r20, r20
 8b6:	55 1f       	adc	r21, r21
 8b8:	59 f0       	breq	.+22     	; 0x8d0 <__fp_splitA+0x10>
 8ba:	5f 3f       	cpi	r21, 0xFF	; 255
 8bc:	71 f0       	breq	.+28     	; 0x8da <__fp_splitA+0x1a>
 8be:	47 95       	ror	r20

000008c0 <__fp_splitA>:
 8c0:	88 0f       	add	r24, r24
 8c2:	97 fb       	bst	r25, 7
 8c4:	99 1f       	adc	r25, r25
 8c6:	61 f0       	breq	.+24     	; 0x8e0 <__fp_splitA+0x20>
 8c8:	9f 3f       	cpi	r25, 0xFF	; 255
 8ca:	79 f0       	breq	.+30     	; 0x8ea <__fp_splitA+0x2a>
 8cc:	87 95       	ror	r24
 8ce:	08 95       	ret
 8d0:	12 16       	cp	r1, r18
 8d2:	13 06       	cpc	r1, r19
 8d4:	14 06       	cpc	r1, r20
 8d6:	55 1f       	adc	r21, r21
 8d8:	f2 cf       	rjmp	.-28     	; 0x8be <__fp_split3+0xe>
 8da:	46 95       	lsr	r20
 8dc:	f1 df       	rcall	.-30     	; 0x8c0 <__fp_splitA>
 8de:	08 c0       	rjmp	.+16     	; 0x8f0 <__fp_splitA+0x30>
 8e0:	16 16       	cp	r1, r22
 8e2:	17 06       	cpc	r1, r23
 8e4:	18 06       	cpc	r1, r24
 8e6:	99 1f       	adc	r25, r25
 8e8:	f1 cf       	rjmp	.-30     	; 0x8cc <__fp_splitA+0xc>
 8ea:	86 95       	lsr	r24
 8ec:	71 05       	cpc	r23, r1
 8ee:	61 05       	cpc	r22, r1
 8f0:	08 94       	sec
 8f2:	08 95       	ret

000008f4 <__fp_zero>:
 8f4:	e8 94       	clt

000008f6 <__fp_szero>:
 8f6:	bb 27       	eor	r27, r27
 8f8:	66 27       	eor	r22, r22
 8fa:	77 27       	eor	r23, r23
 8fc:	cb 01       	movw	r24, r22
 8fe:	97 f9       	bld	r25, 7
 900:	08 95       	ret

00000902 <__gesf2>:
 902:	0e 94 7d 05 	call	0xafa	; 0xafa <__fp_cmp>
 906:	08 f4       	brcc	.+2      	; 0x90a <__gesf2+0x8>
 908:	8f ef       	ldi	r24, 0xFF	; 255
 90a:	08 95       	ret

0000090c <__mulsf3>:
 90c:	0e 94 99 04 	call	0x932	; 0x932 <__mulsf3x>
 910:	0c 94 47 04 	jmp	0x88e	; 0x88e <__fp_round>
 914:	0e 94 39 04 	call	0x872	; 0x872 <__fp_pscA>
 918:	38 f0       	brcs	.+14     	; 0x928 <__mulsf3+0x1c>
 91a:	0e 94 40 04 	call	0x880	; 0x880 <__fp_pscB>
 91e:	20 f0       	brcs	.+8      	; 0x928 <__mulsf3+0x1c>
 920:	95 23       	and	r25, r21
 922:	11 f0       	breq	.+4      	; 0x928 <__mulsf3+0x1c>
 924:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_inf>
 928:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_nan>
 92c:	11 24       	eor	r1, r1
 92e:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__fp_szero>

00000932 <__mulsf3x>:
 932:	0e 94 58 04 	call	0x8b0	; 0x8b0 <__fp_split3>
 936:	70 f3       	brcs	.-36     	; 0x914 <__mulsf3+0x8>

00000938 <__mulsf3_pse>:
 938:	95 9f       	mul	r25, r21
 93a:	c1 f3       	breq	.-16     	; 0x92c <__mulsf3+0x20>
 93c:	95 0f       	add	r25, r21
 93e:	50 e0       	ldi	r21, 0x00	; 0
 940:	55 1f       	adc	r21, r21
 942:	62 9f       	mul	r22, r18
 944:	f0 01       	movw	r30, r0
 946:	72 9f       	mul	r23, r18
 948:	bb 27       	eor	r27, r27
 94a:	f0 0d       	add	r31, r0
 94c:	b1 1d       	adc	r27, r1
 94e:	63 9f       	mul	r22, r19
 950:	aa 27       	eor	r26, r26
 952:	f0 0d       	add	r31, r0
 954:	b1 1d       	adc	r27, r1
 956:	aa 1f       	adc	r26, r26
 958:	64 9f       	mul	r22, r20
 95a:	66 27       	eor	r22, r22
 95c:	b0 0d       	add	r27, r0
 95e:	a1 1d       	adc	r26, r1
 960:	66 1f       	adc	r22, r22
 962:	82 9f       	mul	r24, r18
 964:	22 27       	eor	r18, r18
 966:	b0 0d       	add	r27, r0
 968:	a1 1d       	adc	r26, r1
 96a:	62 1f       	adc	r22, r18
 96c:	73 9f       	mul	r23, r19
 96e:	b0 0d       	add	r27, r0
 970:	a1 1d       	adc	r26, r1
 972:	62 1f       	adc	r22, r18
 974:	83 9f       	mul	r24, r19
 976:	a0 0d       	add	r26, r0
 978:	61 1d       	adc	r22, r1
 97a:	22 1f       	adc	r18, r18
 97c:	74 9f       	mul	r23, r20
 97e:	33 27       	eor	r19, r19
 980:	a0 0d       	add	r26, r0
 982:	61 1d       	adc	r22, r1
 984:	23 1f       	adc	r18, r19
 986:	84 9f       	mul	r24, r20
 988:	60 0d       	add	r22, r0
 98a:	21 1d       	adc	r18, r1
 98c:	82 2f       	mov	r24, r18
 98e:	76 2f       	mov	r23, r22
 990:	6a 2f       	mov	r22, r26
 992:	11 24       	eor	r1, r1
 994:	9f 57       	subi	r25, 0x7F	; 127
 996:	50 40       	sbci	r21, 0x00	; 0
 998:	9a f0       	brmi	.+38     	; 0x9c0 <__mulsf3_pse+0x88>
 99a:	f1 f0       	breq	.+60     	; 0x9d8 <__mulsf3_pse+0xa0>
 99c:	88 23       	and	r24, r24
 99e:	4a f0       	brmi	.+18     	; 0x9b2 <__mulsf3_pse+0x7a>
 9a0:	ee 0f       	add	r30, r30
 9a2:	ff 1f       	adc	r31, r31
 9a4:	bb 1f       	adc	r27, r27
 9a6:	66 1f       	adc	r22, r22
 9a8:	77 1f       	adc	r23, r23
 9aa:	88 1f       	adc	r24, r24
 9ac:	91 50       	subi	r25, 0x01	; 1
 9ae:	50 40       	sbci	r21, 0x00	; 0
 9b0:	a9 f7       	brne	.-22     	; 0x99c <__mulsf3_pse+0x64>
 9b2:	9e 3f       	cpi	r25, 0xFE	; 254
 9b4:	51 05       	cpc	r21, r1
 9b6:	80 f0       	brcs	.+32     	; 0x9d8 <__mulsf3_pse+0xa0>
 9b8:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_inf>
 9bc:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__fp_szero>
 9c0:	5f 3f       	cpi	r21, 0xFF	; 255
 9c2:	e4 f3       	brlt	.-8      	; 0x9bc <__mulsf3_pse+0x84>
 9c4:	98 3e       	cpi	r25, 0xE8	; 232
 9c6:	d4 f3       	brlt	.-12     	; 0x9bc <__mulsf3_pse+0x84>
 9c8:	86 95       	lsr	r24
 9ca:	77 95       	ror	r23
 9cc:	67 95       	ror	r22
 9ce:	b7 95       	ror	r27
 9d0:	f7 95       	ror	r31
 9d2:	e7 95       	ror	r30
 9d4:	9f 5f       	subi	r25, 0xFF	; 255
 9d6:	c1 f7       	brne	.-16     	; 0x9c8 <__mulsf3_pse+0x90>
 9d8:	fe 2b       	or	r31, r30
 9da:	88 0f       	add	r24, r24
 9dc:	91 1d       	adc	r25, r1
 9de:	96 95       	lsr	r25
 9e0:	87 95       	ror	r24
 9e2:	97 f9       	bld	r25, 7
 9e4:	08 95       	ret

000009e6 <pow>:
 9e6:	fa 01       	movw	r30, r20
 9e8:	ee 0f       	add	r30, r30
 9ea:	ff 1f       	adc	r31, r31
 9ec:	30 96       	adiw	r30, 0x00	; 0
 9ee:	21 05       	cpc	r18, r1
 9f0:	31 05       	cpc	r19, r1
 9f2:	a1 f1       	breq	.+104    	; 0xa5c <pow+0x76>
 9f4:	61 15       	cp	r22, r1
 9f6:	71 05       	cpc	r23, r1
 9f8:	61 f4       	brne	.+24     	; 0xa12 <pow+0x2c>
 9fa:	80 38       	cpi	r24, 0x80	; 128
 9fc:	bf e3       	ldi	r27, 0x3F	; 63
 9fe:	9b 07       	cpc	r25, r27
 a00:	49 f1       	breq	.+82     	; 0xa54 <pow+0x6e>
 a02:	68 94       	set
 a04:	90 38       	cpi	r25, 0x80	; 128
 a06:	81 05       	cpc	r24, r1
 a08:	61 f0       	breq	.+24     	; 0xa22 <pow+0x3c>
 a0a:	80 38       	cpi	r24, 0x80	; 128
 a0c:	bf ef       	ldi	r27, 0xFF	; 255
 a0e:	9b 07       	cpc	r25, r27
 a10:	41 f0       	breq	.+16     	; 0xa22 <pow+0x3c>
 a12:	99 23       	and	r25, r25
 a14:	4a f5       	brpl	.+82     	; 0xa68 <pow+0x82>
 a16:	ff 3f       	cpi	r31, 0xFF	; 255
 a18:	e1 05       	cpc	r30, r1
 a1a:	31 05       	cpc	r19, r1
 a1c:	21 05       	cpc	r18, r1
 a1e:	19 f1       	breq	.+70     	; 0xa66 <pow+0x80>
 a20:	e8 94       	clt
 a22:	08 94       	sec
 a24:	e7 95       	ror	r30
 a26:	d9 01       	movw	r26, r18
 a28:	aa 23       	and	r26, r26
 a2a:	29 f4       	brne	.+10     	; 0xa36 <pow+0x50>
 a2c:	ab 2f       	mov	r26, r27
 a2e:	be 2f       	mov	r27, r30
 a30:	f8 5f       	subi	r31, 0xF8	; 248
 a32:	d0 f3       	brcs	.-12     	; 0xa28 <pow+0x42>
 a34:	10 c0       	rjmp	.+32     	; 0xa56 <pow+0x70>
 a36:	ff 5f       	subi	r31, 0xFF	; 255
 a38:	70 f4       	brcc	.+28     	; 0xa56 <pow+0x70>
 a3a:	a6 95       	lsr	r26
 a3c:	e0 f7       	brcc	.-8      	; 0xa36 <pow+0x50>
 a3e:	f7 39       	cpi	r31, 0x97	; 151
 a40:	50 f0       	brcs	.+20     	; 0xa56 <pow+0x70>
 a42:	19 f0       	breq	.+6      	; 0xa4a <pow+0x64>
 a44:	ff 3a       	cpi	r31, 0xAF	; 175
 a46:	38 f4       	brcc	.+14     	; 0xa56 <pow+0x70>
 a48:	9f 77       	andi	r25, 0x7F	; 127
 a4a:	9f 93       	push	r25
 a4c:	0d d0       	rcall	.+26     	; 0xa68 <pow+0x82>
 a4e:	0f 90       	pop	r0
 a50:	07 fc       	sbrc	r0, 7
 a52:	90 58       	subi	r25, 0x80	; 128
 a54:	08 95       	ret
 a56:	46 f0       	brts	.+16     	; 0xa68 <pow+0x82>
 a58:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_nan>
 a5c:	60 e0       	ldi	r22, 0x00	; 0
 a5e:	70 e0       	ldi	r23, 0x00	; 0
 a60:	80 e8       	ldi	r24, 0x80	; 128
 a62:	9f e3       	ldi	r25, 0x3F	; 63
 a64:	08 95       	ret
 a66:	4f e7       	ldi	r20, 0x7F	; 127
 a68:	9f 77       	andi	r25, 0x7F	; 127
 a6a:	5f 93       	push	r21
 a6c:	4f 93       	push	r20
 a6e:	3f 93       	push	r19
 a70:	2f 93       	push	r18
 a72:	0e 94 12 06 	call	0xc24	; 0xc24 <log>
 a76:	2f 91       	pop	r18
 a78:	3f 91       	pop	r19
 a7a:	4f 91       	pop	r20
 a7c:	5f 91       	pop	r21
 a7e:	0e 94 86 04 	call	0x90c	; 0x90c <__mulsf3>
 a82:	0c 94 4b 05 	jmp	0xa96	; 0xa96 <exp>
 a86:	29 f4       	brne	.+10     	; 0xa92 <pow+0xac>
 a88:	16 f0       	brts	.+4      	; 0xa8e <pow+0xa8>
 a8a:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_inf>
 a8e:	0c 94 7a 04 	jmp	0x8f4	; 0x8f4 <__fp_zero>
 a92:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_nan>

00000a96 <exp>:
 a96:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__fp_splitA>
 a9a:	a8 f3       	brcs	.-22     	; 0xa86 <pow+0xa0>
 a9c:	96 38       	cpi	r25, 0x86	; 134
 a9e:	a0 f7       	brcc	.-24     	; 0xa88 <pow+0xa2>
 aa0:	07 f8       	bld	r0, 7
 aa2:	0f 92       	push	r0
 aa4:	e8 94       	clt
 aa6:	2b e3       	ldi	r18, 0x3B	; 59
 aa8:	3a ea       	ldi	r19, 0xAA	; 170
 aaa:	48 eb       	ldi	r20, 0xB8	; 184
 aac:	5f e7       	ldi	r21, 0x7F	; 127
 aae:	0e 94 9c 04 	call	0x938	; 0x938 <__mulsf3_pse>
 ab2:	0f 92       	push	r0
 ab4:	0f 92       	push	r0
 ab6:	0f 92       	push	r0
 ab8:	4d b7       	in	r20, 0x3d	; 61
 aba:	5e b7       	in	r21, 0x3e	; 62
 abc:	0f 92       	push	r0
 abe:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <modf>
 ac2:	ec e7       	ldi	r30, 0x7C	; 124
 ac4:	f0 e0       	ldi	r31, 0x00	; 0
 ac6:	0e 94 a1 05 	call	0xb42	; 0xb42 <__fp_powser>
 aca:	4f 91       	pop	r20
 acc:	5f 91       	pop	r21
 ace:	ef 91       	pop	r30
 ad0:	ff 91       	pop	r31
 ad2:	e5 95       	asr	r30
 ad4:	ee 1f       	adc	r30, r30
 ad6:	ff 1f       	adc	r31, r31
 ad8:	49 f0       	breq	.+18     	; 0xaec <exp+0x56>
 ada:	fe 57       	subi	r31, 0x7E	; 126
 adc:	e0 68       	ori	r30, 0x80	; 128
 ade:	44 27       	eor	r20, r20
 ae0:	ee 0f       	add	r30, r30
 ae2:	44 1f       	adc	r20, r20
 ae4:	fa 95       	dec	r31
 ae6:	e1 f7       	brne	.-8      	; 0xae0 <exp+0x4a>
 ae8:	41 95       	neg	r20
 aea:	55 0b       	sbc	r21, r21
 aec:	0e 94 d4 05 	call	0xba8	; 0xba8 <ldexp>
 af0:	0f 90       	pop	r0
 af2:	07 fe       	sbrs	r0, 7
 af4:	0c 94 c8 05 	jmp	0xb90	; 0xb90 <inverse>
 af8:	08 95       	ret

00000afa <__fp_cmp>:
 afa:	99 0f       	add	r25, r25
 afc:	00 08       	sbc	r0, r0
 afe:	55 0f       	add	r21, r21
 b00:	aa 0b       	sbc	r26, r26
 b02:	e0 e8       	ldi	r30, 0x80	; 128
 b04:	fe ef       	ldi	r31, 0xFE	; 254
 b06:	16 16       	cp	r1, r22
 b08:	17 06       	cpc	r1, r23
 b0a:	e8 07       	cpc	r30, r24
 b0c:	f9 07       	cpc	r31, r25
 b0e:	c0 f0       	brcs	.+48     	; 0xb40 <__fp_cmp+0x46>
 b10:	12 16       	cp	r1, r18
 b12:	13 06       	cpc	r1, r19
 b14:	e4 07       	cpc	r30, r20
 b16:	f5 07       	cpc	r31, r21
 b18:	98 f0       	brcs	.+38     	; 0xb40 <__fp_cmp+0x46>
 b1a:	62 1b       	sub	r22, r18
 b1c:	73 0b       	sbc	r23, r19
 b1e:	84 0b       	sbc	r24, r20
 b20:	95 0b       	sbc	r25, r21
 b22:	39 f4       	brne	.+14     	; 0xb32 <__fp_cmp+0x38>
 b24:	0a 26       	eor	r0, r26
 b26:	61 f0       	breq	.+24     	; 0xb40 <__fp_cmp+0x46>
 b28:	23 2b       	or	r18, r19
 b2a:	24 2b       	or	r18, r20
 b2c:	25 2b       	or	r18, r21
 b2e:	21 f4       	brne	.+8      	; 0xb38 <__fp_cmp+0x3e>
 b30:	08 95       	ret
 b32:	0a 26       	eor	r0, r26
 b34:	09 f4       	brne	.+2      	; 0xb38 <__fp_cmp+0x3e>
 b36:	a1 40       	sbci	r26, 0x01	; 1
 b38:	a6 95       	lsr	r26
 b3a:	8f ef       	ldi	r24, 0xFF	; 255
 b3c:	81 1d       	adc	r24, r1
 b3e:	81 1d       	adc	r24, r1
 b40:	08 95       	ret

00000b42 <__fp_powser>:
 b42:	df 93       	push	r29
 b44:	cf 93       	push	r28
 b46:	1f 93       	push	r17
 b48:	0f 93       	push	r16
 b4a:	ff 92       	push	r15
 b4c:	ef 92       	push	r14
 b4e:	df 92       	push	r13
 b50:	7b 01       	movw	r14, r22
 b52:	8c 01       	movw	r16, r24
 b54:	68 94       	set
 b56:	06 c0       	rjmp	.+12     	; 0xb64 <__fp_powser+0x22>
 b58:	da 2e       	mov	r13, r26
 b5a:	ef 01       	movw	r28, r30
 b5c:	0e 94 99 04 	call	0x932	; 0x932 <__mulsf3x>
 b60:	fe 01       	movw	r30, r28
 b62:	e8 94       	clt
 b64:	a5 91       	lpm	r26, Z+
 b66:	25 91       	lpm	r18, Z+
 b68:	35 91       	lpm	r19, Z+
 b6a:	45 91       	lpm	r20, Z+
 b6c:	55 91       	lpm	r21, Z+
 b6e:	a6 f3       	brts	.-24     	; 0xb58 <__fp_powser+0x16>
 b70:	ef 01       	movw	r28, r30
 b72:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__addsf3x>
 b76:	fe 01       	movw	r30, r28
 b78:	97 01       	movw	r18, r14
 b7a:	a8 01       	movw	r20, r16
 b7c:	da 94       	dec	r13
 b7e:	69 f7       	brne	.-38     	; 0xb5a <__fp_powser+0x18>
 b80:	df 90       	pop	r13
 b82:	ef 90       	pop	r14
 b84:	ff 90       	pop	r15
 b86:	0f 91       	pop	r16
 b88:	1f 91       	pop	r17
 b8a:	cf 91       	pop	r28
 b8c:	df 91       	pop	r29
 b8e:	08 95       	ret

00000b90 <inverse>:
 b90:	9b 01       	movw	r18, r22
 b92:	ac 01       	movw	r20, r24
 b94:	60 e0       	ldi	r22, 0x00	; 0
 b96:	70 e0       	ldi	r23, 0x00	; 0
 b98:	80 e8       	ldi	r24, 0x80	; 128
 b9a:	9f e3       	ldi	r25, 0x3F	; 63
 b9c:	0c 94 4b 03 	jmp	0x696	; 0x696 <__divsf3>
 ba0:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_inf>
 ba4:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__fp_mpack>

00000ba8 <ldexp>:
 ba8:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__fp_splitA>
 bac:	d8 f3       	brcs	.-10     	; 0xba4 <inverse+0x14>
 bae:	99 23       	and	r25, r25
 bb0:	c9 f3       	breq	.-14     	; 0xba4 <inverse+0x14>
 bb2:	94 0f       	add	r25, r20
 bb4:	51 1d       	adc	r21, r1
 bb6:	a3 f3       	brvs	.-24     	; 0xba0 <inverse+0x10>
 bb8:	91 50       	subi	r25, 0x01	; 1
 bba:	50 40       	sbci	r21, 0x00	; 0
 bbc:	94 f0       	brlt	.+36     	; 0xbe2 <ldexp+0x3a>
 bbe:	59 f0       	breq	.+22     	; 0xbd6 <ldexp+0x2e>
 bc0:	88 23       	and	r24, r24
 bc2:	32 f0       	brmi	.+12     	; 0xbd0 <ldexp+0x28>
 bc4:	66 0f       	add	r22, r22
 bc6:	77 1f       	adc	r23, r23
 bc8:	88 1f       	adc	r24, r24
 bca:	91 50       	subi	r25, 0x01	; 1
 bcc:	50 40       	sbci	r21, 0x00	; 0
 bce:	c1 f7       	brne	.-16     	; 0xbc0 <ldexp+0x18>
 bd0:	9e 3f       	cpi	r25, 0xFE	; 254
 bd2:	51 05       	cpc	r21, r1
 bd4:	2c f7       	brge	.-54     	; 0xba0 <inverse+0x10>
 bd6:	88 0f       	add	r24, r24
 bd8:	91 1d       	adc	r25, r1
 bda:	96 95       	lsr	r25
 bdc:	87 95       	ror	r24
 bde:	97 f9       	bld	r25, 7
 be0:	08 95       	ret
 be2:	5f 3f       	cpi	r21, 0xFF	; 255
 be4:	ac f0       	brlt	.+42     	; 0xc10 <ldexp+0x68>
 be6:	98 3e       	cpi	r25, 0xE8	; 232
 be8:	9c f0       	brlt	.+38     	; 0xc10 <ldexp+0x68>
 bea:	bb 27       	eor	r27, r27
 bec:	86 95       	lsr	r24
 bee:	77 95       	ror	r23
 bf0:	67 95       	ror	r22
 bf2:	b7 95       	ror	r27
 bf4:	08 f4       	brcc	.+2      	; 0xbf8 <ldexp+0x50>
 bf6:	b1 60       	ori	r27, 0x01	; 1
 bf8:	93 95       	inc	r25
 bfa:	c1 f7       	brne	.-16     	; 0xbec <ldexp+0x44>
 bfc:	bb 0f       	add	r27, r27
 bfe:	58 f7       	brcc	.-42     	; 0xbd6 <ldexp+0x2e>
 c00:	11 f4       	brne	.+4      	; 0xc06 <ldexp+0x5e>
 c02:	60 ff       	sbrs	r22, 0
 c04:	e8 cf       	rjmp	.-48     	; 0xbd6 <ldexp+0x2e>
 c06:	6f 5f       	subi	r22, 0xFF	; 255
 c08:	7f 4f       	sbci	r23, 0xFF	; 255
 c0a:	8f 4f       	sbci	r24, 0xFF	; 255
 c0c:	9f 4f       	sbci	r25, 0xFF	; 255
 c0e:	e3 cf       	rjmp	.-58     	; 0xbd6 <ldexp+0x2e>
 c10:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__fp_szero>
 c14:	16 f0       	brts	.+4      	; 0xc1a <ldexp+0x72>
 c16:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__fp_mpack>
 c1a:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_nan>
 c1e:	68 94       	set
 c20:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_inf>

00000c24 <log>:
 c24:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__fp_splitA>
 c28:	a8 f3       	brcs	.-22     	; 0xc14 <ldexp+0x6c>
 c2a:	99 23       	and	r25, r25
 c2c:	c1 f3       	breq	.-16     	; 0xc1e <ldexp+0x76>
 c2e:	ae f3       	brts	.-22     	; 0xc1a <ldexp+0x72>
 c30:	df 93       	push	r29
 c32:	cf 93       	push	r28
 c34:	1f 93       	push	r17
 c36:	0f 93       	push	r16
 c38:	ff 92       	push	r15
 c3a:	c9 2f       	mov	r28, r25
 c3c:	dd 27       	eor	r29, r29
 c3e:	88 23       	and	r24, r24
 c40:	2a f0       	brmi	.+10     	; 0xc4c <log+0x28>
 c42:	21 97       	sbiw	r28, 0x01	; 1
 c44:	66 0f       	add	r22, r22
 c46:	77 1f       	adc	r23, r23
 c48:	88 1f       	adc	r24, r24
 c4a:	da f7       	brpl	.-10     	; 0xc42 <log+0x1e>
 c4c:	20 e0       	ldi	r18, 0x00	; 0
 c4e:	30 e0       	ldi	r19, 0x00	; 0
 c50:	40 e8       	ldi	r20, 0x80	; 128
 c52:	5f eb       	ldi	r21, 0xBF	; 191
 c54:	9f e3       	ldi	r25, 0x3F	; 63
 c56:	88 39       	cpi	r24, 0x98	; 152
 c58:	20 f0       	brcs	.+8      	; 0xc62 <log+0x3e>
 c5a:	80 3e       	cpi	r24, 0xE0	; 224
 c5c:	38 f0       	brcs	.+14     	; 0xc6c <log+0x48>
 c5e:	21 96       	adiw	r28, 0x01	; 1
 c60:	8f 77       	andi	r24, 0x7F	; 127
 c62:	0e 94 8f 06 	call	0xd1e	; 0xd1e <__addsf3>
 c66:	e4 ea       	ldi	r30, 0xA4	; 164
 c68:	f0 e0       	ldi	r31, 0x00	; 0
 c6a:	04 c0       	rjmp	.+8      	; 0xc74 <log+0x50>
 c6c:	0e 94 8f 06 	call	0xd1e	; 0xd1e <__addsf3>
 c70:	e1 ed       	ldi	r30, 0xD1	; 209
 c72:	f0 e0       	ldi	r31, 0x00	; 0
 c74:	0e 94 a1 05 	call	0xb42	; 0xb42 <__fp_powser>
 c78:	8b 01       	movw	r16, r22
 c7a:	be 01       	movw	r22, r28
 c7c:	ec 01       	movw	r28, r24
 c7e:	fb 2e       	mov	r15, r27
 c80:	6f 57       	subi	r22, 0x7F	; 127
 c82:	71 09       	sbc	r23, r1
 c84:	75 95       	asr	r23
 c86:	77 1f       	adc	r23, r23
 c88:	88 0b       	sbc	r24, r24
 c8a:	99 0b       	sbc	r25, r25
 c8c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatsisf>
 c90:	28 e1       	ldi	r18, 0x18	; 24
 c92:	32 e7       	ldi	r19, 0x72	; 114
 c94:	41 e3       	ldi	r20, 0x31	; 49
 c96:	5f e3       	ldi	r21, 0x3F	; 63
 c98:	0e 94 99 04 	call	0x932	; 0x932 <__mulsf3x>
 c9c:	af 2d       	mov	r26, r15
 c9e:	98 01       	movw	r18, r16
 ca0:	ae 01       	movw	r20, r28
 ca2:	ff 90       	pop	r15
 ca4:	0f 91       	pop	r16
 ca6:	1f 91       	pop	r17
 ca8:	cf 91       	pop	r28
 caa:	df 91       	pop	r29
 cac:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__addsf3x>
 cb0:	0c 94 47 04 	jmp	0x88e	; 0x88e <__fp_round>

00000cb4 <modf>:
 cb4:	fa 01       	movw	r30, r20
 cb6:	dc 01       	movw	r26, r24
 cb8:	aa 0f       	add	r26, r26
 cba:	bb 1f       	adc	r27, r27
 cbc:	9b 01       	movw	r18, r22
 cbe:	ac 01       	movw	r20, r24
 cc0:	bf 57       	subi	r27, 0x7F	; 127
 cc2:	28 f4       	brcc	.+10     	; 0xcce <modf+0x1a>
 cc4:	22 27       	eor	r18, r18
 cc6:	33 27       	eor	r19, r19
 cc8:	44 27       	eor	r20, r20
 cca:	50 78       	andi	r21, 0x80	; 128
 ccc:	20 c0       	rjmp	.+64     	; 0xd0e <modf+0x5a>
 cce:	b7 51       	subi	r27, 0x17	; 23
 cd0:	90 f4       	brcc	.+36     	; 0xcf6 <modf+0x42>
 cd2:	ab 2f       	mov	r26, r27
 cd4:	00 24       	eor	r0, r0
 cd6:	46 95       	lsr	r20
 cd8:	37 95       	ror	r19
 cda:	27 95       	ror	r18
 cdc:	01 1c       	adc	r0, r1
 cde:	a3 95       	inc	r26
 ce0:	d2 f3       	brmi	.-12     	; 0xcd6 <modf+0x22>
 ce2:	00 20       	and	r0, r0
 ce4:	71 f0       	breq	.+28     	; 0xd02 <modf+0x4e>
 ce6:	22 0f       	add	r18, r18
 ce8:	33 1f       	adc	r19, r19
 cea:	44 1f       	adc	r20, r20
 cec:	b3 95       	inc	r27
 cee:	da f3       	brmi	.-10     	; 0xce6 <modf+0x32>
 cf0:	0e d0       	rcall	.+28     	; 0xd0e <modf+0x5a>
 cf2:	0c 94 8e 06 	jmp	0xd1c	; 0xd1c <__subsf3>
 cf6:	61 30       	cpi	r22, 0x01	; 1
 cf8:	71 05       	cpc	r23, r1
 cfa:	a0 e8       	ldi	r26, 0x80	; 128
 cfc:	8a 07       	cpc	r24, r26
 cfe:	b9 46       	sbci	r27, 0x69	; 105
 d00:	30 f4       	brcc	.+12     	; 0xd0e <modf+0x5a>
 d02:	9b 01       	movw	r18, r22
 d04:	ac 01       	movw	r20, r24
 d06:	66 27       	eor	r22, r22
 d08:	77 27       	eor	r23, r23
 d0a:	88 27       	eor	r24, r24
 d0c:	90 78       	andi	r25, 0x80	; 128
 d0e:	30 96       	adiw	r30, 0x00	; 0
 d10:	21 f0       	breq	.+8      	; 0xd1a <modf+0x66>
 d12:	20 83       	st	Z, r18
 d14:	31 83       	std	Z+1, r19	; 0x01
 d16:	42 83       	std	Z+2, r20	; 0x02
 d18:	53 83       	std	Z+3, r21	; 0x03
 d1a:	08 95       	ret

00000d1c <__subsf3>:
 d1c:	50 58       	subi	r21, 0x80	; 128

00000d1e <__addsf3>:
 d1e:	bb 27       	eor	r27, r27
 d20:	aa 27       	eor	r26, r26
 d22:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__addsf3x>
 d26:	0c 94 47 04 	jmp	0x88e	; 0x88e <__fp_round>
 d2a:	0e 94 39 04 	call	0x872	; 0x872 <__fp_pscA>
 d2e:	38 f0       	brcs	.+14     	; 0xd3e <__addsf3+0x20>
 d30:	0e 94 40 04 	call	0x880	; 0x880 <__fp_pscB>
 d34:	20 f0       	brcs	.+8      	; 0xd3e <__addsf3+0x20>
 d36:	39 f4       	brne	.+14     	; 0xd46 <__addsf3+0x28>
 d38:	9f 3f       	cpi	r25, 0xFF	; 255
 d3a:	19 f4       	brne	.+6      	; 0xd42 <__addsf3+0x24>
 d3c:	26 f4       	brtc	.+8      	; 0xd46 <__addsf3+0x28>
 d3e:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_nan>
 d42:	0e f4       	brtc	.+2      	; 0xd46 <__addsf3+0x28>
 d44:	e0 95       	com	r30
 d46:	e7 fb       	bst	r30, 7
 d48:	0c 94 30 04 	jmp	0x860	; 0x860 <__fp_inf>

00000d4c <__addsf3x>:
 d4c:	e9 2f       	mov	r30, r25
 d4e:	0e 94 58 04 	call	0x8b0	; 0x8b0 <__fp_split3>
 d52:	58 f3       	brcs	.-42     	; 0xd2a <__addsf3+0xc>
 d54:	ba 17       	cp	r27, r26
 d56:	62 07       	cpc	r22, r18
 d58:	73 07       	cpc	r23, r19
 d5a:	84 07       	cpc	r24, r20
 d5c:	95 07       	cpc	r25, r21
 d5e:	20 f0       	brcs	.+8      	; 0xd68 <__addsf3x+0x1c>
 d60:	79 f4       	brne	.+30     	; 0xd80 <__addsf3x+0x34>
 d62:	a6 f5       	brtc	.+104    	; 0xdcc <__addsf3x+0x80>
 d64:	0c 94 7a 04 	jmp	0x8f4	; 0x8f4 <__fp_zero>
 d68:	0e f4       	brtc	.+2      	; 0xd6c <__addsf3x+0x20>
 d6a:	e0 95       	com	r30
 d6c:	0b 2e       	mov	r0, r27
 d6e:	ba 2f       	mov	r27, r26
 d70:	a0 2d       	mov	r26, r0
 d72:	0b 01       	movw	r0, r22
 d74:	b9 01       	movw	r22, r18
 d76:	90 01       	movw	r18, r0
 d78:	0c 01       	movw	r0, r24
 d7a:	ca 01       	movw	r24, r20
 d7c:	a0 01       	movw	r20, r0
 d7e:	11 24       	eor	r1, r1
 d80:	ff 27       	eor	r31, r31
 d82:	59 1b       	sub	r21, r25
 d84:	99 f0       	breq	.+38     	; 0xdac <__addsf3x+0x60>
 d86:	59 3f       	cpi	r21, 0xF9	; 249
 d88:	50 f4       	brcc	.+20     	; 0xd9e <__addsf3x+0x52>
 d8a:	50 3e       	cpi	r21, 0xE0	; 224
 d8c:	68 f1       	brcs	.+90     	; 0xde8 <__addsf3x+0x9c>
 d8e:	1a 16       	cp	r1, r26
 d90:	f0 40       	sbci	r31, 0x00	; 0
 d92:	a2 2f       	mov	r26, r18
 d94:	23 2f       	mov	r18, r19
 d96:	34 2f       	mov	r19, r20
 d98:	44 27       	eor	r20, r20
 d9a:	58 5f       	subi	r21, 0xF8	; 248
 d9c:	f3 cf       	rjmp	.-26     	; 0xd84 <__addsf3x+0x38>
 d9e:	46 95       	lsr	r20
 da0:	37 95       	ror	r19
 da2:	27 95       	ror	r18
 da4:	a7 95       	ror	r26
 da6:	f0 40       	sbci	r31, 0x00	; 0
 da8:	53 95       	inc	r21
 daa:	c9 f7       	brne	.-14     	; 0xd9e <__addsf3x+0x52>
 dac:	7e f4       	brtc	.+30     	; 0xdcc <__addsf3x+0x80>
 dae:	1f 16       	cp	r1, r31
 db0:	ba 0b       	sbc	r27, r26
 db2:	62 0b       	sbc	r22, r18
 db4:	73 0b       	sbc	r23, r19
 db6:	84 0b       	sbc	r24, r20
 db8:	ba f0       	brmi	.+46     	; 0xde8 <__addsf3x+0x9c>
 dba:	91 50       	subi	r25, 0x01	; 1
 dbc:	a1 f0       	breq	.+40     	; 0xde6 <__addsf3x+0x9a>
 dbe:	ff 0f       	add	r31, r31
 dc0:	bb 1f       	adc	r27, r27
 dc2:	66 1f       	adc	r22, r22
 dc4:	77 1f       	adc	r23, r23
 dc6:	88 1f       	adc	r24, r24
 dc8:	c2 f7       	brpl	.-16     	; 0xdba <__addsf3x+0x6e>
 dca:	0e c0       	rjmp	.+28     	; 0xde8 <__addsf3x+0x9c>
 dcc:	ba 0f       	add	r27, r26
 dce:	62 1f       	adc	r22, r18
 dd0:	73 1f       	adc	r23, r19
 dd2:	84 1f       	adc	r24, r20
 dd4:	48 f4       	brcc	.+18     	; 0xde8 <__addsf3x+0x9c>
 dd6:	87 95       	ror	r24
 dd8:	77 95       	ror	r23
 dda:	67 95       	ror	r22
 ddc:	b7 95       	ror	r27
 dde:	f7 95       	ror	r31
 de0:	9e 3f       	cpi	r25, 0xFE	; 254
 de2:	08 f0       	brcs	.+2      	; 0xde6 <__addsf3x+0x9a>
 de4:	b0 cf       	rjmp	.-160    	; 0xd46 <__addsf3+0x28>
 de6:	93 95       	inc	r25
 de8:	88 0f       	add	r24, r24
 dea:	08 f0       	brcs	.+2      	; 0xdee <__addsf3x+0xa2>
 dec:	99 27       	eor	r25, r25
 dee:	ee 0f       	add	r30, r30
 df0:	97 95       	ror	r25
 df2:	87 95       	ror	r24
 df4:	08 95       	ret

00000df6 <__fp_mpack>:
 df6:	9f 3f       	cpi	r25, 0xFF	; 255
 df8:	31 f0       	breq	.+12     	; 0xe06 <__fp_mpack_finite+0xc>

00000dfa <__fp_mpack_finite>:
 dfa:	91 50       	subi	r25, 0x01	; 1
 dfc:	20 f4       	brcc	.+8      	; 0xe06 <__fp_mpack_finite+0xc>
 dfe:	87 95       	ror	r24
 e00:	77 95       	ror	r23
 e02:	67 95       	ror	r22
 e04:	b7 95       	ror	r27
 e06:	88 0f       	add	r24, r24
 e08:	91 1d       	adc	r25, r1
 e0a:	96 95       	lsr	r25
 e0c:	87 95       	ror	r24
 e0e:	97 f9       	bld	r25, 7
 e10:	08 95       	ret

00000e12 <__divmodhi4>:
 e12:	97 fb       	bst	r25, 7
 e14:	07 2e       	mov	r0, r23
 e16:	16 f4       	brtc	.+4      	; 0xe1c <__divmodhi4+0xa>
 e18:	00 94       	com	r0
 e1a:	07 d0       	rcall	.+14     	; 0xe2a <__divmodhi4_neg1>
 e1c:	77 fd       	sbrc	r23, 7
 e1e:	09 d0       	rcall	.+18     	; 0xe32 <__divmodhi4_neg2>
 e20:	0e 94 23 07 	call	0xe46	; 0xe46 <__udivmodhi4>
 e24:	07 fc       	sbrc	r0, 7
 e26:	05 d0       	rcall	.+10     	; 0xe32 <__divmodhi4_neg2>
 e28:	3e f4       	brtc	.+14     	; 0xe38 <__divmodhi4_exit>

00000e2a <__divmodhi4_neg1>:
 e2a:	90 95       	com	r25
 e2c:	81 95       	neg	r24
 e2e:	9f 4f       	sbci	r25, 0xFF	; 255
 e30:	08 95       	ret

00000e32 <__divmodhi4_neg2>:
 e32:	70 95       	com	r23
 e34:	61 95       	neg	r22
 e36:	7f 4f       	sbci	r23, 0xFF	; 255

00000e38 <__divmodhi4_exit>:
 e38:	08 95       	ret

00000e3a <__tablejump2__>:
 e3a:	ee 0f       	add	r30, r30
 e3c:	ff 1f       	adc	r31, r31
 e3e:	05 90       	lpm	r0, Z+
 e40:	f4 91       	lpm	r31, Z
 e42:	e0 2d       	mov	r30, r0
 e44:	09 94       	ijmp

00000e46 <__udivmodhi4>:
 e46:	aa 1b       	sub	r26, r26
 e48:	bb 1b       	sub	r27, r27
 e4a:	51 e1       	ldi	r21, 0x11	; 17
 e4c:	07 c0       	rjmp	.+14     	; 0xe5c <__udivmodhi4_ep>

00000e4e <__udivmodhi4_loop>:
 e4e:	aa 1f       	adc	r26, r26
 e50:	bb 1f       	adc	r27, r27
 e52:	a6 17       	cp	r26, r22
 e54:	b7 07       	cpc	r27, r23
 e56:	10 f0       	brcs	.+4      	; 0xe5c <__udivmodhi4_ep>
 e58:	a6 1b       	sub	r26, r22
 e5a:	b7 0b       	sbc	r27, r23

00000e5c <__udivmodhi4_ep>:
 e5c:	88 1f       	adc	r24, r24
 e5e:	99 1f       	adc	r25, r25
 e60:	5a 95       	dec	r21
 e62:	a9 f7       	brne	.-22     	; 0xe4e <__udivmodhi4_loop>
 e64:	80 95       	com	r24
 e66:	90 95       	com	r25
 e68:	bc 01       	movw	r22, r24
 e6a:	cd 01       	movw	r24, r26
 e6c:	08 95       	ret

00000e6e <_exit>:
 e6e:	f8 94       	cli

00000e70 <__stop_program>:
 e70:	ff cf       	rjmp	.-2      	; 0xe70 <__stop_program>
